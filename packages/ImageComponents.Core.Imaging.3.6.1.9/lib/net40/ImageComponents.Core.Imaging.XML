<?xml version="1.0"?>
<doc>
  <assembly>
    <name>ImageComponents.Core.Imaging</name>
  </assembly>
  <members>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject">
      <summary>
            Image Components Image Object Core.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.#ctor">
      <summary>
            ICImageObject Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.NewImageObject">
      <summary>
            Create a new instance of the ICImageObject object to use in a non graphic user interface project.
            </summary>
      <example> This sample shows how to create a new instance of the ICImageObject object.
            <code lang="C#">
              ImageComponents.Core.Imaging.ICImageObject m_ImageObject = ImageComponents.Core.Imaging.ICImageObject.NewImageObject();
            </code><code lang="vbnet">
              Dim m_ImageObject as ImageComponents.Core.Imaging.ICImageObject = ImageComponents.Core.Imaging.ICImageObject.NewImageObject()
            </code></example>
      <returns>A new instance of the ICImageObject object.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Dispose">
      <summary>
            Clean up any resources being used.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">Is object disposing.</param>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageManager">
      <summary>
            Gets or sets the Image Manager object.
            </summary>
      <returns> Gets the Image Manager object..</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.EnableAsynchronousWork">
      <summary>
            Gets or sets the multi thread work value.
            </summary>
      <value>Sets the multi thread work value.</value>
      <returns>Gets the multi thread work value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageFilePath">
      <summary>
            Gets or sets the image file path.
            </summary>
      <value>Sets the image file path.</value>
      <returns>Gets the image file path.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.Page">
      <summary>
            Gets or sets the displayed image page.
            </summary>
      <value>Sets the displayed image page number.</value>
      <returns>Gets the displayed image page number.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.PageLabel">
      <summary>
            Gets or sets the displayed image label.
            </summary>
      <value>Sets the displayed image page label.</value>
      <returns>Gets the displayed image page label.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.PageCount">
      <summary>
            Gets the number of pages of the displayed image.
            </summary>
      <returns>Gets the number of pages of the displayed image.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SelectedPage">
      <summary>
            Gets the selected page number.
            </summary>
      <returns>Gets the selected page number.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.HasSelectionRectangle">
      <summary>
            Gets the has selection rectangle value.
            </summary>
      <returns>Gets the has selection rectangle value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SelectionRectangle">
      <summary>
            Gets the selection rectangle values.
            </summary>
      <returns>Gets the selection rectangle values.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.PagePreviewSize">
      <summary>
            Gets or sets the image page preview size.
            </summary>
      <value>Sets the image page preview size.</value>
      <returns>Gets the image page preview size.</returns>
      <remarks>The biggest width or height display size.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.IsImageDirty">
      <summary>
            Gets the value if the loaded image has being changed.
            </summary>
      <returns>Gets the value if the loaded image has being changed.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SaveImageFormat">
      <summary>
            Gets or sets the output image format.
            </summary>
      <value>Sets the output image format.</value>
      <returns>Gets the output image format.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SaveImageCompression">
      <summary>
            Gets or sets the output image compression.
            </summary>
      <value>Sets the output image compression.</value>
      <returns>Gets the output image compression.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SavePageOptions">
      <summary>
            Gets or sets the output image save page option.
            </summary>
      <value>Sets the output image save page option.</value>
      <returns>Gets the output image save page option.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SaveOutputType">
      <summary>
            Gets or sets the output image save type.
            </summary>
      <value>Sets the output image save type.</value>
      <returns>Gets the output image save type.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SavePageRange">
      <summary>
            Gets or sets the output image save page range.
            </summary>
      <value>Sets the output image save page range.</value>
      <returns>Gets the output image save page range.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SaveJPGQuality">
      <summary>
            Gets or sets the output jpg image save quality.
            </summary>
      <value>Sets the output jpg image save quality.</value>
      <returns>Gets the output jpg image save quality.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SaveJPGFlags">
      <summary>
            Gets or sets the output jpg image save flags.
            </summary>
      <value>Sets the output jpg image save flags.</value>
      <returns>Gets the output jpg image save flags.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SavePNGFlags">
      <summary>
            Gets or sets the output png image save flags.
            </summary>
      <value>Sets the output png image save flags.</value>
      <returns>Gets the output png image save flags.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SavePDFAsSearchable">
      <summary>
            Gets or sets the output PDF file as search able.
            </summary>
      <value>Sets the output PDF file as search able.</value>
      <returns>Gets the output PDF file as search able.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SavePDFAsPDFA">
      <summary>
            Gets or sets the output PDF file as PDFA1.
            </summary>
      <value>Sets the output PDF file as PDFA1.</value>
      <returns>Gets the output PDF file as PDFA1.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SaveBurnAnnotations">
      <summary>
            Gets or sets the burn annotations on save.
            </summary>
      <value>Sets the burn annotations on save.</value>
      <returns>Gets the burn annotations on save.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageSavedOutput">
      <summary>
            Gets the image saved output result.
            </summary>
      <returns>Gets the image saved output result.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.CompressSavedStream">
      <summary>
             Gets or sets the save compressed stream value.
             </summary>
      <value>Sets the save compressed stream value.</value>
      <returns>Gets the save compressed stream value.</returns>
      <remarks>If the stream is compressed the image will be unavailable to other image viewers.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.PDFViewDPISize">
      <summary>
            Gets or sets the PDF view DPI size.
            </summary>
      <value>Sets the PDF view DPI size.</value>
      <returns>Gets the PDF view DPI size.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.PDFPassword">
      <summary>
            Gets or sets the PDF document password.
            </summary>
      <value>Sets the PDF document password.</value>
      <returns>Gets the PDF document password.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SavePDFPermissions">
      <summary>
            Gets or sets the PDF document save permissions.
            </summary>
      <value>Sets the PDF document save permissions.</value>
      <returns>Gets the PDF document save permissions.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.PDFSecurityValues">
      <summary>
            Gets or sets the PDF document security values.
            </summary>
      <value>Sets the PDF document security values.</value>
      <returns>Gets the PDF document security values.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.PDFOutlineItems">
      <summary>
            Gets the PDF outline items.
            </summary>
      <returns>Gets the PDF outline items.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.OCRLanguagesPath">
      <summary>
            Gets or sets the OCR custom languages path.
            </summary>
      <value>Sets the OCR custom languages path.</value>
      <returns>Gets the OCR custom languages path.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageOCRLanguage">
      <summary>
            Gets or sets the image OCR language.
            </summary>
      <value>Sets the image OCR language.</value>
      <returns>Gets the image OCR language.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageOCRLanguages">
      <summary>
            Gets or sets the image OCR languages.
            </summary>
      <value>Sets the image OCR languages.</value>
      <returns>Gets the image OCR languages.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageOCRType">
      <summary>
            Gets or sets the image OCR type.
            </summary>
      <value>Sets the image OCR type.</value>
      <returns>Gets the image OCR type.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageOCRPageType">
      <summary>
            Gets or sets the image OCR page type.
            </summary>
      <value>Sets the image OCR page type.</value>
      <returns>Gets the image OCR page type.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageOCRFormatType">
      <summary>
            Gets or Set Image OCR output format type.
            </summary>
      <value>Sets the image OCR output format type.</value>
      <returns>Gets the image OCR output format type.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageOCRCustomLanguages">
      <summary>
            Get/Set Image OCR custom OCR Languages.
            </summary>
      <value>Sets the image custom OCR Languages.</value>
      <returns>Gets the image custom OCR Languages.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageOCRVariables">
      <summary>
            Get/Set Image OCR variables.
            </summary>
      <value>Sets the image OCR variables.</value>
      <returns>Gets the image OCR variables.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.OCRNumericOnly">
      <summary>
            Gets or sets the OCR numeric reading only.
            </summary>
      <value>Sets the OCR numeric reading only.</value>
      <returns>Gets the OCR numeric reading only.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.OCRWhiteList">
      <summary>
            Gets or sets the OCR recognition white list.
            </summary>
      <value>Sets the OCR recognition white list.</value>
      <returns>Gets the OCR recognition white list.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.OCRBlackList">
      <summary>
            Gets or sets the OCR recognition black list.
            </summary>
      <value>Sets the OCR recognition black list.</value>
      <returns>Gets the OCR recognition black list.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.OCRAutoOrientation">
      <summary>
            Gets or sets the OCR page orientation detection.
            </summary>
      <value>Sets the OCR page orientation detection.</value>
      <returns>Gets the OCR page orientation detection.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.DisableTextReader">
      <summary>
            Enables or disables the text reading and uses the OCR engine for text extraction.
            </summary>
      <value>Sets the value of the text reading status.</value>
      <returns>Gets the value of the text reading status.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.PrinterName">
      <summary>
            Gets or sets the printer name.
            </summary>
      <value>Sets the printer name.</value>
      <returns>Gets the printer name.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.PrintWithAnnotations">
      <summary>
            Gets or sets the print image with annotations.
            </summary>
      <value>Sets the print image with annotations.</value>
      <returns>Gets the print image with annotations.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ShowPrinterSettings">
      <summary>
            Gets or sets the visibility of the printer settings dialog.
            </summary>
      <value>Sets the visibility of the printer settings dialog.</value>
      <returns>Gets the visibility of the printer settings dialog.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ShowPrintingDialog">
      <summary>
            Gets or sets the visibility of the printing dialog.
            </summary>
      <value>Sets the visibility of the printing dialog.</value>
      <returns>Gets the visibility of the printing dialog.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImagePrintFitOptions">
      <summary>
            Gets or sets the image print fit options.
            </summary>
      <value>Sets the image print fit options.</value>
      <returns>Gets the image print fit options.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImagePrintOrientation">
      <summary>
            Gets or sets the image print orientation.
            </summary>
      <value>Sets the image print orientation.</value>
      <returns>Gets the image print orientation.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageFileProperties">
      <summary>
            Gets the loaded image properties.
            </summary>
      <returns>Gets the loaded image properties.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImagePageProperties">
      <summary>
            Gets the displayed page properties.
            </summary>
      <returns>Gets the displayed page properties.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImagePageMetadata">
      <summary>
            Gets or sets the displayed page meta-data.
            </summary>
      <value>Sets the displayed page meta-data.</value>
      <returns>Gets the displayed page meta-data.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImagePagePaperSize">
      <summary>
            Gets or sets the displayed page paper size.
            </summary>
      <value>Sets the displayed page paper size.</value>
      <returns>Gets the displayed page paper size.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.DrawCanvas">
      <summary>
            Gets the image display canvas.
            </summary>
      <returns>Gets the image display canvas.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.EnableChangesStorage">
      <summary>
            Gets or sets the enable undo/redo operations.
            </summary>
      <value>Sets the enable undo/redo operations.</value>
      <returns>Gets the enable undo/redo operations.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.FTPSettings">
      <summary>
            Gets the FTP server settings.
            </summary>
      <returns> Gets the FTP server settings.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.DataSettings">
      <summary>
            Gets or sets the Database server settings.
            </summary>
      <value>Sets the Database server settings.</value>
      <returns> Gets the Database server settings.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.LastError">
      <summary>
            Gets the last error message.
            </summary>
      <returns>Gets the last error message.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ErrorTraceOutputType">
      <summary>
            Gets or sets the trace log output type.
            </summary>
      <value>Sets the trace log output type.</value>
      <returns>Gets the trace log output type.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ErrorFilePath">
      <summary>
            Gets or sets the error log file path.
            </summary>
      <value>Sets the error log file path.</value>
      <returns>Gets the error log file path.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.Registration">
      <summary>
            Loads the component registration dialog.
            </summary>
      <returns>Gets the developer machine key code.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ICImageAnnotations">
      <summary>
            Gets or sets the actual image annotations definition byte array.
            </summary>
      <value>Sets the actual image annotations definition byte array.</value>
      <returns> Gets the actual image annotations definition byte array.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.AnnotationObjects">
      <summary>
            Gets the annotation objects of the current page.
            </summary>
      <returns>Gets the annotation objects of the current page.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ReadBarcodePageType">
      <summary>
            Gets or sets the image Barcode page read type.
            </summary>
      <value>Sets the image Barcode page read type.</value>
      <returns>Gets the image Barcode page read type.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ReadBarcodeTypes">
      <summary>
            Gets or sets the image barcode read types.
            </summary>
      <value>Sets the image barcode read types.</value>
      <returns>Gets the image barcode read types.</returns>
      <remarks>Set the list empty do decode all supported types.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ReadBarcodeOrientations">
      <summary>
            Gets or sets the image barcode read orientation.
            </summary>
      <value>Sets the image barcode read orientation.</value>
      <returns>Gets the image barcode read orientation.</returns>
      <remarks>Set the list empty do decode in all directions.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.StopOnFirstResult">
      <summary>
            Gets or sets the stop barcode read on first result.
            </summary>
      <value>Sets the stop barcode read on first result.</value>
      <returns>Gets the stop barcode read on first result.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.EnableCheckDigit">
      <summary>
            Enabled or disables the barcode check digit.
            </summary>
      <value>Sets the value of the barcode check digit.</value>
      <returns>Gets the value of the barcode check digit.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageBarcodeSearchMode">
      <summary>
            Gets or sets the barcode search mode.
            </summary>
      <value>Sets the barcode search mode.</value>
      <returns>Gets the barcode search mode.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ReadBarcodesResults">
      <summary>
            Gets the image barcode read results.
            </summary>
      <returns>Gets the image barcode read results.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.EnableMessageLoop">
      <summary>
            Gets or sets the internal message loop value.
            </summary>
      <value>Sets the internal message loop value.</value>
      <returns>Gets the internal message loop value.</returns>
      <remarks>Enable the message loop if the component is called from a console or a service application.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.UseTwain32Manager">
      <summary>
            Enables or disables the use of the old twain 1.9 specification manager.
            </summary>
      <value>Sets the use of the old twain 1.9 specification manager.</value>
      <returns>Gets the use of the old twain 1.9 specification manager.</returns>
      <remarks>Setting the value 'true' enables the twain 1.9 specification manager(twain_32.dll).</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ShowScannerUI">
      <summary>
            Gets or sets the display of the scanner driver settings window.
            </summary>
      <value>Sets the display of the scanner driver settings window.</value>
      <returns>Gets the display of the scanner driver settings window.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ShowIndicators">
      <summary>
            Gets or sets the display of the scanner dialogs.
            </summary>
      <value>Sets the display of the scanner dialogs.</value>
      <returns>Gets the display of the scanner dialogs.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ActiveSourceName">
      <summary>
            Gets or sets the active scanner source name.
            </summary>
      <value>Sets the active scanner source name.</value>
      <returns>Gets the active scanner source name.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageAcquireMode">
      <summary>
            Gets or sets the scanned multi page image acquire mode.
            </summary>
      <value>Sets the scanned multi page image acquire mode.</value>
      <returns>Gets the scanned multi page image acquire mode.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.DeviceDriverType">
      <summary>
            Gets or sets the device driver type.
            </summary>
      <value>Sets the device driver type.</value>
      <returns>Gets the device driver type.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.InsertAtPosition">
      <summary>
            Gets or sets the position of the scanned image pages.
            </summary>
      <value>Sets the position of the scanned image pages.</value>
      <returns>Gets the position of the scanned image pages.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.RaiseFeederEmptyError">
      <summary>
            Gets or sets the raise feeder empty error.
            </summary>
      <value>Sets the raise feeder empty error.</value>
      <returns>Gets the raise feeder empty error.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageFileDirectory">
      <summary>
            Gets or sets the output single page files directory.
            </summary>
      <value>Sets the output single page files directory.</value>
      <returns>Gets the output single page files directory.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SaveFileNamePrefix">
      <summary>
            Gets or sets the output image file name prefix.
            </summary>
      <value>Sets the output image file name prefix.</value>
      <returns>Gets the output image file name prefix.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.EnablePreview">
      <summary>
            Gets or sets the enable scan preview.
            </summary>
      <value>Sets the enable scan preview.</value>
      <returns>Gets the enable scan preview.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageBinarizationFilter">
      <summary>
            Gets or sets the image page binarization filter type.
            </summary>
      <value>Sets the image page binarization filter type.</value>
      <returns>Gets the image page binarization filter type.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.RemoveBlankPages">
      <summary>
            Gets or sets the remove blank pages value.
            </summary>
      <value>Sets the remove blank pages value.</value>
      <returns>Gets the remove blank pages value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageRotation">
      <summary>
            Gets or sets the page output rotation.
            </summary>
      <value>Sets the page output rotation.</value>
      <returns>Gets the page output rotation.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.RemoveImagePageBorders">
      <summary>
            Gets or sets the remove image page borders value.
            </summary>
      <value>Sets  the remove image page borders value.</value>
      <returns>Gets  the remove image page borders value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImagePageSeparation">
      <summary>
            Gets or sets the image page separation type.
            </summary>
      <value>Sets the image page separation type.</value>
      <returns>Gets the image page separation type.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageSeparationSettings">
      <summary>
            Gets or sets the image page separation settings.
            </summary>
      <value>Sets the image page separation settings.</value>
      <returns>Gets the image page separation settings.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.GetTwainSettings">
      <summary>
            Gets the current twain device user interface capabilities.
            </summary>
      <returns>Gets the current twain device user interface capabilities.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SetTwainSettings">
      <summary>
            Sets the twain device user interface capabilities.
            </summary>
      <returns>Gets the twain device user interface capabilities.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.GetWiaSettings">
      <summary>
            Gets the current wia device user interface settings.
            </summary>
      <returns>Gets the current wia device user interface settings.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.SetWiaSettings">
      <summary>
            Sets the wia device user interface settings.
            </summary>
      <returns>Gets the wia device user interface settings.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.TwainSettings">
      <summary>
            Gets or sets the twain device user interface capabilities.
            </summary>
      <value>Sets the twain device user interface capabilities.</value>
      <returns>Gets or sets the twain device user interface capabilities.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.CameraSettings">
      <summary>
            Gets or sets the camera device user interface capabilities.
            </summary>
      <value>Sets the camera device user interface capabilities.</value>
      <returns>Gets or sets the camera device user interface capabilities.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.EncodeBarcodeValue">
      <summary>
            Gets or sets the string value to encode.
            </summary>
      <value>Sets the string value to encode.</value>
      <returns>Gets the string value to encode.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.EncodeBarcodeHeaderValue">
      <summary>
            Gets or sets the string image barcode header value.
            </summary>
      <value>Sets the string image barcode header value.</value>
      <returns>Gets the string image barcode header value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.EncodedBarcodeValue">
      <summary>
            Gets the binary barcode encoded value.
            </summary>
      <returns>Gets the binary barcode encoded value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.EncodeBarcodeType">
      <summary>
            Gets or sets the barcode type to encode.
            </summary>
      <value>Sets the barcode type to encode.</value>
      <returns>Gets the barcode type to encode.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.EncodedBarcodeResult">
      <summary>
            Gets the final encoded barcode result.
            </summary>
      <returns>Gets the final encoded barcode result.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.BarcodeForeColor">
      <summary>
            Gets or sets the barcode bars, header and footer text fore-color.
            </summary>
      <value>Sets the bar, header and footer text fore-color.</value>
      <returns>Gets the barcode bars, header and footer text fore-color.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.EncodeBarcodeBackColor">
      <summary>
            Gets or sets the encoded barcode image back-color.
            </summary>
      <value>Sets the encoded barcode image back-color.</value>
      <returns>Gets the encoded barcode image back-color.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.EncodeBarcodeWidth">
      <summary>
            Gets or sets the encoded barcode image width.
            </summary>
      <value>Sets the encoded barcode image width.</value>
      <returns>Gets the encoded barcode image width.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.EncodeBarcodeHeight">
      <summary>
            Gets or sets the encoded barcode image height.
            </summary>
      <value>Sets the encoded barcode image height.</value>
      <returns>Gets the encoded barcode image height.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ShowBarcodeFooter">
      <summary>
            Gets or sets the visibility of the footer value.
            </summary>
      <value>Sets the visibility of the footer value.</value>
      <returns>Gets the visibility of the footer value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ShowBarcodeHeader">
      <summary>
            Gets or sets the visibility of the header value.
            </summary>
      <value>Sets the visibility of the header value.</value>
      <returns>Gets the visibility of the header value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.BarcodeManufacturerCode">
      <summary>
            Gets the EAN8 AND EAN13 manufacturer code.
            </summary>
      <returns>Gets the EAN8 AND EAN13 manufacturer code.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.ImageLoadedEventHandler">
      <summary>
            Occurs every successfully loaded image.
            </summary>
      <param name="sender">ICImageObject component object.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.ImageLoaded">
      <summary>
            Occurs every successfully loaded image.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.ImageChangedEventHandler">
      <summary>
            Occurs every successfully changed image.
            </summary>
      <param name="sender">ICImageObject component object.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.ImageChanged">
      <summary>
            Occurs every successfully changed image.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.ImageSavedEventHandler">
      <summary>
            Occurs every successfully saved image.
            </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="e">Image saved output event args.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.ImageSaved">
      <summary>
            Occurs every successfully saved image.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.ImageClosedEventHandler">
      <summary>
            Occurs every successfully closed image.
            </summary>
      <param name="sender">ICImageObject component object.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.ImageClosed">
      <summary>
            Occurs every successfully closed image.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.PageLoadedEventHandler">
      <summary>
            Occurs every successfully loaded page.
            </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="PagePosition">The page position in the image.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.PageLoaded">
      <summary>
            Occurs every successfully loaded page.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.PageSavedEventHandler">
      <summary>
            Occurs every successfully saved image page.
            </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="e">Image page saved output event args.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.PageSaved">
      <summary>
            Occurs every successfully saved image page.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.PageChangedEventHandler">
      <summary>
            Occurs every successfully changed page.
            </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="PagePosition">The page position in the image.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.PageChanged">
      <summary>
            Occurs every successfully changed page.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.PageRequestedEventHandler">
      <summary>
            Occurs every requested image page values.
            </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="e">Image requested event args.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.PageRequested">
      <summary>
             Occurs every requested image page values.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.PagePreviewRequestedEventHandler">
      <summary>
            Occurs every requested image page preview.
            </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="e">Image requested event args.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.PagePreviewRequested">
      <summary>
             Occurs every requested image page preview.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.PageDisplayedEventHandler">
      <summary>
            Occurs every successfully displayed page.
            </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="PagePosition">The page position in the image.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.PageDisplayed">
      <summary>
            Occurs every successfully displayed page.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.PageNavigatedEventHandler">
      <summary>
            Occurs every successfully navigated page.
            </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="PagePosition">The page position in the image.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.PageNavigated">
      <summary>
             Occurs every successfully navigated page.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.SelectionStartedEventHandler">
      <summary>
             Occurs when a image selection is started.
             </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="e">Selection event args location and size.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.SelectionStarted">
      <summary>
            Occurs when a image selection is started.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.SelectionEventHandler">
      <summary>
             Occurs when a image selection is in progress.
             </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="e">Selection event args location and size.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.SelectionChanged">
      <summary>
            Occurs when a image selection is in progress.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.SelectionFinishedEventHandler">
      <summary>
             Occurs when a image selection is completed.
             </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="e">Selection event args location and size.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.SelectionFinished">
      <summary>
            Occurs when a image selection is completed.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.OCRCompletedEventHandler">
      <summary>
            Occurs in every successful completed page OCR.
            </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="PagePosition">The page position in the image.</param>
      <param name="Result">The OCR image word list collection.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.OCRCompleted">
      <summary>
            Occurs in every successful completed page OCR.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.OCRZoneCompletedEventHandler">
      <summary>
            Occurs in every successful completed page zone OCR.
            </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="PagePosition">The page position in the image.</param>
      <param name="ZoneID">OCR zone ID.</param>
      <param name="Result">The OCR text results.</param>
      <param name="ResultList">The OCR image zone word list collection.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.OCRZoneCompleted">
      <summary>
            Occurs in every successful completed page zone OCR.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.ScreenCaptureCompletedEventHandler">
      <summary>
            Occurs when the screen capture function is completed.
            </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="ScreenCaptured">Screen captured successfully.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.ScreenCaptureCompleted">
      <summary>
            Occurs when the screen capture function is completed.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.TextSearchCompletedEventHandler">
      <summary>
            Occurs in every completed page text search.
            </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="PagePosition">The page position in the image.</param>
      <param name="Result">The searched word list collection.</param>
      <param name="SearchFinished">Text search finished.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.TextSearchCompleted">
      <summary>
            Occurs in every completed page text search.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.ErrorOccurredEventHandler">
      <summary>
            Occurs every time one error is raised.
            </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="ControlName">The control name were the error was raised.</param>
      <param name="MethodName">The method name were the error was raised.</param>
      <param name="ErrorMessage">The error message.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.ErrorOccurred">
      <summary>
            Occurs every time one error is raised.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.WorkingProgressEventHandler">
      <summary>
            Occurs in every processed item long work.
            </summary>
      <param name="sender">ICImageObject component object.</param>
      <param name="Total">The total number of items to work.</param>
      <param name="Value">The work item index.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.WorkingProgress">
      <summary>
            Occurs in every processed long work.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.WorkingStartedEventHandler">
      <summary>
            Occurs in every start process long work.
            </summary>
      <param name="sender">ICImageObject component object.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.WorkingStarted">
      <summary>
            Occurs in every start process long work.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.WorkingFinishedEventHandler">
      <summary>
            Occurs in every finished process long work.
            </summary>
      <param name="sender">ICImageObject component object.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.WorkingFinished">
      <summary>
            Occurs in every finished process long work.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.ScanResultHandler">
      <summary>
            Occurs on every barcode scan result.
            </summary>
      <param name="sender">Sender object.</param>
      <param name="Result">The barcode scan result.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.BarcodeReadScanResult">
      <summary>
            Occurs on every barcode scan result.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.BarcodeReadFinishedHandler">
      <summary>
            Occurs when the barcode read is finished.
            </summary>
      <param name="sender">Sender object.</param>
      <param name="Sucess">Successful or unsuccessful results.</param>
      <param name="Message">Error message.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.BarcodeReadFinished">
      <summary>
            Occurs when the barcode read is finished.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.ScanStartedHandler">
      <summary>
            Occurs every time for every scan image start.
            </summary>
      <param name="sender">Sender object.</param>
      <param name="e">Scan started event args.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.ScanStarted">
      <summary>
            Occurs every time for every scan image start.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.ScanPageStartedHandler">
      <summary>
            Occurs every time for every scan image page start.
            </summary>
      <param name="sender">Sender object.</param>
      <param name="e">Scan started event args.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.ScanPageStarted">
      <summary>
            Occurs every time for every scan image page start.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.ScanFinishedHandler">
      <summary>
            Occurs when the scan operation has terminated.
            </summary>
      <param name="sender">Sender object.</param>
      <param name="e">Scan event args.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.ScanFinished">
      <summary>
            Occurs when the scan operation has terminated.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.ScanPageFinishedHandler">
      <summary>
            Occurs every time for every finished scanned image page.
            </summary>
      <param name="sender">Sender object.</param>
      <param name="e">Scan event args.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.ScanPageFinished">
      <summary>
            Occurs every time for every finished scanned image.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.ScanImageSplittedHandler">
      <summary>
            Occurs every time the scanned image is split.
            </summary>
      <param name="sender">Sender object.</param>
      <param name="e">Scan event args.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.ScanImageSplitted">
      <summary>
            Occurs every time the scanned image is split.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.CloseDataSourceRequestedHandler">
      <summary>
            Occurs every time the data source is closing.
            </summary>
      <param name="sender">Sender object.</param>
      <param name="message">Data source message.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.CloseDataSourceRequested">
      <summary>
            Occurs every time the data source is closing.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.CameraFrameCapturedHandler">
      <summary>
            Occurs every time for every camera captured frame.
            </summary>
      <param name="sender">Sender object.</param>
      <param name="e">Scan event args.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.CameraFrameCaptured">
      <summary>
            Occurs every time for every camera captured frame.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.CameraImageCapturedHandler">
      <summary>
            Occurs every time for every camera captured image.
            </summary>
      <param name="sender">Sender object.</param>
      <param name="e">Scan event args.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.CameraImageCaptured">
      <summary>
            Occurs every time for every camera captured image.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.EncodeStartedEventHandler">
      <summary>
            Occurs when the barcode encode is started.
            </summary>
      <param name="sender">Sender object.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.EncodeStarted">
      <summary>
            Occurs when the barcode encode is started.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.EncodeFinishedEventHandler">
      <summary>
            Occurs when the barcode encode is finished.
            </summary>
      <param name="sender">Sender object.</param>
      <param name="Result">The barcode encode result.</param>
    </member>
    <member name="E:ImageComponents.Core.Imaging.ICImageObject.EncodeFinished">
      <summary>
            Occurs when the barcode encode is finished.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.NewImage(ImageComponents.Core.Imaging.ICImageSizeTemplate,ImageComponents.Core.Imaging.ICImageDPISize,System.Drawing.Color)">
      <summary>
            Creates a new template image in memory and displays it.
            </summary>
      <param name="ImageTemplate">The image size template.</param>
      <param name="DPISize">The image dpi size.</param>
      <param name="BackColor">The image background color.</param>
      <example> This sample shows how to create and display a new image bitmap in memory.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              m_ImageObject.NewImage(ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A4, ImageComponents.Core.Imaging.ICImageDPISize.DPI_200, Colors.White)
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              m_ImageObject.NewImage(ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A4, ImageComponents.Core.Imaging.ICImageDPISize.DPI_200, Colors.White);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.NewImage(System.Int32,System.Int32,ImageComponents.Core.Imaging.ICImageDPISize,System.Drawing.Color)">
      <summary>
             Creates a new image in memory and displays it.
            </summary>
      <param name="PixelWidth">The image width pixel size.</param>
      <param name="PixelHeight">The image height pixel size.</param>
      <param name="DPISize">The image dpi size.</param>
      <param name="BackColor">The image background color.</param>
      <example> This sample shows how to create a new image bitmap in memory.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              m_ImageObject.NewImage(100, 200, ImageComponents.Core.Imaging.ICImageDPISize.DPI_200, Colors.White)
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              m_ImageObject.NewImage(100, 200, ImageComponents.Core.Imaging.ICImageDPISize.DPI_200, Colors.White);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.NewImagePage(ImageComponents.Core.Imaging.ICImageSizeTemplate,ImageComponents.Core.Imaging.ICImageDPISize,System.Drawing.Color)">
      <summary>
            Creates a new template image page in memory and displays it.
            </summary>
      <param name="ImageTemplate">The image size template.</param>
      <param name="DPISize">The image dpi size.</param>
      <param name="BackColor">The image background color.</param>
      <example> This sample shows how to create and display a new image page bitmap in memory.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              m_ImageObject.NewImagePage(ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A4, ImageComponents.Core.Imaging.ICImageDPISize.DPI_200, Colors.White)
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              m_ImageObject.NewImagePage(ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A4, ImageComponents.Core.Imaging.ICImageDPISize.DPI_200, Colors.White);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.NewImagePage(System.Int32,System.Int32,ImageComponents.Core.Imaging.ICImageDPISize,System.Drawing.Color)">
      <summary>
             Creates a new image page in memory and displays it.
            </summary>
      <param name="PixelWidth">The image width pixel size.</param>
      <param name="PixelHeight">The image height pixel size.</param>
      <param name="DPISize">The image dpi size.</param>
      <param name="BackColor">The image background color.</param>
      <example> This sample shows how to create a new image bitmap page in memory.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              m_ImageObject.NewImagePage(100, 200, ImageComponents.Core.Imaging.ICImageDPISize.DPI_200, Colors.White)
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              m_ImageObject.NewImagePage(100, 200, ImageComponents.Core.Imaging.ICImageDPISize.DPI_200, Colors.White);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Load">
      <summary>
            Loads the image file name in memory and displays it.
            </summary>
      <example> This sample shows how to display a image file.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              m_ImageObject.ImageFilePath  = "C:\Test.tif"
              m_ImageObject.Load()
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              m_ImageObject.ImageFilePath  = "C:\\Test.tif";
              m_ImageObject.Load();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Load(System.String)">
      <summary>
            Loads the image file name in memory and displays it.
            </summary>
      <param name="FileName">The image file name.</param>
      <example> This sample shows how to display a image file name.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              m_ImageObject.Load(m_FileDialog.FileName)
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              m_ImageObject.Load(m_FileDialog.FileName);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Load(System.IO.FileStream)">
      <summary>
            Loads the image file stream in memory and displays it.
            </summary>
      <param name="ImageFileStream">The image file stream.</param>
      <example> This sample shows how to display a image file stream.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs as FileStream = m_FileDialog.OpenFile()
              m_ImageObject.Load(fs)
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              FileStream fs = m_FileDialog.OpenFile() as FileStream;
              m_ImageObject.Load(fs);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Load(System.Byte[])">
      <summary>
            Loads the image byte array and displays it.
            </summary>
      <param name="ImageSource">The image source byte array.</param>
      <example> This sample shows how to display a image from a image byte array.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs as FileStream = m_FileDialog.OpenFile()
              Dim br As New BinaryReader(ImageFileStream)
              Dim m_ImageByteArray As Byte() = New Byte(ImageFileStream.Length - 1) 
              m_ImageByteArray = br.ReadBytes(CInt(ImageFileStream.Length))
              br.Close()
              br = Nothing
              fs.Close()
              fs.Dispose()
              m_ImageObject.Load(m_ImageByteArray)
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              FileStream fs = m_FileDialog.OpenFile() as FileStream;
              BinaryReader br = new BinaryReader(fs);
              Byte[] m_ImageByteArray = new Byte[fs.Length];
              m_ImageByteArray = br.ReadBytes((int)fs.Length);
              br.Close();
              br = null;
              fs.Close();
              fs.Dispose();
              m_ImageObject.Load(m_ImageByteArray);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Load(System.Uri)">
      <summary>
            Loads the image Uri in memory and displays it.
            </summary>
      <param name="ImageUri">The image resource identifier path.</param>
      <example> This sample shows how to display a image Uri.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              m_ImageObject.Load(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute))
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              m_ImageObject.Load(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute));
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.LoadAsync(System.Uri)">
      <summary>
            Loads the image Uri in memory and displays it asynchronously.
            </summary>
      <param name="ImageUri">The image resource identifier path.</param>
      <example> This sample shows how to display a image Uri.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              m_ImageObject.LoadAsync(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute))
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              m_ImageObject.LoadAsync(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute));
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Load(System.Drawing.Bitmap)">
      <summary>
            Loads the bitmap in memory and displays it.
            </summary>
      <param name="ImageBitmap">The image bitmap.</param>
      <example> This sample shows how to display a image bitmap.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              Dim bmp As System.Drawing.Bitmap = New System.Drawing.Bitmap("C:\Test.tif")
              m_ImageObject.Load(bmp)
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              System.Drawing.Bitmap bmp = new System.Drawing.Bitmap("C:\\Test.tif");
              m_ImageObject.Load(bmp);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Load(ImageComponents.Core.Imaging.ICFTPSettings)">
      <summary>
            Loads the image in memory from a FTP server and displays it.
            </summary>
      <param name="ftpSettings">The image FTP settings.</param>
      <example> This sample shows how to display a image from a FTP server.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              Dim m_FTPSettings As ICFTPSettings = New ICFTPSettings()
              m_FTPSettings.FTPUrl = "ftp://myftpserver/myftpfolder/myftpfile.pdf";
              m_FTPSettings.FTPUserName = "myUserName"
              m_FTPSettings.FTPPassword = "myPassword"
              m_ImageObject.Load(m_FTPSettings)
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              ICFTPSettings m_FTPSettings = new ICFTPSettings();
              m_FTPSettings.FTPUrl = "ftp://myftpserver/myftpfolder/myftpfile.pdf";
              m_FTPSettings.FTPUserName = "myUserName";
              m_FTPSettings.FTPPassword = "myPassword";
              m_ImageObject.Load(m_FTPSettings);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Load(ImageComponents.Core.Imaging.IDataAccess)">
      <summary>
            Loads the image in memory from a Database server and displays it.
            </summary>
      <param name="dataSettings">The image  Database settings.</param>
      <example> This sample shows how to display a image from a Microsoft SQL Database server.
            <code lang="vbnet">
              Dim m_DataSettings as ICMSSQLDataAccess = New ICMSSQLDataAccess()
              m_DataSettings.ConnectionString = string.Format(m_DataSettings.ConnectionString, "MYSERVER", "MyDatabase", "MyUser", "MyPassword")
              m_DataSettings.GetValueScript = string.Format(m_DataSettings.GetValueScript, "MyField", "MyTable", "MyPKField = 1")
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              m_ImageObject.Load(m_DataSettings)
            </code><code lang="C#">
              ICMSSQLDataAccess m_DataSettings = new ICMSSQLDataAccess();
              m_DataSettings.ConnectionString = string.Format(m_DataSettings.ConnectionString, "MYSERVER", "MyDatabase", "MyUser", "MyPassword");
              m_DataSettings.GetValueScript = string.Format(m_DataSettings.GetValueScript, "MyField", "MyTable", "MyPKField = 1");
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              m_ImgObject.Load(m_DataSettings);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ImgEditRefresh(System.Boolean)">
      <summary>
            Refreshes the ImgEdit component.
            </summary>
      <param name="Repaint">Repaints the selected image page.</param>
      <example> The following example refreshes the ImgEdit component without repainting the displayed image.
            <code lang="vbnet">
              m_ImageObject.ImgEditRefresh(False)
            </code><code lang="C#">
              m_ImageObject.ImgEditRefresh(false);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.RotateLeft">
      <summary>
            Rotates the displayed image to the left.
            </summary>
      <example>The following example rotates the displayed image to the left.
            <code lang="vbnet">
              m_ImageObject.RotateLeft()
            </code><code lang="C#">
              m_ImageObject.RotateLeft();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.RotateLeftAsync">
      <summary>
            Rotates the displayed image to the left asynchronously.
            </summary>
      <example>The following example rotates the displayed image to the left asynchronously.
            <code lang="vbnet">
              m_ImageObject.RotateLeftAsync()
            </code><code lang="C#">
              m_ImageObject.RotateLeftAsync();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.RotateRight">
      <summary>
            Rotates the displayed image to the right asynchronously.
            </summary>
      <example>The following example rotates the displayed image to the right asynchronously.
            <code lang="vbnet">
              m_ImageObject.RotateRight()
            </code><code lang="C#">
              m_ImageObject.RotateRight();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.RotateRightAsync">
      <summary>
            Rotates the displayed image to the right.
            </summary>
      <example>The following example rotates the displayed image to the right.
            <code lang="vbnet">
              m_ImageObject.RotateRightAsync()
            </code><code lang="C#">
              m_ImageObject.RotateRightAsync();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Rotate(System.Single)">
      <summary>
            Rotates the displayed image to a specified angle.
            </summary>
      <param name="Angle">The image rotation angle.</param>
      <example>The following example rotates the displayed image page with a 45 angle.
            <code lang="vbnet">
              m_ImageObject.Rotate(45)
            </code><code lang="C#">
              m_ImageObject.Rotate(45);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.RotateAsync(System.Single)">
      <summary>
            Rotates the displayed image to a specified angle asynchronously.
            </summary>
      <param name="Angle">The image rotation angle.</param>
      <example>The following example rotates the displayed image page with a 45 angle asynchronously.
            <code lang="vbnet">
              m_ImageObject.RotateAsync(45)
            </code><code lang="C#">
              m_ImageObject.RotateAsync(45);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Rotate(System.Single,System.Boolean)">
      <summary>
            Rotates the displayed image to a specified angle.
            </summary>
      <param name="Angle">The image rotation angle.</param>
      <param name="PreserveEdges">Rotates the image preserving the image edges.</param>
      <example>The following example rotates the displayed image page with a 45 angle, preserving the image edges.
            <code lang="vbnet">
              m_ImageObject.Rotate(45, True)
            </code><code lang="C#">
              m_ImageObject.Rotate(45, true);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.RotateAsync(System.Single,System.Boolean)">
      <summary>
            Rotates the displayed image to a specified angle asynchronously.
            </summary>
      <param name="Angle">The image rotation angle.</param>
      <param name="PreserveEdges">Rotates the image preserving the image edges.</param>
      <example>The following example rotates the displayed image page with a 45 angle, preserving the image edges asynchronously.
            <code lang="vbnet">
              m_ImageObject.RotateAsync(45, True)
            </code><code lang="C#">
              m_ImageObject.RotateAsync(45, true);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Rotate(System.Int32,System.Single)">
      <summary>
            Rotates the specified image page to a specified angle.
            </summary>
      <param name="PageNumber">The page position to rotate.</param>
      <param name="Angle">The image rotation angle.</param>
      <example>The following example rotates the specified image page with a 45 angle.
            <code lang="vbnet">
              m_ImageObject.Rotate(45)
            </code><code lang="C#">
              m_ImageObject.Rotate(45);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.RotateAsync(System.Int32,System.Single)">
      <summary>
            Rotates the specified image page to a specified angle asynchronously.
            </summary>
      <param name="PageNumber">The page position to rotate.</param>
      <param name="Angle">The image rotation angle.</param>
      <example>The following example rotates the specified image page with a 45 angle asynchronously.
            <code lang="vbnet">
              m_ImageObject.RotateAsync(45)
            </code><code lang="C#">
              m_ImageObject.RotateAsync(45);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Rotate(System.Int32,System.Single,System.Boolean)">
      <summary>
            Rotates the specified image page to a specified angle.
            </summary>
      <param name="PageNumber">The page position to rotate.</param>
      <param name="Angle">The image rotation angle.</param>
      <param name="PreserveEdges">Rotates the image preserving the image edges.</param>
      <example>The following example rotates the specified image with a 45 angle, preserving the image edges.
            <code lang="vbnet">
              m_ImageObject.Rotate(45, True)
            </code><code lang="C#">
              m_ImageObject.Rotate(45, true);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.RotateAsync(System.Int32,System.Single,System.Boolean)">
      <summary>
            Rotates the specified image page to a specified angle asynchronously.
            </summary>
      <param name="PageNumber">The page position to rotate.</param>
      <param name="Angle">The image rotation angle.</param>
      <param name="PreserveEdges">Rotates the image preserving the image edges.</param>
      <example>The following example rotates the specified image with a 45 angle, preserving the image edges asynchronously.
            <code lang="vbnet">
              m_ImageObject.RotateAsync(45, True)
            </code><code lang="C#">
              m_ImageObject.RotateAsync(45, true);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Flip">
      <summary>
            Flips the displayed image.
            </summary>
      <example>The following example flips the displayed image.
            <code lang="vbnet">
              m_ImageObject.Flip()
            </code><code lang="C#">
              m_ImageObject.Flip();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FlipAsync">
      <summary>
            Flips the displayed image asynchronously.
            </summary>
      <example>The following example flips the displayed image asynchronously.
            <code lang="vbnet">
              m_ImageObject.FlipAsync()
            </code><code lang="C#">
              m_ImageObject.FlipAsync();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Mirror">
      <summary>
            Mirrors the displayed image.
            </summary>
      <example>The following example mirrors the displayed image.
            <code lang="vbnet">
              m_ImageObject.Mirror()
            </code><code lang="C#">
              m_ImageObject.Mirror();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.MirrorAsync">
      <summary>
            Mirrors the displayed image asynchronously.
            </summary>
      <example>The following example mirrors the displayed image asynchronously.
            <code lang="vbnet">
              m_ImageObject.MirrorAsync()
            </code><code lang="C#">
              m_ImageObject.MirrorAsync();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AutoRotate">
      <summary>
            Auto detects the displayed image page orientation.
            </summary>
      <example>The following example detects and rotates the displayed image page.
            <code lang="vbnet">
              m_ImageObject.AutoRotate()
            </code><code lang="C#">
              m_ImageObject.AutoRotate();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AutoRotateAsync">
      <summary>
            Auto detects the displayed image page orientation.
            </summary>
      <example>The following example detects and rotates the displayed image page.
            <code lang="vbnet">
              m_ImageObject.AutoRotate()
            </code><code lang="C#">
              m_ImageObject.AutoRotate();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ResizeImage(System.Single)">
      <summary>
            Resizes the displayed image to the specified value.
            </summary>
      <param name="Value">The percentage resizing value.</param>
      <example>The following example shows how to resize the displayed image to one half of the original size.
            <code lang="vbnet">
              m_ImageObject.ResizeImage(0.5)
            </code><code lang="C#">
              m_ImageObject.ResizeImage(0.5);
            </code></example>
      <remarks>The resize value must be higher than zero.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ResizeImageAsync(System.Single)">
      <summary>
            Resizes the displayed image to the specified value asynchronously.
            </summary>
      <param name="Value">The percentage resizing value.</param>
      <example>The following example shows how to resize the displayed image to one half of the original size asynchronously.
            <code lang="vbnet">
              m_ImageObject.ResizeImageAsync(0.5)
            </code><code lang="C#">
              m_ImageObject.ResizeImageAsync(0.5);
            </code></example>
      <remarks>The resize value must be higher than zero.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ResizeImage(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Resizes the displayed image to the specified values and can maintain the aspect ratio.
            </summary>
      <param name="Width">The width resizing value.</param>
      <param name="Height">The height resizing value.</param>
      <param name="MaintainRatio">Maintain aspect ration if one of the values is zero (0).</param>
      <example>The following example shows how to resize the displayed image with free values.
            <code lang="vbnet">
              m_ImageObject.ResizeImage(150,100,False)
            </code><code lang="C#">
              m_ImageObject.ResizeImage(150,100,false);
            </code></example>
      <remarks>One value must be higher than zero and the other must be zero.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ResizeImageAsync(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Resizes the displayed image to the specified values and can maintain the aspect ratio asynchronously.
            </summary>
      <param name="Width">The width resizing value.</param>
      <param name="Height">The height resizing value.</param>
      <param name="MaintainRatio">Maintain aspect ration if one of the values is zero (0).</param>
      <example>The following example shows how to resize the displayed image with free values asynchronously.
            <code lang="vbnet">
              m_ImageObject.ResizeImageAsync(150,100,False)
            </code><code lang="C#">
              m_ImageObject.ResizeImageAsync(150,100,false);
            </code></example>
      <remarks>One value must be higher than zero and the other must be zero.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ResizeImagePage(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Resizes the displayed image to the specified values and can maintain the aspect ratio.
            </summary>
      <param name="PageIndex">The page index position.</param>
      <param name="Width">The width resizing value.</param>
      <param name="Height">The height resizing value.</param>
      <param name="MaintainRatio">Maintain aspect ration if one of the values is zero (0).</param>
      <returns>The resized image byte array.</returns>
      <example>The following example shows how to resize the first image page with free values.
            <code lang="vbnet">
              Dim m_ResizedImage as Byte() = m_ImageObject.ResizeImage(0, 150,100,False)
            </code><code lang="C#">
              byte[] m_ResizedImage = m_ImageObject.ResizeImage(0, 150,100,false);
            </code></example>
      <remarks>One value must be higher than zero and the other must be zero.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ResizeImagePageAsync(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Resizes the displayed image to the specified values and can maintain the aspect ratio asynchronously.
            </summary>
      <param name="PageIndex">The page index position.</param>
      <param name="Width">The width resizing value.</param>
      <param name="Height">The height resizing value.</param>
      <param name="MaintainRatio">Maintain aspect ration if one of the values is zero (0).</param>
      <returns>The resized image byte array.</returns>
      <example>The following example shows how to resize the first image page with free values.
            <code lang="vbnet">
              m_ImageObject.ResizeImageAsync(0, 150,100,False)
            </code><code lang="C#">
              m_ImageObject.ResizeImageAsync(0, 150,100,false);
            </code></example>
      <remarks>
             One value must be higher than zero and the other must be zero.
             The result will be presented in the PageRequested event.
            </remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CropImage">
      <summary>
            Crops the displayed image to the selection rectangle size.
            </summary>
      <example>The following example shows how to set a manual selection rectangle and crop the displayed image selection.
            <code lang="vbnet">
              m_ImageObject.SetSelectionRectangle(0,0,100,100)
              m_ImageObject.CropImage()
            </code><code lang="C#">
              m_ImageObject.SetSelectionRectangle(0,0,100,100);
              m_ImageObject.CropImage();
            </code></example>
      <remarks>A selection rectangle must exist in the displayed image.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CropImageAsync">
      <summary>
            Crops the displayed image to the selection rectangle size asynchronously.
            </summary>
      <example>The following example shows how to set a manual selection rectangle and crop the displayed image selection asynchronously.
            <code lang="vbnet">
              m_ImageObject.SetSelectionRectangle(0,0,100,100)
              m_ImageObject.CropImageAsync()
            </code><code lang="C#">
              m_ImageObject.SetSelectionRectangle(0,0,100,100);
              m_ImageObject.CropImageAsync();
            </code></example>
      <remarks>A selection rectangle must exist in the displayed image.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CropImage(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Crops the displayed image to the selection rectangle size.
            </summary>
      <param name="x">The selection rectangle x position.</param>
      <param name="y">The selection rectangle y position.</param>
      <param name="width">The selection rectangle width size.</param>
      <param name="height">The selection rectangle height size.</param>
      <example>The following example shows how to crop the displayed image selection with a rectangle values.
            <code lang="vbnet">
              m_ImageObject.CropImage(0, 0, 100, 100)
            </code><code lang="C#">
              m_ImageObject.CropImage(0, 0, 100, 100);
            </code></example>
      <remarks>A selection rectangle must exist in the displayed image.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CropImageAsync(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Crops the displayed image to the selection rectangle size asynchronously.
            </summary>
      <param name="x">The selection rectangle x position.</param>
      <param name="y">The selection rectangle y position.</param>
      <param name="width">The selection rectangle width size.</param>
      <param name="height">The selection rectangle height size.</param>
      <example>The following example shows how to crop the displayed image selection with a rectangle values asynchronously.
            <code lang="vbnet">
              m_ImageObject.CropImageAsync(0, 0, 100, 100)
            </code><code lang="C#">
              m_ImageObject.CropImageAsync(0, 0, 100, 100);
            </code></example>
      <remarks>A selection rectangle must exist in the displayed image.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CropImagePage(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Crops the displayed image to the selection rectangle size.
            </summary>
      <param name="PageIndex">The page index position.</param>
      <param name="x">The selection rectangle x position.</param>
      <param name="y">The selection rectangle y position.</param>
      <param name="width">The selection rectangle width size.</param>
      <param name="height">The selection rectangle height size.</param>
      <returns>The cropped image byte array.</returns>
      <example>The following example shows how to crop the first image page selection with a rectangle values.
            <code lang="vbnet">
              Dim m_CroppedImage as Byte() = m_ImageObject.CropImage(0, 0, 0, 100, 100)
            </code><code lang="C#">
              byte[] m_CroppedImage = m_ImageObject.CropImage(0, 0, 0, 100, 100);
            </code></example>
      <remarks>A selection rectangle must exist in the displayed image.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CropImagePageAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Crops the displayed image to the selection rectangle size asynchronously.
            </summary>
      <param name="PageIndex">The page index position.</param>
      <param name="x">The selection rectangle x position.</param>
      <param name="y">The selection rectangle y position.</param>
      <param name="width">The selection rectangle width size.</param>
      <param name="height">The selection rectangle height size.</param>
      <returns>The Image Components Image Object instance.</returns>
      <example>The following example shows how to crop the first image page selection with a rectangle values asynchronously.
            <code lang="vbnet">
              m_ImageObject.CropImageAsync(0, 0, 0, 100, 100)
            </code><code lang="C#">
              m_ImageObject.CropImageAsync(0, 0, 0, 100, 100);
            </code></example>
      <remarks>
            A selection rectangle must exist in the displayed image.
            The result will be presented in the PageRequested event.
            </remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ClearSelection">
      <summary>
            Clears the selection rectangle size of the displayed image.
            </summary>
      <example>The following example shows how to set a manual selection rectangle and clear the displayed image selection.
            <code lang="vbnet">
              m_ImageObject.SetSelectionRectangle(0,0,100,100)
              m_ImageObject.ClearSelection()
            </code><code lang="C#">
              m_ImageObject.SetSelectionRectangle(0,0,100,100);
              m_ImageObject.ClearSelection();
            </code></example>
      <remarks>A selection rectangle must exist in the displayed image.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ClearSelectionAsync">
      <summary>
            Clears the selection rectangle size of the displayed image asynchronously.
            </summary>
      <example>The following example shows how to set a manual selection rectangle and clear the displayed image selection asynchronously.
            <code lang="vbnet">
              m_ImageObject.SetSelectionRectangle(0,0,100,100)
              m_ImageObject.ClearSelectionAsync()
            </code><code lang="C#">
              m_ImageObject.SetSelectionRectangle(0,0,100,100);
              m_ImageObject.ClearSelectionAsync();
            </code></example>
      <remarks>A selection rectangle must exist in the displayed image.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ClearSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Clears the selection rectangle size of the displayed image.
            </summary>
      <param name="x">The selection rectangle x position.</param>
      <param name="y">The selection rectangle y position.</param>
      <param name="width">The selection rectangle width size.</param>
      <param name="height">The selection rectangle height size.</param>
      <example>The following example shows how to clear the displayed image selection with a rectangle values.
            <code lang="vbnet">
              m_ImageObject.ClearSelection(0, 0, 100, 100)
            </code><code lang="C#">
              m_ImageObject.ClearSelection(0, 0, 100, 100);
            </code></example>
      <remarks>A selection rectangle must exist in the displayed image.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ClearSelectionAsync(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Clears the selection rectangle size of the displayed image.
            </summary>
      <param name="x">The selection rectangle x position.</param>
      <param name="y">The selection rectangle y position.</param>
      <param name="width">The selection rectangle width size.</param>
      <param name="height">The selection rectangle height size.</param>
      <example>The following example shows how to clear the displayed image selection with a rectangle values.
            <code lang="vbnet">
              m_ImageObject.ClearSelectionAsync(0, 0, 100, 100)
            </code><code lang="C#">
              m_ImageObject.ClearSelectionAsync(0, 0, 100, 100);
            </code></example>
      <remarks>A selection rectangle must exist in the displayed image.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ClearSelectionRectangle">
      <summary>
            Clears the selection rectangle.
            </summary>
      <example>The following example shows how to clear selection rectangle.
            <code lang="vbnet">
              m_ImageObject.ClearSelectionRectangle()
            </code><code lang="C#">
              m_ImageObject.ClearSelectionRectangle();
            </code></example>
      <summary>
            Clear image selection.
            </summary>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SetSelectionRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets a manual selection rectangle in the displayed image.
            </summary>
      <param name="x">The start x point of the selection rectangle.</param>
      <param name="y">The start y point of the selection rectangle.</param>
      <param name="width">The width value of the selection rectangle.</param>
      <param name="height">The height value of the selection rectangle.</param>
      <example>The following example sets a selection rectangle.
            <code lang="vbnet">
              m_ImageObject.SetSelectionRectangle(0,0,100,100)
            </code><code lang="C#">
              m_ImageObject.SetSelectionRectangle(0,0,100,100);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPage(System.String)">
      <summary>
            Appends all pages from the file to the loaded image.
            </summary>
      <param name="FileName">The file that the pages will be appended to the loaded image.</param>
      <example> This sample shows how to append a file to the loaded image.
            <code lang="vbnet">
              m_ImageObject.AppendPage("C:\Test\01.tif")
            </code><code lang="C#">
              m_ImageObject.AppendPage("C:\\Test\\01.tif");
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPage(System.String,System.Int32,System.Int32)">
      <summary>
            Appends a range of pages from the file to the loaded image.
            </summary>
      <param name="FileName">The file that the pages will be appended to the loaded image.</param>
      <param name="StartPage">The start page group that will be appended.</param>
      <param name="EndPage">The end page group that will be appended.</param>
      <example> This sample shows how to append the first two pages from a file to the loaded image.
            <code lang="vbnet">
              m_ImageObject.AppendPage("C:\Test\01.tif",0,1)
            </code><code lang="C#">
              m_ImageObject.AppendPage("C:\\Test\\01.tif",0,1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPage(System.IO.Stream)">
      <summary>
            Appends all pages from an image stream to the loaded image.
            </summary>
      <param name="ImageStream">The image stream that the pages will be appended to the loaded image.</param>
      <example> This sample shows how to append an image stream to the loaded image.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs As Stream = m_FileDialog.OpenFile()
              m_ImageObject.AppendPage(fs)
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              m_ImageObject.AppendPage(fs);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPage(System.IO.Stream,System.Int32,System.Int32)">
      <summary>
            Appends all pages from an image stream to the loaded image.
            </summary>
      <param name="ImageStream">The image stream that the pages will be appended to the loaded image.</param>
      <param name="StartPage">The start page group that will be appended.</param>
      <param name="EndPage">The end page group that will be appended.</param>
      <example> This sample shows how to append the first two pages from an image stream to the loaded image.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs as Stream = m_FileDialog.OpenFile()
              m_ImageObject.AppendPage(fs, 0, 2)
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              m_ImageObject.AppendPage(fs, 0, 2);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPage(System.Byte[])">
      <summary>
            Appends all pages from an image byte array to the loaded image.
            </summary>
      <param name="ImageByteArray">The image byte array that the pages will be appended to the loaded image.</param>
      <example> This sample shows how to append an image byte array to the loaded image.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs As Stream = m_FileDialog.OpenFile()
              Dim br As New BinaryReader(ImageFileStream)
              Dim m_ImageByteArray As Byte() = New Byte(ImageFileStream.Length - 1) 
              m_ImageByteArray = br.ReadBytes(CInt(ImageFileStream.Length))
              br.Close()
              br = Nothing
              fs.Close()
              fs.Dispose()
              m_ImageObject.AppendPage(m_ImageByteArray)
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream ImageStream = m_FileDialog.OpenFile();
              BinaryReader br = new BinaryReader(ImageStream);
              Byte[] m_ImageByteArray = new Byte[ImageStream.Length];
              m_ImageByteArray = br.ReadBytes((int)ImageStream.Length);
              br.Close();
              br = null;
              ImageStream.Close();
              ImageStream.Dispose();
              ImageStream = null;
              m_ImageObject.AppendPage(m_ImageByteArray);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPage(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Appends all pages from an image byte array to the loaded image.
            </summary>
      <param name="ImageByteArray">The image byte array that the pages will be appended to the loaded image.</param>
      <param name="StartPage">The start page group that will be appended.</param>
      <param name="EndPage">The end page group that will be appended.</param>
      <example> This sample shows how to append the first two pages from an image byte array to the loaded image.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs As Stream = m_FileDialog.OpenFile()
              Dim br As New BinaryReader(ImageFileStream)
              Dim m_ImageByteArray As Byte() = New Byte(ImageFileStream.Length - 1) 
              m_ImageByteArray = br.ReadBytes(CInt(ImageFileStream.Length))
              br.Close()
              br = Nothing
              fs.Close()
              fs.Dispose()
              m_ImageObject.AppendPage(m_ImageByteArray, 0, 2)
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream ImageStream = m_FileDialog.OpenFile();
              BinaryReader br = new BinaryReader(ImageStream);
              Byte[] m_ImageByteArray = new Byte[ImageStream.Length];
              m_ImageByteArray = br.ReadBytes((int)ImageStream.Length);
              br.Close();
              br = null;
              ImageStream.Close();
              ImageStream.Dispose();
              ImageStream = null;
              m_ImageObject.AppendPage(m_ImageByteArray, 0, 2);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPage(System.Uri)">
      <summary>
            Appends all pages from an image Uri to the loaded image.
            </summary>
      <param name="ImageUri">The image Uri that the pages will be appended to the loaded image.</param>
      <example> This sample shows how to append an image Uri to the loaded image.
            <code lang="vbnet">
              m_ImageObject.AppendPage(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute))
            </code><code lang="C#">
              m_ImageObject.AppendPage(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute));
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPage(System.Uri,System.Int32,System.Int32)">
      <summary>
            Appends the specified pages from an image Uri to the loaded image.
            </summary>
      <param name="ImageUri">The image file Uri that the pages will be appended to the loaded image.</param>
      <param name="StartPage">The start page group that will be appended.</param>
      <param name="EndPage">The end page group that will be appended.</param>
      <example> This sample shows how to append the first two pages from an image Uri to the loaded image.
            <code lang="vbnet">
              m_ImageObject.AppendPage(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute), 0, 1)
            </code><code lang="C#">
              m_ImageObject.AppendPage(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute), 0, 1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPageAsync(System.String)">
      <summary>
            Appends all pages from the file to the loaded image asynchronously.
            </summary>
      <param name="FileName">The file that the pages will be appended to the loaded image.</param>
      <example> This sample shows how to append a file to the loaded image asynchronously.
            <code lang="vbnet">
              m_ImageObject.AppendPageAsync("C:\Test\01.tif")
            </code><code lang="C#">
              m_ImageObject.AppendPageAsync("C:\\Test\\01.tif");
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPageAsync(System.String,System.Int32,System.Int32)">
      <summary>
            Appends a range of pages from the file to the loaded image asynchronously.
            </summary>
      <param name="FileName">The file that the pages will be appended to the loaded image.</param>
      <param name="StartPage">The start page group that will be appended.</param>
      <param name="EndPage">The end page group that will be appended.</param>
      <example> This sample shows how to append the first two pages from a file to the loaded image asynchronously.
            <code lang="vbnet">
              m_ImageObject.AppendPageAsync("C:\Test\01.tif",0,1)
            </code><code lang="C#">
              m_ImageObject.AppendPageAsync("C:\\Test\\01.tif",0,1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPageAsync(System.IO.Stream)">
      <summary>
            Appends all pages from an image stream to the loaded image asynchronously.
            </summary>
      <param name="ImageStream">The image stream that the pages will be appended to the loaded image.</param>
      <example> This sample shows how to append an image stream to the loaded image asynchronously.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs As Stream = m_FileDialog.OpenFile()
              m_ImageObject.AppendPageAsync(fs)
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              m_ImageObject.AppendPageAsync(fs);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPageAsync(System.IO.Stream,System.Int32,System.Int32)">
      <summary>
            Appends all pages from an image stream to the loaded image asynchronously.
            </summary>
      <param name="ImageStream">The image stream that the pages will be appended to the loaded image.</param>
      <param name="StartPage">The start page group that will be appended.</param>
      <param name="EndPage">The end page group that will be appended.</param>
      <example> This sample shows how to append the first two pages from an image stream to the loaded image asynchronously.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs as Stream = m_FileDialog.OpenFile()
              m_ImageObject.AppendPageAsync(fs, 0, 2)
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              m_ImageObject.AppendPageAsync(fs, 0, 2);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPageAsync(System.Byte[])">
      <summary>
            Appends all pages from an image byte array to the loaded image asynchronously.
            </summary>
      <param name="ImageByteArray">The image byte array that the pages will be appended to the loaded image.</param>
      <example> This sample shows how to append an image byte array to the loaded image asynchronously.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs As Stream = m_FileDialog.OpenFile()
              Dim br As New BinaryReader(ImageFileStream)
              Dim m_ImageByteArray As Byte() = New Byte(ImageFileStream.Length - 1) 
              m_ImageByteArray = br.ReadBytes(CInt(ImageFileStream.Length))
              br.Close()
              br = Nothing
              fs.Close()
              fs.Dispose()
              m_ImageObject.AppendPageAsync(m_ImageByteArray)
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream ImageStream = m_FileDialog.OpenFile();
              BinaryReader br = new BinaryReader(ImageStream);
              Byte[] m_ImageByteArray = new Byte[ImageStream.Length];
              m_ImageByteArray = br.ReadBytes((int)ImageStream.Length);
              br.Close();
              br = null;
              ImageStream.Close();
              ImageStream.Dispose();
              ImageStream = null;
              m_ImageObject.AppendPageAsync(m_ImageByteArray);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPageAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Appends all pages from an image byte array to the loaded image asynchronously.
            </summary>
      <param name="ImageByteArray">The image byte array that the pages will be appended to the loaded image.</param>
      <param name="StartPage">The start page group that will be appended.</param>
      <param name="EndPage">The end page group that will be appended.</param>
      <example> This sample shows how to append the first two pages from an image byte array to the loaded image asynchronously.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs As Stream = m_FileDialog.OpenFile()
              Dim br As New BinaryReader(ImageFileStream)
              Dim m_ImageByteArray As Byte() = New Byte(ImageFileStream.Length - 1) 
              m_ImageByteArray = br.ReadBytes(CInt(ImageFileStream.Length))
              br.Close()
              br = Nothing
              fs.Close()
              fs.Dispose()
              m_ImageObject.AppendPageAsync(m_ImageByteArray, 0, 2)
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream ImageStream = m_FileDialog.OpenFile();
              BinaryReader br = new BinaryReader(ImageStream);
              Byte[] m_ImageByteArray = new Byte[ImageStream.Length];
              m_ImageByteArray = br.ReadBytes((int)ImageStream.Length);
              br.Close();
              br = null;
              ImageStream.Close();
              ImageStream.Dispose();
              ImageStream = null;
              m_ImageObject.AppendPageAsync(m_ImageByteArray, 0, 2);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPageAsync(System.Uri)">
      <summary>
            Appends all pages from an image Uri to the loaded image asynchronously.
            </summary>
      <param name="ImageUri">The image Uri that the pages will be appended to the loaded image.</param>
      <example> This sample shows how to append an image Uri to the loaded image asynchronously.
            <code lang="vbnet">
              m_ImageObject.AppendPageAsync(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute))
            </code><code lang="C#">
              m_ImageObject.AppendPageAsync(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute));
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AppendPageAsync(System.Uri,System.Int32,System.Int32)">
      <summary>
            Appends the specified pages from an image Uri to the loaded image asynchronously.
            </summary>
      <param name="ImageUri">The image file Uri that the pages will be appended to the loaded image.</param>
      <param name="StartPage">The start page group that will be appended.</param>
      <param name="EndPage">The end page group that will be appended.</param>
      <example> This sample shows how to append the first two pages from an image Uri to the loaded image asynchronously.
            <code lang="vbnet">
              m_ImageObject.AppendPageAsync(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute), 0, 1)
            </code><code lang="C#">
              m_ImageObject.AppendPageAsync(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute), 0, 1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPage(System.String,System.Int32)">
      <summary>
            Inserts all pages from the file to the loaded image starting at the specified position.
            </summary>
      <param name="FileName">The file that the pages will be inserted to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <example>This sample shows how to insert a file to the loaded image starting at the second page.
            <code lang="vbnet">
              m_ImageObject.InsertPage("C:\Test\01.tif",1)
            </code><code lang="C#">
              m_ImageObject.InsertPage("C:\\Test\\01.tif",1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPage(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            Inserts a range of pages from the file to the loaded image starting at the specified position.
            </summary>
      <param name="FileName">The file that the pages will be inserted to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <param name="StartPage">The start page group that will be inserted.</param>
      <param name="EndPage">The end page group that will be inserted.</param>
      <example> This sample shows how to insert two pages from a file to the loaded image starting at the second page.
            <code lang="vbnet">
              m_ImageObject.InsertPage("C:\Test\01.tif",0,1,1)
            </code><code lang="C#">
              m_ImageObject.InsertPage("C:\\Test\\01.tif",0,1,1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPage(System.IO.Stream,System.Int32)">
      <summary>
            Inserts all pages from an image stream to the loaded image.
            </summary>
      <param name="ImageStream">The image stream that the pages will be appended to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <example> This sample shows how to insert an image stream to the loaded image starting at the second page.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs As Stream = m_FileDialog.OpenFile()
              m_ImageObject.InsertPage(fs,1);
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              m_ImageObject.InsertPage(fs,1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPage(System.IO.Stream,System.Int32,System.Int32,System.Int32)">
      <summary>
            Inserts a range of pages from an image stream to the loaded image starting at the specified position.
            </summary>
      <param name="ImageStream">The image stream that the pages will be appended to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <param name="StartPage">The start page group that will be inserted.</param>
      <param name="EndPage">The end page group that will be inserted.</param>
      <example>This sample shows how to insert two pages from an image stream to the loaded image starting at the second page.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs as Stream = m_FileDialog.OpenFile()
              m_ImageObject.InsertPage(fs,0,1,1);
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              m_ImageObject.InsertPage(fs,0,1,1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPage(System.Byte[],System.Int32)">
      <summary>
            Inserts all pages from an image byte array to the loaded image.
            </summary>
      <param name="ImageByteArray">The image byte array that the pages will be appended to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <example> This sample shows how to insert an image byte array to the loaded image starting at the second page.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs As Stream = m_FileDialog.OpenFile()
              Dim br As New BinaryReader(ImageFileStream)
              Dim m_ImageByteArray As Byte() = New Byte(ImageFileStream.Length - 1) 
              m_ImageByteArray = br.ReadBytes(CInt(ImageFileStream.Length))
              br.Close()
              br = Nothing
              fs.Close()
              fs.Dispose()
              m_ImageObject.InsertPage(m_ImageByteArray,1);
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              BinaryReader br = new BinaryReader(ImageStream);
              Byte[] m_ImageByteArray = new Byte[ImageStream.Length];
              m_ImageByteArray = br.ReadBytes((int)ImageStream.Length);
              br.Close();
              br = null;
              ImageStream.Close();
              ImageStream.Dispose();
              ImageStream = null;
              m_ImageObject.InsertPage(m_ImageByteArray,1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPage(System.Byte[],System.Int32,System.Int32,System.Int32)">
      <summary>
            Inserts a range of pages from an image byte array to the loaded image starting at the specified position.
            </summary>
      <param name="ImageByteArray">The image byte array that the pages will be appended to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <param name="StartPage">The start page group that will be inserted.</param>
      <param name="EndPage">The end page group that will be inserted.</param>
      <example>This sample shows how to insert two pages from an image byte array to the loaded image starting at the second page.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs as Stream = m_FileDialog.OpenFile()
              Dim br As New BinaryReader(ImageFileStream)
              Dim m_ImageByteArray As Byte() = New Byte(ImageFileStream.Length - 1) 
              m_ImageByteArray = br.ReadBytes(CInt(ImageFileStream.Length))
              br.Close()
              br = Nothing
              fs.Close()
              fs.Dispose()
              m_ImageObject.InsertPage(m_ImageByteArray,0,1,1);
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              BinaryReader br = new BinaryReader(ImageStream);
              Byte[] m_ImageByteArray = new Byte[ImageStream.Length];
              m_ImageByteArray = br.ReadBytes((int)ImageStream.Length);
              br.Close();
              br = null;
              ImageStream.Close();
              ImageStream.Dispose();
              ImageStream = null;
              m_ImageObject.InsertPage(m_ImageByteArray,0,1,1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPage(System.Uri,System.Int32)">
      <summary>
            Inserts all pages from an image Uri to the loaded image starting at the specified position.
            </summary>
      <param name="ImageUri">The image Uri that the pages will be inserted to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <example> This sample shows how to insert an image Uri to the loaded image starting at the second page.
            <code lang="vbnet">
              m_ImageObject.InsertPage(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute), 1)
            </code><code lang="C#">
              m_ImageObject.InsertPage(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute), 1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPage(System.Uri,System.Int32,System.Int32,System.Int32)">
      <summary>
            Inserts a range of pages from an image Uri to the loaded image starting at the specified position.
            </summary>
      <param name="ImageUri">The image Uri that the pages will be inserted to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <param name="StartPage">The start page group that will be inserted.</param>
      <param name="EndPage">The end page group that will be inserted.</param>
      <example> This sample shows how to insert the first two pages from an image Uri to the loaded image starting at the second page.
            <code lang="vbnet">
              m_ImageObject.InsertPage(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute), 2, 0, 1)
            </code><code lang="C#">
              m_ImageObject.InsertPage(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute), 2, 0, 1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPageAsync(System.String,System.Int32)">
      <summary>
            Inserts all pages from the file to the loaded image starting at the specified position asynchronously.
            </summary>
      <param name="FileName">The file that the pages will be inserted to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <example>This sample shows how to insert a file to the loaded image starting at the second page asynchronously.
            <code lang="vbnet">
              m_ImageObject.InsertPageAsync("C:\Test\01.tif",1)
            </code><code lang="C#">
              m_ImageObject.InsertPageAsync("C:\\Test\\01.tif",1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPageAsync(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
            Inserts a range of pages from the file to the loaded image starting at the specified position asynchronously.
            </summary>
      <param name="FileName">The file that the pages will be inserted to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <param name="StartPage">The start page group that will be inserted.</param>
      <param name="EndPage">The end page group that will be inserted.</param>
      <example> This sample shows how to insert two pages from a file to the loaded image starting at the second page asynchronously.
            <code lang="vbnet">
              m_ImageObject.InsertPageAsync("C:\Test\01.tif",0,1,1)
            </code><code lang="C#">
              m_ImageObject.InsertPageAsync("C:\\Test\\01.tif",0,1,1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPageAsync(System.IO.Stream,System.Int32)">
      <summary>
            Inserts all pages from an image stream to the loaded image asynchronously.
            </summary>
      <param name="ImageStream">The image stream that the pages will be appended to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <example> This sample shows how to insert an image stream to the loaded image starting at the second page asynchronously.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs As Stream = m_FileDialog.OpenFile()
              m_ImageObject.InsertPageAsync(fs,1);
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              m_ImageObject.InsertPageAsync(fs,1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPageAsync(System.IO.Stream,System.Int32,System.Int32,System.Int32)">
      <summary>
            Inserts a range of pages from an image stream to the loaded image starting at the specified position asynchronously.
            </summary>
      <param name="ImageStream">The image stream that the pages will be appended to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <param name="StartPage">The start page group that will be inserted.</param>
      <param name="EndPage">The end page group that will be inserted.</param>
      <example>This sample shows how to insert two pages from an image stream to the loaded image starting at the second page asynchronously.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs as Stream = m_FileDialog.OpenFile()
              m_ImageObject.InsertPageAsync(fs,0,1,1);
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              m_ImageObject.InsertPageAsync(fs,0,1,1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPageAsync(System.Byte[],System.Int32)">
      <summary>
            Inserts all pages from an image byte array to the loaded image asynchronously.
            </summary>
      <param name="ImageByteArray">The image byte array that the pages will be appended to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <example> This sample shows how to insert an image byte array to the loaded image starting at the second page asynchronously.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs As Stream = m_FileDialog.OpenFile()
              Dim br As New BinaryReader(ImageFileStream)
              Dim m_ImageByteArray As Byte() = New Byte(ImageFileStream.Length - 1) 
              m_ImageByteArray = br.ReadBytes(CInt(ImageFileStream.Length))
              br.Close()
              br = Nothing
              fs.Close()
              fs.Dispose()
              m_ImageObject.InsertPageAsync(m_ImageByteArray,1);
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              BinaryReader br = new BinaryReader(ImageStream);
              Byte[] m_ImageByteArray = new Byte[ImageStream.Length];
              m_ImageByteArray = br.ReadBytes((int)ImageStream.Length);
              br.Close();
              br = null;
              ImageStream.Close();
              ImageStream.Dispose();
              ImageStream = null;
              m_ImageObject.InsertPageAsync(m_ImageByteArray,1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPageAsync(System.Byte[],System.Int32,System.Int32,System.Int32)">
      <summary>
            Inserts a range of pages from an image byte array to the loaded image starting at the specified position asynchronously.
            </summary>
      <param name="ImageByteArray">The image byte array that the pages will be appended to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <param name="StartPage">The start page group that will be inserted.</param>
      <param name="EndPage">The end page group that will be inserted.</param>
      <example>This sample shows how to insert two pages from an image byte array to the loaded image starting at the second page asynchronously.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs as Stream = m_FileDialog.OpenFile()
              Dim br As New BinaryReader(ImageFileStream)
              Dim m_ImageByteArray As Byte() = New Byte(ImageFileStream.Length - 1) 
              m_ImageByteArray = br.ReadBytes(CInt(ImageFileStream.Length))
              br.Close()
              br = Nothing
              fs.Close()
              fs.Dispose()
              m_ImageObject.InsertPageAsync(m_ImageByteArray,0,1,1);
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              BinaryReader br = new BinaryReader(ImageStream);
              Byte[] m_ImageByteArray = new Byte[ImageStream.Length];
              m_ImageByteArray = br.ReadBytes((int)ImageStream.Length);
              br.Close();
              br = null;
              ImageStream.Close();
              ImageStream.Dispose();
              ImageStream = null;
              m_ImageObject.InsertPageAsync(m_ImageByteArray,0,1,1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPageAsync(System.Uri,System.Int32)">
      <summary>
            Inserts all pages from an image Uri to the loaded image starting at the specified position.
            </summary>
      <param name="ImageUri">The image Uri that the pages will be inserted to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <example> This sample shows how to insert an image Uri to the loaded image starting at the second page.
            <code lang="vbnet">
              m_ImageObject.InsertPageAsync(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute), 1)
            </code><code lang="C#">
              m_ImageObject.InsertPageAsync(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute), 1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.InsertPageAsync(System.Uri,System.Int32,System.Int32,System.Int32)">
      <summary>
            Inserts a range of pages from an image Uri to the loaded image starting at the specified position asynchronously.
            </summary>
      <param name="ImageUri">The image Uri that the pages will be inserted to the loaded image.</param>
      <param name="BeginPosition">The page position of the loaded image that the pages will be inserted.</param>
      <param name="StartPage">The start page group that will be inserted.</param>
      <param name="EndPage">The end page group that will be inserted.</param>
      <example> This sample shows how to insert the first two pages from an image Uri to the loaded image starting at the second page asynchronously.
            <code lang="vbnet">
              m_ImageObject.InsertPageAsync(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute), 2, 0, 1)
            </code><code lang="C#">
              m_ImageObject.InsertPageAsync(new Uri("http://www.imagecomponents.net/Test/Testing.tif", UriKind.Absolute), 2, 0, 1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.DeletePage">
      <summary>
            Deletes the displayed page from the loaded image.
            </summary>
      <example> This sample shows how to delete the displayed page from loaded image.
            <code lang="vbnet">
              m_ImageObject.DeletePage()
            </code><code lang="C#">
              m_ImageObject.DeletePage();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.DeletePage(System.Int32)">
      <summary>
            Deletes the specified page from the loaded image.
            </summary>
      <param name="Page">The page position of the loaded image that the page will be deleted.</param>
      <example> This sample shows how to delete the second page from loaded image.
            <code lang="vbnet">
              m_ImageObject.DeletePage(1)
            </code><code lang="C#">
              m_ImageObject.DeletePage(1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.DeletePage(System.Collections.Generic.List{System.Int32})">
      <summary>
            Deletes the specified collection of page from the loaded image.
            </summary>
      <param name="Pages">The page index collection that will be deleted of the loaded image.</param>
      <example> This sample shows how to delete the first two pages of the loaded image.
            <code lang="vbnet">
              Dim m_Range As New List(Of Integer)()
              m_Range.Add(0)
              m_Range.Add(1)
              m_ImageObject.DeletePage(m_Range)
            </code><code lang="C#">
              List&lt;int&gt; m_Range = new List&lt;int&gt;() { 0, 1 };
              m_ImageObject.DeletePage(m_Range);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.MovePage(System.Int32,System.Int32)">
      <summary>
            Moves the specified page image page to the specified target position.
            </summary>
      <param name="SourcePage">The page position of the loaded image that will be moved.</param>
      <param name="TargetPage">The target page position of the loaded image.</param>
      <example> This sample shows how to move the first page to the third position.
            <code lang="vbnet">
              m_ImageObject.MovePage(0,2)
            </code><code lang="C#">
              m_ImageObject.MovePage(0,2);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReplacePage(System.String,System.Int32)">
      <summary>
            Replaces the current page with one specified image filename page.
            </summary>
      <param name="FileName">The file containing the page that will replace the displayed image.</param>
      <param name="SourcePage">The source page position to replace of the specified image.</param>
      <example>This sample shows how to replace the displayed page with the second page of the specified filename.
            <code lang="vbnet">
              m_ImageObject.ReplacePage("C:\Test\01.tif",1)
            </code><code lang="C#">
              m_ImageObject.ReplacePage("C:\\Test\\01.tif",1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReplacePage(System.IO.Stream,System.Int32)">
      <summary>
            Replaces the current page with one specified image stream page.
            </summary>
      <param name="ImageStream">The image stream containing the page that will replace the displayed image.</param>
      <param name="SourcePage">The source page position to replace of the specified image.</param>
      <example>This sample shows how to replace the displayed page with the second page of the specified image stream.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs As Stream = m_FileDialog.OpenFile()
              m_ImageObject.ReplacePage(fs,1);
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              m_ImageObject.ReplacePage(fs,1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReplacePage(System.Byte[],System.Int32)">
      <summary>
            Replaces the current page with one specified image byte array page.
            </summary>
      <param name="ImageByteArray">The image byte array containing the page that will replace the displayed image.</param>
      <param name="SourcePage">The page position to replace of the specified image.</param>
      <example>This sample shows how to replace the displayed page with the second page of the specified image byte array.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs As Stream = m_FileDialog.OpenFile()
              Dim br As New BinaryReader(ImageFileStream)
              Dim m_ImageByteArray As Byte() = New Byte(ImageFileStream.Length - 1) 
              m_ImageByteArray = br.ReadBytes(CInt(ImageFileStream.Length))
              br.Close()
              br = Nothing
              fs.Close()
              fs.Dispose()
              m_ImageObject.ReplacePage(m_ImageByteArray,1);
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              BinaryReader br = new BinaryReader(ImageStream);
              Byte[] m_ImageByteArray = new Byte[ImageStream.Length];
              m_ImageByteArray = br.ReadBytes((int)ImageStream.Length);
              br.Close();
              br = null;
              ImageStream.Close();
              ImageStream.Dispose();
              ImageStream = null;
              m_ImageObject.ReplacePage(m_ImageByteArray,1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReplacePage(System.String,System.Int32,System.Int32)">
      <summary>
            Replaces a specified target page with a source image filename page.
            </summary>
      <param name="FileName">The file containing the page that will replace the displayed image.</param>
      <param name="SourcePage">The page position to replace of the specified image.</param>
      <param name="TargetPage">The target page position of the current loaded image.</param>
      <example>This sample shows how to replace the loaded first page with the second page of the specified filename.
            <code lang="vbnet">
              m_ImageObject.ReplacePage("C:\Test\01.tif", 0, 1)
            </code><code lang="C#">
              m_ImageObject.ReplacePage("C:\\Test\\01.tif", 0, 1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReplacePage(System.IO.Stream,System.Int32,System.Int32)">
      <summary>
            Replaces a specified target page with a source image stream page.
            </summary>
      <param name="ImageStream">The image stream containing the page that will replace the displayed image.</param>
      <param name="SourcePage">The page position to replace of the specified image.</param>
      <param name="TargetPage">The target page position of the current loaded image.</param>
      <example>This sample shows how to replace the loaded first page with the second page of the specified image stream.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs As Stream = m_FileDialog.OpenFile()
              m_ImageObject.ReplacePage(fs, 0, 1);
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              m_ImageObject.ReplacePage(fs, 0, 1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReplacePage(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Replaces a specified target page with a source image byte array page.
            </summary>
      <param name="ImageByteArray">The image byte array containing the page that will replace the displayed image.</param>
      <param name="SourcePage">The page position to replace of the specified image.</param>
      <param name="TargetPage">The target page position of the current loaded image.</param>
      <example>This sample shows how to replace the loaded first page with the second page of the specified image byte array.
            <code lang="vbnet">
              Dim m_FileDialog As OpenFileDialog  = new OpenFileDialog()
              m_FileDialog.ShowDialog()
              Dim fs As Stream = m_FileDialog.OpenFile()
              Dim br As New BinaryReader(ImageFileStream)
              Dim m_ImageByteArray As Byte() = New Byte(ImageFileStream.Length - 1) 
              m_ImageByteArray = br.ReadBytes(CInt(ImageFileStream.Length))
              br.Close()
              br = Nothing
              fs.Close()
              fs.Dispose()
              m_ImageObject.ReplacePage(m_ImageByteArray, 0, 1);
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.ShowDialog();
              Stream fs = m_FileDialog.OpenFile();
              BinaryReader br = new BinaryReader(ImageStream);
              Byte[] m_ImageByteArray = new Byte[ImageStream.Length];
              m_ImageByteArray = br.ReadBytes((int)ImageStream.Length);
              br.Close();
              br = null;
              ImageStream.Close();
              ImageStream.Dispose();
              ImageStream = null;
              m_ImageObject.ReplacePage(m_ImageByteArray, 0, 1);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Undo">
      <summary>
            Undoes a modification from the loaded image page.
            </summary>
      <example>The following example shows how to undone the loaded image page modification.
            <code lang="vbnet">
              m_ImageObject.Undo()
            </code><code lang="C#">
              m_ImageObject.Undo();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Redo">
      <summary>
            Redoes a modification from the loaded image page.
            </summary>
      <example>The following example shows how to redone the loaded image page modification.
            <code lang="vbnet">
              m_ImageObject.Redo()
            </code><code lang="C#">
              m_ImageObject.Redo();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.IsBlankPage">
      <summary>
            Detects if the selected image page is blank.
            </summary>
      <returns>Returns the value indicating if the selected image page is blank, not blank or indeterminate.</returns>
      <example>The following example shows how detect if the selected image page is blank.
            <code lang="vbnet">
              m_ImageObject.IsBlankPage()
            </code><code lang="C#">
              m_ImageObject.IsBlankPage();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.IsBlankPage(System.Double,System.Boolean)">
      <summary>
            Detects if the selected image page is blank with a specified standard deviation tolerance.
            </summary>
      <param name="Tolerance">The standard deviation tolerance value.</param>
      <param name="RemoveEmptyData">Removes the blank empty data borders.</param>
      <returns>Returns the value indicating if the selected image page is blank, not blank or indeterminate.</returns>
      <example>The following example shows how detect if the selected image page is blank with a 5 percent tolerance.
            <code lang="vbnet">
              m_ImageObject.IsBlankPage(0.05)
            </code><code lang="C#">
              m_ImageObject.IsBlankPage(0.05);
            </code></example>
      <remarks>The tolerance value must be between 0 and 1.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.IsInvertedPage">
      <summary>
            Detects if the selected image page is inverted.
            </summary>
      <returns>Returns the value indicating if the selected image page is inverted.</returns>
      <example>The following example shows how detect if the selected image page is inverted.
            <code lang="vbnet">
              m_ImageObject.IsInvertedPage()
            </code><code lang="C#">
              m_ImageObject.IsInvertedPage();
            </code></example>
      <remarks>Inverted means black background with white information.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.IsInvertedPage(System.Int32)">
      <summary>
            Detects if the specified image page is inverted.
            </summary>
      <param name="PageNumber">The page to check if is inverted.</param>
      <returns>Returns the value indicating if the specified image page is inverted.</returns>
      <example>The following example shows how detect if the first image page is inverted.
            <code lang="vbnet">
              m_ImageObject.IsInvertedPage(0)
            </code><code lang="C#">
              m_ImageObject.IsInvertedPage(0);
            </code></example>
      <remarks>Inverted means black background with white information.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImagePageStream(System.Int32)">
      <summary>
            Retrieves the specified image page byte array.
            </summary>
      <param name="PageNumber">The page to retrieve the byte array.</param>
      <returns>The byte array of the specified page.</returns>
      <example>The following example gets the byte array of the second page.
            <code lang="vbnet">
              Dim bmp As Byte() = Nothing
              bmp = m_ImageObject.GetImagePageStream(1)
            </code><code lang="C#">
              byte[] bmp = null;
              bmp = m_ImageObject.GetImagePageStream(1);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImagePageStreamAsync(System.Int32)">
      <summary>
            Retrieves the specified image page byte array asynchronously.
            </summary>
      <param name="PageNumber">The page to retrieve the byte array.</param>
      <example>The following example gets the byte array of the second page asynchronously.
            <code lang="vbnet">
              m_ImageObject.GetImagePageStreamAsync(1)
            </code><code lang="C#">
              m_ImageObject.GetImagePageStreamAsync(1);
            </code></example>
      <remarks>
            The result will be presented in the PageRequested event.
            </remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImagePageStream(System.Int32,System.Boolean)">
      <summary>
            Retrieves the specified image page byte array.
            </summary>
      <param name="PageNumber">The page to retrieve the byte array.</param>
      <param name="BurnAnnotations">Burn existent image annotations.</param>
      <returns>The byte array of the specified page.</returns>
      <example>The following example gets the byte array of the second page with burned annotations.
            <code lang="vbnet">
              Dim bmp As Byte() = Nothing
              bmp = m_ImageObject.GetImagePageStream(1, True)
            </code><code lang="C#">
              byte[] bmp = null;
              bmp = m_ImageObject.GetImagePageStream(1, true);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImagePageStreamAsync(System.Int32,System.Boolean)">
      <summary>
            Retrieves the specified image page byte array asynchronously.
            </summary>
      <param name="PageNumber">The page to retrieve the byte array.</param>
      <param name="BurnAnnotations">Burn existent image annotations.</param>
      <example>The following example gets the byte array of the second page with burned annotations asynchronously.
            <code lang="vbnet">
              m_ImageObject.GetImagePageStreamAsync(1, True)
            </code><code lang="C#">
              m_ImageObject.GetImagePageStreamAsync(1, true);
            </code></example>
      <remarks>
            The result will be presented in the PageRequested event.
            </remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImageThumbnail(System.Int32,System.Double,System.Boolean)">
      <summary>
            Retrieves the specified image page thumbnail byte array.
            </summary>
      <param name="PageNumber">The page thumbnail to retrieve the byte array.</param>
      <param name="Scale">The scale of the page thumbnail.</param>
      <param name="BurnAnnotations">Burn existent image annotations.</param>
      <returns>The byte array of the specified page thumbnail.</returns>
      <example>The following example gets the thumbnail byte array of the second page with burned annotations with a scale of 0.5.
            <code lang="vbnet">
              Dim bmp As Byte() = Nothing
              bmp = m_ImageObject.GetImageThumbnail(1, 0.5, True)
            </code><code lang="C#">
              byte[] bmp = null;
              bmp = m_ImageObject.GetImageThumbnail(1, 0.5, true);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ChangeImagePagePixelFormat(ImageComponents.Core.Imaging.ICImageBitFormat)">
      <summary>
            Changes the displayed image page pixel format.
            </summary>
      <param name="PixelFormat">The pixel format value.</param>
      <example>The following example changes the displayed image page pixel format.
            <code lang="vbnet">
              m_ImageObject.ChangeImagePagePixelFormat(ICImageBitFormat.PixelFormat_8Bit)
            </code><code lang="C#">
              m_ImageObject.ChangeImagePagePixelFormat(ICImageBitFormat.PixelFormat_8Bit);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ChangeImagePageColorDepth(ImageComponents.Core.Imaging.ICImageColorDepth)">
      <summary>
            Changes the displayed image page color depth.
            </summary>
      <param name="ColorDepth">The color depth value.</param>
      <example>The following example changes the displayed image page color depth.
            <code lang="vbnet">
              m_ImageObject.ChangeImagePageColorDepth(ICImageColorDepth.ColorDepth_8BPP)
            </code><code lang="C#">
              m_ImageObject.ChangeImagePagePixelFormat(ICImageColorDepth.ColorDepth_8BPP);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImagePagePreview">
      <summary>
            Retrieves the selected image page preview.
            </summary>
      <example>The following example gets the preview of the selected page.
            <code lang="vbnet">
              m_ImageObject.GetImagePagePreview()
            </code><code lang="C#">
              m_ImageObject.GetImagePagePreview();
            </code></example>
      <remarks>The result page preview will be available on the PagePreviewRequested event.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImagePagePreview(System.Int32)">
      <summary>
            Retrieves the specified image page preview.
            </summary>
      <param name="PageNumber">The page to retrieve the preview.</param>
      <example>The following example gets the preview of the second page.
            <code lang="vbnet">
              m_ImageObject.GetImagePagePreview(1)
            </code><code lang="C#">
              m_ImageObject.GetImagePagePreview(1);
            </code></example>
      <remarks>The result page preview will be available on the PagePreviewRequested event.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImagePagePixelColor(System.Drawing.Point)">
      <summary>
            Retrieves the pixel color of a specified position.
            </summary>
      <param name="StartPoint">The start point position.</param>
      <example>The following example gets the selected page pixel color of a specified position.
            <code lang="vbnet">
              Dim m_Color As Nullable(Of Color)
              m_Color = m_ImageObject.GetImagePagePixelColor(New Point(100, 100))
            </code><code lang="C#">
             Color? m_Color = m_ImageObject.GetImagePagePixelColor(new Point(100, 100));
            </code></example>
      <returns>The pixel color of the specified point position or null.</returns>
      <remarks>In a raised error the result color is null.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImagePagePixelColor(System.Int32,System.Drawing.Point)">
      <summary>
            Retrieves the pixel color of a specified page point position.
            </summary>
      <param name="PageNumber">The page to retrieve the image page pixel color.</param>
      <param name="StartPoint">The start point position.</param>
      <example>The following example gets the pixel color of a specified position in the first page.
            <code lang="vbnet">
              Dim m_Color As Nullable(Of Color)
              m_Color = m_ImageObject.GetImagePagePixelColor(0, New Point(100, 100))
            </code><code lang="C#">
             Color? m_Color = m_ImageObject.GetImagePagePixelColor(0, new Point(100, 100));
            </code></example>
      <returns>The pixel color of the specified point position or null.</returns>
      <remarks>In a raised error the result color is null.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImagePagePixelColor(System.Drawing.Rectangle)">
      <summary>
            Retrieves the pixel color array of a specified selection rectangle.
            </summary>
      <param name="Selection">The image selection rectangle value.</param>
      <example>The following example gets the displayed page pixel color array of a specified rectangle selection.
            <code lang="vbnet">
              Dim m_Colors As Integer()
              m_Colors = m_ImageObject.GetImagePagePixelColor(New Rectangle(0, 0, 100, 100))
            </code><code lang="C#">
             int[] m_Colors = m_ImageObject.GetImagePagePixelColor(new Rectangle(0, 0, 100, 100));
            </code></example>
      <returns>The pixel color of the specified selection rectangle or null.</returns>
      <remarks>Specify an empty rectangle to get the full image selection.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImagePagePixelColor(System.Int32,System.Drawing.Rectangle)">
      <summary>
            Retrieves the pixel color array of a specified page selection rectangle.
            </summary>
      <param name="PageNumber">The page to retrieve the image page selection rectangle.</param>
      <param name="Selection">The image selection rectangle value.</param>
      <example>The following example gets the pixel color array of the first page specified rectangle selection.
            <code lang="vbnet">
              Dim m_Colors As Integer()
              m_Colors = m_ImageObject.GetImagePagePixelColor(0, New Rectangle(0, 0, 100, 100))
            </code><code lang="C#">
             int[] m_Colors = m_ImageObject.GetImagePagePixelColor(0, new Rectangle(0, 0, 100, 100));
            </code></example>
      <returns>The pixel color of the specified selection rectangle or null.</returns>
      <remarks>Specify an empty rectangle to get the full image selection.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImagePagePixels(System.Drawing.Rectangle)">
      <summary>
            Retrieves the pixel color rgba int array of a specified selection rectangle.
            </summary>
      <param name="Selection">The image selection rectangle value.</param>
      <example>The following example gets the displayed page pixel color rgba int array of a specified rectangle selection.
            <code lang="vbnet">
              Dim m_Colors As Integer()
              m_Colors = m_ImageObject.GetImagePagePixels(New Rectangle(0, 0, 100, 100))
            </code><code lang="C#">
             int[] m_Colors = m_ImageObject.GetImagePagePixels(new Rectangle(0, 0, 100, 100));
            </code></example>
      <returns>The pixel int color of the specified selection rectangle or null.</returns>
      <remarks>Specify an empty rectangle to get the full image selection.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImagePagePixels(System.Int32,System.Drawing.Rectangle)">
      <summary>
            Retrieves the pixel color rgba int array of a specified page selection rectangle.
            </summary>
      <param name="PageNumber">The page to retrieve the image page selection rectangle.</param>
      <param name="Selection">The image selection rectangle value.</param>
      <example>The following example gets the pixel color rgba int array of the first page specified rectangle selection.
            <code lang="vbnet">
              Dim m_Colors As Integer()
              m_Color = m_ImageObject.GetImagePagePixels(0, New Rectangle(0, 0, 100, 100))
            </code><code lang="C#">
             int[] m_Colors = m_ImageObject.GetImagePagePixels(0, new Rectangle(0, 0, 100, 100));
            </code></example>
      <returns>The pixel int color of the specified selection rectangle or null.</returns>
      <remarks>Specify an empty rectangle to get the full image selection.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SetImagePagePixels(System.Int32[],System.Drawing.Rectangle)">
      <summary>
            Sets the pixel color rgba int array of the displayed page selection rectangle.
            </summary>
      <param name="ImageData">The image page selection pixel color int rgba array.</param>
      <param name="Selection">The image selection rectangle value.</param>
      <example>The following example sets the black pixels into white pixels of the displayed page.
            <code lang="vbnet">
              Dim m_Colors As Integer()
              m_Colors = m_ImageObject.GetImagePagePixels(0, Rectangle.Empty)
              For a As Integer = 0 To m_Colors.Length - 1
                  m_Colors(a) = Convert.ToInt32(IIf(m_Colors(a) = 0, 16777215, m_Colors(a)))
              Next
              m_ImageObject.SetImagePagePixels(m_Colors, Rectangle.Empty)
            </code><code lang="C#">
              int[] m_Colors = m_ImgObject.GetImagePagePixels(Rectangle.Empty);
             <![CDATA[for (int a = 0; a < m_Colors.Length; a++)]]>
              {
                 m_Colors[a] = m_Colors[a] == 0 ? 16777215 : m_Colors[a];
              }
              m_ImgObject.SetImagePagePixels(m_Colors, Rectangle.Empty);
            </code></example>
      <remarks>Specify an empty rectangle to get or set the full image selection.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SetImagePagePixels(System.Drawing.Color[],System.Drawing.Rectangle)">
      <summary>
            Sets the pixel color array of the displayed page selection rectangle.
            </summary>
      <param name="ImageData">The image page selection pixel color array.</param>
      <param name="Selection">The image selection rectangle value.</param>
      <example>The following example sets the black pixels into white pixels of the displayed page.
            <code lang="vbnet">
              Dim m_Colors As Color()
              m_Colors = m_ImageObject.GetImagePagePixels(0, Rectangle.Empty)
              For a As Integer = 0 To m_Colors.Length - 1
                  m_Colors(a) = Convert.ToInt32(IIf(m_Colors(a) = Color.Black, Color.White, m_Colors(a)))
              Next
              m_ImageObject.SetImagePagePixels(m_Colors, Rectangle.Empty)
            </code><code lang="C#">
              Color[] m_Colors = m_ImgObject.GetImagePagePixels(Rectangle.Empty);
             <![CDATA[for (int a = 0; a < m_Colors.Length; a++)]]>
              {
                 m_Colors[a] = m_Colors[a] == Color.Black ? Color.White : m_Colors[a];
              }
              m_ImgObject.SetImagePagePixels(m_Colors, Rectangle.Empty);
            </code></example>
      <remarks>Specify an empty rectangle to get or set the full image selection.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SetImagePagePixels(System.Int32,System.Int32[],System.Drawing.Rectangle)">
      <summary>
            Sets the pixel color int array of a specified page selection rectangle.
            </summary>
      <param name="PageNumber">The page to set the image page selection rectangle.</param>
      <param name="ImageData">The image page selection pixel color int array.</param>
      <param name="Selection">The image selection rectangle value.</param>
      <example>The following example sets the black pixels into white pixels of the first page.
            <code lang="vbnet">
              Dim m_Colors As Integer()
              m_Colors = m_ImageObject.GetImagePagePixels(0, Rectangle.Empty)
              For a As Integer = 0 To m_Colors.Length - 1
                  m_Colors(a) = Convert.ToInt32(IIf(m_Colors(a) = 0, 16777215, m_Colors(a)))
              Next
              m_ImageObject.SetImagePagePixels(0, m_Colors, Rectangle.Empty)
            </code><code lang="C#">
              int[] m_Colors = m_ImgObject.GetImagePagePixels(Rectangle.Empty);
             <![CDATA[for (int a = 0; a < m_Colors.Length; a++)]]>
              {
                 m_Colors[a] = m_Colors[a] == 0 ? 16777215 : m_Colors[a];
              }
              m_ImgObject.SetImagePagePixels(0, m_Colors, Rectangle.Empty);
            </code></example>
      <remarks>Specify an empty rectangle to get or set the full image selection.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SetImagePagePixels(System.Int32,System.Drawing.Color[],System.Drawing.Rectangle)">
      <summary>
            Sets the pixel color array of a specified page selection rectangle.
            </summary>
      <param name="PageNumber">The page to set the image page selection rectangle.</param>
      <param name="ImageData">The image page selection pixel color array.</param>
      <param name="Selection">The image selection rectangle value.</param>
      <example>The following example sets the black pixels into white pixels of the first page.
            <code lang="vbnet">
              Dim m_Colors As Color()
              m_Colors = m_ImageObject.GetImagePagePixels(0, Rectangle.Empty)
              For a As Integer = 0 To m_Colors.Length - 1
                  m_Colors(a) = Convert.ToInt32(IIf(m_Colors(a) = Color.Black, Color.White, m_Colors(a)))
              Next
              m_ImageObject.SetImagePagePixels(0, m_Colors, Rectangle.Empty)
            </code><code lang="C#">
              Color[] m_Colors = m_ImgObject.GetImagePagePixels(Rectangle.Empty);
             <![CDATA[for (int a = 0; a < m_Colors.Length; a++)]]>
              {
                 m_Colors[a] = m_Colors[a] == Color.Black ? Color.White : m_Colors[a];
              }
              m_ImgObject.SetImagePagePixels(0, m_Colors, Rectangle.Empty);
            </code></example>
      <remarks>Specify an empty rectangle to get or set the full image selection.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImagePageStatistics(System.Int32)">
      <summary>
            Retrieves the specified image page statistics.
            </summary>
      <param name="PageNumber">The page to retrieve the image statistics.</param>
      <returns>The image statistics values.</returns>
      <example>The following example gets the image statistics of the second page.
            <code lang="vbnet">
              Dim m_Statistics As ImageComponents.Win32.Imaging.ICImageStatistics = Nothing
              m_Statistics = m_ImageObject.GetImagePageStatistics(1)
            </code><code lang="C#">
              ImageComponents.Win32.Imaging.ICImageStatistics m_Statistics = null;
              m_Statistics = m_ImageObject.GetImagePageStatistics(1);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImagePageStatistics(System.Int32,System.Drawing.Rectangle)">
      <summary>
            Retrieves the specified image page statistics.
            </summary>
      <param name="PageNumber">The page to retrieve the image statistics.</param>
      <param name="Selection">The image selection rectangle value.</param>
      <returns>The image statistics values.</returns>
      <example>The following example gets the image statistics of the second page with a selection rectangle of 100x100 starting at position zero.
            <code lang="vbnet">
              Dim m_Statistics As ImageComponents.Win32.Imaging.ICImageStatistics = Nothing
              Dim m_Rect As Rectangle = new Rectangle(0, 0, 100, 100)
              m_Statistics = m_ImageObject.GetImagePageStatistics(1, m_Rect)
            </code><code lang="C#">
              ImageComponents.Win32.Imaging.ICImageStatistics m_Statistics = null;
              Rectangle m_Rect = new Rectangle(0, 0, 100, 100);
              m_Statistics = m_ImageObject.GetImagePageStatistics(1, m_Rect);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FloodFillImage(System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Flood fills the selected image position with a specified color and tolerance.
            </summary>
      <param name="FillColor">The color that will replace the selected position pixel.</param>
      <param name="Tolerance">The color tolerance of the fill color.</param>
      <example>The following example replace the selected pixel color with a blue value.
            <code lang="vbnet">
              m_ImageObject.FloodFillImage(Color.Blue, Color.Blue)
            </code><code lang="C#">
              m_ImageObject.FloodFillImage(Color.Blue, Color.Blue);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FloodFillImage(System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Flood fills the selected image position with a specified color and tolerance.
            </summary>
      <param name="StartPoint">The start point position.</param>
      <param name="FillColor">The color that will replace the selected position pixel.</param>
      <param name="Tolerance">The color tolerance of the fill color.</param>
      <example>The following example replace the pixels color starting at position 50x50 with a blue value.
            <code lang="vbnet">
              m_ImageObject.FloodFillImage(New Point(50,50), Color.Blue, Color.Blue)
            </code><code lang="C#">
              m_ImageObject.FloodFillImage(new Point(50,50), Color.Blue, Color.Blue)
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FloodFillImage(System.Int32,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
      <summary>
            Flood fills the specified image page position with a specified color and tolerance.
            </summary>
      <param name="PageNumber">The page to execute the flood fill.</param>
      <param name="StartPoint">The start point position.</param>
      <param name="FillColor">The color that will replace the selected position pixel.</param>
      <param name="Tolerance">The color tolerance of the fill color.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example replace the pixels color of the first page starting at position 50x50 with a blue value.
            <code lang="vbnet">
              m_ImageObject.FloodFillImage(0, New Point(50,50), Color.Blue, Color.Blue)
            </code><code lang="C#">
              m_ImageObject.FloodFillImage(0, new Point(50,50), Color.Blue, Color.Blue);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FloodFillImageAsync(System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Flood fills the selected image position with a specified color and tolerance asynchronously.
            </summary>
      <param name="FillColor">The color that will replace the selected position pixel.</param>
      <param name="Tolerance">The color tolerance of the fill color.</param>
      <example>The following example replace the selected pixel color with a blue value asynchronously.
            <code lang="vbnet">
              m_ImageObject.FloodFillImageAsync(Color.Blue, Color.Blue)
            </code><code lang="C#">
              m_ImageObject.FloodFillImageAsync(Color.Blue, Color.Blue);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FloodFillImageAsync(System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Flood fills the selected image position with a specified color and tolerance asynchronously.
            </summary>
      <param name="StartPoint">The start point position.</param>
      <param name="FillColor">The color that will replace the selected position pixel.</param>
      <param name="Tolerance">The color tolerance of the fill color.</param>
      <example>The following example replace the pixels color starting at position 50x50 with a blue value asynchronously.
            <code lang="vbnet">
              m_ImageObject.FloodFillImageAsync(New Point(50,50), Color.Blue, Color.Blue)
            </code><code lang="C#">
              m_ImageObject.FloodFillImageAsync(new Point(50,50), Color.Blue, Color.Blue)
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FloodFillImageAsync(System.Int32,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
      <summary>
            Flood fills the specified image page position with a specified color and tolerance asynchronously.
            </summary>
      <param name="PageNumber">The page to execute the flood fill.</param>
      <param name="StartPoint">The start point position.</param>
      <param name="FillColor">The color that will replace the selected position pixel.</param>
      <param name="Tolerance">The color tolerance of the fill color.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example replace the pixels color of the first page starting at position 50x50 with a blue value asynchronously.
            <code lang="vbnet">
              m_ImageObject.FloodFillImageAsync(0, New Point(50,50), Color.Blue, Color.Blue)
            </code><code lang="C#">
              m_ImageObject.FloodFillImageAsync(0, new Point(50,50), Color.Blue, Color.Blue);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ImageColorReplace(System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>
            Replaces the color of the selected image page position with a specified color and threshold.
            </summary>
      <param name="SourceColor">The color to replace.</param>
      <param name="NewColor">The color that will replace.</param>
      <param name="Threshold">The tolerance threshold value.</param>
      <example>The following example replace the selected black image color with a blue value and a 10% tolerance.
            <code lang="vbnet">
              m_ImageObject.ImageColorReplace(Color.Black, Color.Blue, 10)
            </code><code lang="C#">
              m_ImageObject.ImageColorReplace(Color.Black, Color.Blue, 10);
            </code></example>
      <remarks>The value of the threshold must be between 1 and 100.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ImageColorReplace(System.Int32,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>
            Replaces the color of the specified image page position with a specified color and threshold.
            </summary>
      <param name="PageNumber">The page to execute the flood fill.</param>
      <param name="SourceColor">The color to replace.</param>
      <param name="NewColor">The color that will replace.</param>
      <param name="Threshold">The tolerance threshold value.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example replace the black image color of the first page with a blue value and a 10% tolerance.
            <code lang="vbnet">
              m_ImageObject.ImageColorReplace(0, Color.Black, Color.Blue, 10)
            </code><code lang="C#">
              m_ImageObject.ImageColorReplace(0, Color.Black, Color.Blue, 10);
            </code></example>
      <remarks>The value of the threshold must be between 1 and 100.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ImageColorReplaceAsync(System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>
            Replaces the color of the selected image page position with a specified color and threshold asynchronously.
            </summary>
      <param name="SourceColor">The color to replace.</param>
      <param name="NewColor">The color that will replace.</param>
      <param name="Threshold">The tolerance threshold value.</param>
      <example>The following example replace the selected black image color with a blue value and a 10% tolerance asynchronously.
            <code lang="vbnet">
              m_ImageObject.ImageColorReplaceAsync(Color.Black, Color.Blue, 10)
            </code><code lang="C#">
              m_ImageObject.ImageColorReplaceAsync(Color.Black, Color.Blue, 10);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
      <remarks>The value of the threshold must be between 1 and 100.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ImageColorReplaceAsync(System.Int32,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>
            Replaces the color of the specified image page position with a specified color and threshold asynchronously.
            </summary>
      <param name="PageNumber">The page to execute the flood fill.</param>
      <param name="SourceColor">The color to replace.</param>
      <param name="NewColor">The color that will replace.</param>
      <param name="Threshold">The tolerance threshold value.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example replace the black image color of the first page with a blue value and a 10% tolerance asynchronously.
            <code lang="vbnet">
              m_ImageObject.ImageColorReplaceAsync(0, Color.Black, Color.Blue, 10)
            </code><code lang="C#">
              m_ImageObject.ImageColorReplaceAsync(0, Color.Black, Color.Blue, 10);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
      <remarks>The value of the threshold must be between 1 and 100.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReadLineSegments(System.Int32,System.Int32,System.Int32)">
      <summary>
            read the lines from the specified image page position with a minimum and maximum line size.
            </summary>
      <param name="PageNumber">The page to execute the flood fill.</param>
      <param name="MinSize">The minimum read line size.</param>
      <param name="MaxSize">The maximum read line size.</param>
      <returns>The read line segments collection.</returns>
      <example>The following example reads the existing lines from the image first page with a specific line size.
            <code lang="vbnet">
              Dim m_Lines As New List(Of ICLineSegment)()
              m_Lines = m_ImageObject.ReadLineSegments(0, 100, 500)
            </code><code lang="C#">
              List&lt;ICLineSegment&gt; m_Lines = new List&lt;ICLineSegment&gt;()
              m_Lines = m_ImageObject.ReadLineSegments(0, 100, 500);
            </code></example>
      <remarks>For all line sizes specify a value of -1.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CompareImages(System.Collections.Generic.List{ImageComponents.Core.Imaging.ICComparableImage})">
      <summary>
            Compares the loaded image to a collection of images finger print and reports a percentage similarity value.
            </summary>
      <param name="ImageSources">The finger print images collection.</param>
      <example>The following example compares two images for similarity using the visual comparition.
            <code lang="vbnet">
              m_ImageObject.ImageFilePath = "C:\\MyFile1.tif"
              m_ImageObject.Load()
              Dim m_FingerPrint As ICComparableImage = m_ImageObject.CreateCompareFingerPrint(File.ReadAllBytes("C:\MyFile2.tif"), new ICRectangle(), True);
              Dim m_ImagesFingerPrint As New List(Of ICComparableImage)()
              m_FingerPrint.ImageID = "DocumentType1"
              m_ImagesFingerPrint.Add(m_FingerPrint)
              m_ImageObject.CompareImages(m_ImagesFingerPrint)
            </code><code lang="C#">
              m_ImageObject.ImageFilePath = "C:\\MyFile1.tif";
              m_ImageObject.Load();
              ICComparableImage m_FingerPrint = m_ImageObject.CreateCompareFingerPrint(File.ReadAllBytes("C:\\MyFile2.tif"), new ICRectangle(), true);
              m_FingerPrint.ImageID = "DocumentType1";
              m_ImagesFingerPrint.Add(m_FingerPrint);
              m_ImageObject.CompareImages(m_ImagesFingerPrint);
            </code></example>
      <returns>The similarity comparison result percentage values in descending order.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CreateImageFingerPrint(System.Byte[],ImageComponents.Core.Imaging.ICRectangle,System.Boolean)">
      <summary>
            Creates a comparable image fingerprint.
            The fingerprint is an image (visual) or text(non visual) template witch other images can be compared for similarity.
            </summary>
      <param name="ImageSource">Image source to create the fingerprint.</param>
      <param name="ImageZone">Image rectangle zone.</param>
      <param name="IsVisual">Is visual(image) or non visual(text) finger print.</param>
      <example>The following example creates an image finger print using the visual method.
            <code lang="vbnet">
              Dim m_FingerPrint As ICComparableImage = m_ImageObject.CreateCompareFingerPrint(File.ReadAllBytes("C:\MyFile2.tif"), new ICRectangle(), True);
            </code><code lang="C#">
              ICComparableImage m_FingerPrint = m_ImageObject.CreateCompareFingerPrint(File.ReadAllBytes("C:\\MyFile2.tif"), new ICRectangle(), true);
            </code></example>
      <returns>The image finger print.</returns>
      <remarks>The fingerprints may be stored in a database to be reused.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImageOCRResult">
      <summary>
            Serializes the OCR result of the loaded image.
            </summary>
      <example>The following example serializes the OCR result of the loaded image.
            <code lang="vbnet">
              imgEdit.GetImageOCRResult()
            </code><code lang="C#">
              imgEdit.GetImageOCRResult();
            </code></example>
      <remarks>The OCR must first be executed.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetImageOCRResult(System.Int32)">
      <summary>
            Serializes the OCR result of the specified image page.
            </summary>
      <param name="PageNumber">The page number to serialize the result.</param>
      <example>The following example serializes the OCR result of the first page.
            <code lang="vbnet">
              imgEdit.GetImageOCRResult(0)
            </code><code lang="C#">
              imgEdit.GetImageOCRResult(0);
            </code></example>
      <remarks>The OCR must first be executed.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SetImageOCRResult(System.String)">
      <summary>
            De-serialize and load the OCR result into the loaded image.
            </summary>
      <param name="Value">The serialized OCR result value.</param>
      <example>The following example loads the serialized OCR result into the loaded image.
            <code lang="vbnet">
              Dim m_Result as String = imgEdit.GetImageOCRResult()
              imgEdit.SetImageOCRResult(m_Result)
            </code><code lang="C#">
              string m_Result = imgEdit.GetImageOCRResult();
              imgEdit.SetImageOCRResult(m_Result);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CancelBatchExecution">
      <summary>
            Cancels all existent image batch executions.
            </summary>
      <example>The following example cancels the executing image batches.
            <code lang="vbnet">
              m_ImageObject.CancelBatchExecution()
            </code><code lang="C#">
              m_ImageObject.CancelBatchExecution();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterMedian(System.Int32,System.Boolean)">
      <summary>
            Applies the median filter to the displayed image page.
            </summary>
      <param name="MatrixSize">The median matrix size value.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the median filter to the displayed image with a value of 3.
            <code lang="vbnet">
              m_ImageObject.FilterMedian(3)
            </code><code lang="C#">
              m_ImageObject.FilterMedian(3);
            </code></example>
      <remarks>The supported matrix size values are: 1,3,5,7,9,11 and 13.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterMedianAsync(System.Int32,System.Boolean)">
      <summary>
            Applies the median filter to the displayed image page asynchronously.
            </summary>
      <param name="MatrixSize">The median matrix size value.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the median filter to the displayed image with a value of 3.
            <code lang="vbnet">
              m_ImageObject.FilterMedianAsync(3)
            </code><code lang="C#">
              m_ImageObject.FilterMedianAsync(3);
            </code></example>
      <remarks>The supported matrix size values are: 1,3,5,7,9,11 and 13.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterBlackAndWhite(System.Single,System.Boolean)">
      <summary>
            Applies the black and white filter to the displayed image page.
            </summary>
      <param name="Value">Brightness value.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the black and white filter to the displayed image with a brightness value of 0.5F.
            <code lang="vbnet">
              m_ImageObject.FilterBlackAndWhite(0.5)
            </code><code lang="C#">
              m_ImageObject.FilterBlackAndWhite(0.5F);
            </code></example>
      <remarks>The value of the filter should be between 0 and 1.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterBlackAndWhiteAsync(System.Single,System.Boolean)">
      <summary>
            Applies the black and white filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">Brightness value.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the black and white filter to the displayed image with a brightness value of 0.5F.
            <code lang="vbnet">
              m_ImageObject.FilterBlackAndWhiteAsync(0.5)
            </code><code lang="C#">
              m_ImageObject.FilterBlackAndWhiteAsync(0.5F);
            </code></example>
      <remarks>The value of the filter should be between 0 and 1.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterAutoThreshold(System.Boolean)">
      <summary>
            Applies the auto threshold filter to the displayed image page.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the auto threshold filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterAutoThreshold()
            </code><code lang="C#">
              m_ImageObject.FilterAutoThreshold();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterAutoThresholdAsync(System.Boolean)">
      <summary>
            Applies the auto threshold filter to the displayed image page asynchronously.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the auto threshold filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterAutoThresholdAsync()
            </code><code lang="C#">
              m_ImageObject.FilterAutoThresholdAsync();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterAutoThreshold(System.Collections.Generic.List{System.Int32})">
      <summary>
            Applies the auto threshold filter to the specified image page range.
            </summary>
      <param name="PageRange">The page range to apply the filter.</param>
      <example>The following example shows how to apply the auto threshold filter to the page range collection.
            <code lang="vbnet">
              Dim m_Range As New List(Of Integer)()
              m_Range.Add(0)
              m_Range.Add(1)
              m_ImageObject.FilterAutoThreshold(m_Range, True)
            </code><code lang="C#">
              List&lt;int&gt; m_Range = new List&lt;int&gt;() { 0, 1 };
              m_ImageObject.FilterAutoThreshold(m_Range, True);
            </code></example>
      <remarks>To process the total pages create the page range collection with the -1 value.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterAutoThresholdAsync(System.Collections.Generic.List{System.Int32})">
      <summary>
            Applies the auto threshold filter to the specified image page range asynchronously.
            </summary>
      <param name="PageRange">The page range to apply the filter.</param>
      <example>The following example shows how to apply the auto threshold filter to the page range collection.
            <code lang="vbnet">
              Dim m_Range As New List(Of Integer)()
              m_Range.Add(0)
              m_Range.Add(1)
              m_ImageObject.FilterAutoThresholdAsync(m_Range, True)
            </code><code lang="C#">
              List&lt;int&gt; m_Range = new List&lt;int&gt;() { 0, 1 };
              m_ImageObject.FilterAutoThresholdAsync(m_Range, True);
            </code></example>
      <remarks>To process the total pages create the page range collection with the -1 value.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterInvert(System.Boolean)">
      <summary>
            Applies the invert filter to the displayed image page.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the invert filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterInvert()
            </code><code lang="C#">
              m_ImageObject.FilterInvert();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterInvertAsync(System.Boolean)">
      <summary>
            Applies the invert filter to the displayed image page asynchronously.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the invert filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterInvertAsync()
            </code><code lang="C#">
              m_ImageObject.FilterInvertAsync();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterBayerDithering(System.Boolean)">
      <summary>
            Applies the Bayer dithering filter to the displayed image page.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the Bayer dithering filter to the displayed image
            <code lang="vbnet">
              m_ImageObject.FilterBayerDithering()
            </code><code lang="C#">
              m_ImageObject.FilterBayerDithering();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterBayerDitheringAsync(System.Boolean)">
      <summary>
            Applies the Bayer dithering filter to the displayed image page asynchronously.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the Bayer dithering filter to the displayed image
            <code lang="vbnet">
              m_ImageObject.FilterBayerDitheringAsync()
            </code><code lang="C#">
              m_ImageObject.FilterBayerDitheringAsync();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterFloydSteinbergDithering(System.Boolean)">
      <summary>
            Applies the Floyd Steinberg dithering filter to the displayed image page.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the Floyd Steinberg dithering filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterFloydSteinbergDithering()
            </code><code lang="C#">
              m_ImageObject.FilterFloydSteinbergDithering();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterFloydSteinbergDitheringAsync(System.Boolean)">
      <summary>
            Applies the Floyd Steinberg dithering filter to the displayed image page asynchronously.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the Floyd Steinberg dithering filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterFloydSteinbergDitheringAsync()
            </code><code lang="C#">
              m_ImageObject.FilterFloydSteinbergDitheringAsync();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterOrderedDithering(System.Boolean)">
      <summary>
            Applies the ordered dithering filter to the displayed image page.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the ordered dithering filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterOrderedDithering()
            </code><code lang="C#">
              m_ImageObject.FilterOrderedDithering();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterOrderedDitheringAsync(System.Boolean)">
      <summary>
            Applies the ordered dithering filter to the displayed image page asynchronously.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the ordered dithering filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterOrderedDitheringAsync()
            </code><code lang="C#">
              m_ImageObject.FilterOrderedDitheringAsync();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterGrayScale(System.Boolean)">
      <summary>
            Applies the grayscale filter to the displayed image page.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the grayscale filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterGrayScale()
            </code><code lang="C#">
              m_ImageObject.FilterGrayScale();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterGrayScaleAsync(System.Boolean)">
      <summary>
            Applies the gray scale filter to the displayed image page asynchronously.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the gray scale filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterGrayScaleAsync()
            </code><code lang="C#">
              m_ImageObject.FilterGrayScaleAsync();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterSmooth(System.Boolean)">
      <summary>
            Applies the smooth filter to the displayed image page.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the smooth filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterSmooth()
            </code><code lang="C#">
              m_ImageObject.FilterSmooth();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterSmoothAsync(System.Boolean)">
      <summary>
            Applies the smooth filter to the displayed image page asynchronously.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the smooth filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterSmoothAsync()
            </code><code lang="C#">
              m_ImageObject.FilterSmoothAsync();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterBrightness(System.Int32,System.Boolean)">
      <summary>
            Applies the brightness filter to the displayed image page.
            </summary>
      <param name="Value">The value of the brightness filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the brightness filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterBrightness(50)
            </code><code lang="C#">
              m_ImageObject.FilterBrightness(50);
            </code></example>
      <remarks>The value of the filter must be between -100 and 100.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterBrightnessAsync(System.Int32,System.Boolean)">
      <summary>
            Applies the brightness filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">The value of the brightness filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the brightness filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterBrightnessAsync(50)
            </code><code lang="C#">
              m_ImageObject.FilterBrightnessAsync(50);
            </code></example>
      <remarks>The value of the filter must be between -100 and 100.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterContrast(System.SByte,System.Boolean)">
      <summary>
            Applies the contrast filter to the displayed image page.
            </summary>
      <param name="Value">The value of the contrast filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the contrast filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterContrast(50)
            </code><code lang="C#">
              m_ImageObject.FilterContrast(50);
            </code></example>
      <remarks>The value of the filter must be between -100 and 100.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterContrastAsync(System.SByte,System.Boolean)">
      <summary>
            Applies the contrast filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">The value of the contrast filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the contrast filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterContrastAsync(50)
            </code><code lang="C#">
              m_ImageObject.FilterContrastAsync(50);
            </code></example>
      <remarks>The value of the filter must be between -100 and 100.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterGamma(System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
            Applies the gamma filter to the displayed image page.
            </summary>
      <param name="RedValue">The red value to apply.</param>
      <param name="GreenValue">The green value to apply.</param>
      <param name="BlueValue">The blue value to apply.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the gamma filter to the displayed image with a red value of 3.
            <code lang="vbnet">
              m_ImageObject.FilterGamma(3,0,0)
            </code><code lang="C#">
              m_ImageObject.FilterGamma(3,0,0);
            </code></example>
      <remarks>The red, green and blue values must be between 0.2 and 5.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterGammaAsync(System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
            Applies the gamma filter to the displayed image page asynchronously.
            </summary>
      <param name="RedValue">The red value to apply.</param>
      <param name="GreenValue">The green value to apply.</param>
      <param name="BlueValue">The blue value to apply.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the gamma filter to the displayed image with a red value of 3.
            <code lang="vbnet">
              m_ImageObject.FilterGammaAsync(3,0,0)
            </code><code lang="C#">
              m_ImageObject.FilterGammaAsync(3,0,0);
            </code></example>
      <remarks>The red, green and blue values must be between 0.2 and 5.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterColor(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Applies the color filter to the displayed image page.
            </summary>
      <param name="RedValue">The red value to apply.</param>
      <param name="GreenValue">The green value to apply.</param>
      <param name="BlueValue">The blue value to apply.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the color filter to the displayed image with a red value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterColor(50,0,0)
            </code><code lang="C#">
              m_ImageObject.FilterColor(50,0,0);
            </code></example>
      <remarks>The red, green and blue values must be between -255 and 255.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterColorAsync(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Applies the color filter to the displayed image page asynchronously.
            </summary>
      <param name="RedValue">The red value to apply.</param>
      <param name="GreenValue">The green value to apply.</param>
      <param name="BlueValue">The blue value to apply.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the color filter to the displayed image with a red value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterColorAsync(50,0,0)
            </code><code lang="C#">
              m_ImageObject.FilterColorAsync(50,0,0);
            </code></example>
      <remarks>The red, green and blue values must be between -255 and 255.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterGaussianBlur(System.Int32,System.Boolean)">
      <summary>
            Applies the gaussian blur filter to the displayed image page.
            </summary>
      <param name="Value">The value of the gaussian blur filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the gaussian blur filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterGaussianBlur(4)
            </code><code lang="C#">
              m_ImageObject.FilterGaussianBlur(4);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterGaussianBlurAsync(System.Int32,System.Boolean)">
      <summary>
            Applies the gaussian blur filter to the displayed image page.
            </summary>
      <param name="Value">The value of the gaussian blur filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the gaussian blur filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterGaussianBlur(4)
            </code><code lang="C#">
              m_ImageObject.FilterGaussianBlur(4);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterMeanRemoval(System.Int32,System.Boolean)">
      <summary>
            Applies the mean removal filter to the displayed image page.
            </summary>
      <param name="Value">The value of the mean removal filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the mean removal filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterMeanRemoval(9)
            </code><code lang="C#">
              m_ImageObject.FilterMeanRemoval(9);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterMeanRemovalAsync(System.Int32,System.Boolean)">
      <summary>
            Applies the mean removal filter to the displayed image page.
            </summary>
      <param name="Value">The value of the mean removal filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the mean removal filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterMeanRemoval(9)
            </code><code lang="C#">
              m_ImageObject.FilterMeanRemoval(9);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterSharpen(System.Boolean)">
      <summary>
            Applies the sharpen filter to the displayed image page.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the sharpen filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterSharpen()
            </code><code lang="C#">
              m_ImageObject.FilterSharpen();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterSharpenAsync(System.Boolean)">
      <summary>
            Applies the sharpen filter to the displayed image page asynchronously.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the sharpen filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterSharpenAsync()
            </code><code lang="C#">
              m_ImageObject.FilterSharpenAsync();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEmbossLaplacian(System.Boolean)">
      <summary>
            Applies the emboss laplacian filter to the displayed image page.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the emboss laplacian filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterEmbossLaplacian()
            </code><code lang="C#">
              m_ImageObject.FilterEmbossLaplacian();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEmbossLaplacianAsync(System.Boolean)">
      <summary>
            Applies the emboss laplacian filter to the displayed image page asynchronously.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the emboss laplacian filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterEmbossLaplacianAsync()
            </code><code lang="C#">
              m_ImageObject.FilterEmbossLaplacianAsync();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeDetectQuick(System.Boolean)">
      <summary>
            Applies the edge detect quick filter to the displayed image page.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge detect quick filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeDetectQuick()
            </code><code lang="C#">
              m_ImageObject.FilterEdgeDetectQuick();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeDetectQuickAsync(System.Boolean)">
      <summary>
            Applies the edge detect quick filter to the displayed image page asynchronously.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge detect quick filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeDetectQuickAsync()
            </code><code lang="C#">
              m_ImageObject.FilterEdgeDetectQuickAsync();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterRandomJitter(System.Byte,System.Boolean)">
      <summary>
            Applies the random jitter filter to the displayed image page.
            </summary>
      <param name="Value">The value of the degree of the random jitter filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the random jitter filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterRandomJitter(5)
            </code><code lang="C#">
              m_ImageObject.FilterRandomJitter(5);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterRandomJitterAsync(System.Byte,System.Boolean)">
      <summary>
            Applies the random jitter filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">The value of the degree of the random jitter filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the random jitter filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterRandomJitterAsync(5)
            </code><code lang="C#">
              m_ImageObject.FilterRandomJitterAsync(5);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterMoire(System.Double,System.Boolean)">
      <summary>
            Applies the moire filter to the displayed image page.
            </summary>
      <param name="Value">The value of the degree of the moire filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the moire filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterMoire(3)
            </code><code lang="C#">
              m_ImageObject.FilterMoire(3);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterMoireAsync(System.Double,System.Boolean)">
      <summary>
            Applies the moire filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">The value of the degree of the moire filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the moire filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterMoireAsync(3)
            </code><code lang="C#">
              m_ImageObject.FilterMoireAsync(3);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeHorizontal(System.Boolean)">
      <summary>
            Applies the edge horizontal filter to the displayed image page.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge horizontal filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeHorizontal()
            </code><code lang="C#">
              m_ImageObject.FilterEdgeHorizontal();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeHorizontalAsync(System.Boolean)">
      <summary>
            Applies the edge horizontal filter to the displayed image page asynchronously.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge horizontal filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeHorizontalAsync()
            </code><code lang="C#">
              m_ImageObject.FilterEdgeHorizontalAsync();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeVertical(System.Boolean)">
      <summary>
            Applies the edge vertical filter to the displayed image page.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge vertical filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeVertical()
            </code><code lang="C#">
              m_ImageObject.FilterEdgeVertical();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeVerticalAsync(System.Boolean)">
      <summary>
            Applies the edge vertical filter to the displayed image page asynchronously.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge vertical filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeVerticalAsync()
            </code><code lang="C#">
              m_ImageObject.FilterEdgeVerticalAsync();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeKirsh(System.Byte,System.Boolean)">
      <summary>
            Applies the edge kirsh filter to the displayed image page.
            </summary>
      <param name="Value">The value of the edge kirsh filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge kirsh filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeKirsh(50)
            </code><code lang="C#">
              m_ImageObject.FilterEdgeKirsh(50);
            </code></example>
      <remarks>The value of the filter must be between 0 and 255.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeKirshAsync(System.Byte,System.Boolean)">
      <summary>
            Applies the edge kirsh filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">The value of the edge kirsh filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge kirsh filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeKirshAsync(50)
            </code><code lang="C#">
              m_ImageObject.FilterEdgeKirshAsync(50);
            </code></example>
      <remarks>The value of the filter must be between 0 and 255.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgePrewitt(System.Byte,System.Boolean)">
      <summary>
            Applies the edge prewitt filter to the displayed image page.
            </summary>
      <param name="Value">The value of the edge prewitt filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge prewitt filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterEdgePrewitt(50)
            </code><code lang="C#">
              m_ImageObject.FilterEdgePrewitt(50);
            </code></example>
      <remarks>The value of the filter must be between 0 and 255.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgePrewittAsync(System.Byte,System.Boolean)">
      <summary>
            Applies the edge prewitt filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">The value of the edge prewitt filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge prewitt filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterEdgePrewittAsync(50)
            </code><code lang="C#">
              m_ImageObject.FilterEdgePrewittAsync(50);
            </code></example>
      <remarks>The value of the filter must be between 0 and 255.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeSobell(System.Byte,System.Boolean)">
      <summary>
            Applies the edge sobell filter to the displayed image page.
            </summary>
      <param name="Value">The value of the edge sobell filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge sobell filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeSobell(50)
            </code><code lang="C#">
              m_ImageObject.FilterEdgeSobell(50);
            </code></example>
      <remarks>The value of the filter must be between 0 and 255.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeSobellAsync(System.Byte,System.Boolean)">
      <summary>
            Applies the edge sobell filter to the displayed image page.
            </summary>
      <param name="Value">The value of the edge sobell filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge sobell filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeSobellAsync(50)
            </code><code lang="C#">
              m_ImageObject.FilterEdgeSobellAsync(50);
            </code></example>
      <remarks>The value of the filter must be between 0 and 255.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeHomogeneity(System.Byte,System.Boolean)">
      <summary>
            Applies the edge homogeneity filter to the displayed image page.
            </summary>
      <param name="Value">The value of the edge homogeneity filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge homogeneity filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeHomogeneity(50)
            </code><code lang="C#">
              m_ImageObject.FilterEdgeHomogeneity(50);
            </code></example>
      <remarks>The value of the filter must be between 0 and 255.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeHomogeneityAsync(System.Byte,System.Boolean)">
      <summary>
            Applies the edge homogeneity filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">The value of the edge homogeneity filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge homogeneity filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeHomogeneityAsync(50)
            </code><code lang="C#">
              m_ImageObject.FilterEdgeHomogeneityAsync(50);
            </code></example>
      <remarks>The value of the filter must be between 0 and 255.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterCharImprovement(System.Byte,System.Boolean)">
      <summary>
            Applies the char improvement filter to the displayed image page.
            </summary>
      <param name="Value">The value of the char improvement filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the char improvement filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterCharImprovement(3)
            </code><code lang="C#">
              m_ImageObject.FilterCharImprovement(3);
            </code></example>
      <remarks>The value of the filter must be between 0 and 255.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterCharImprovementAsync(System.Byte,System.Boolean)">
      <summary>
            Applies the char improvement filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">The value of the char improvement filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the char improvement filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterCharImprovementAsync(3)
            </code><code lang="C#">
              m_ImageObject.FilterCharImprovementAsync(3);
            </code></example>
      <remarks>The value of the filter must be between 0 and 255.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeDifference(System.Byte,System.Boolean)">
      <summary>
            Applies the edge difference filter to the displayed image page.
            </summary>
      <param name="Value">The value of the edge difference filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge difference filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeDifference(50)
            </code><code lang="C#">
              m_ImageObject.FilterEdgeDifference(50);
            </code></example>
      <remarks>The value of the filter must be between 0 and 255.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeDifferenceAsync(System.Byte,System.Boolean)">
      <summary>
            Applies the edge difference filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">The value of the edge difference filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge difference filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeDifferenceAsync(50)
            </code><code lang="C#">
              m_ImageObject.FilterEdgeDifferenceAsync(50);
            </code></example>
      <remarks>The value of the filter must be between 0 and 255.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeEnhance(System.Byte,System.Boolean)">
      <summary>
            Applies the edge enhance filter to the displayed image page.
            </summary>
      <param name="Value">The value of the edge enhance filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge enhance filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeEnhance(50)
            </code><code lang="C#">
              m_ImageObject.FilterEdgeEnhance(50);
            </code></example>
      <remarks>The value of the filter must be between 0 and 255.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterEdgeEnhanceAsync(System.Byte,System.Boolean)">
      <summary>
            Applies the edge enhance filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">The value of the edge enhance filter.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the edge enhance filter to the displayed image with a value of 50.
            <code lang="vbnet">
              m_ImageObject.FilterEdgeEnhanceAsync(50)
            </code><code lang="C#">
              m_ImageObject.FilterEdgeEnhanceAsync(50);
            </code></example>
      <remarks>The value of the filter must be between 0 and 255.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterSwirl(System.Double,System.Boolean,System.Boolean)">
      <summary>
            Applies the swirl filter to the displayed image page.
            </summary>
      <param name="Value">The value of the degree of the moire filter.</param>
      <param name="AntiAlias">Applies or not the filter with anti-alias.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the swirl filter to the displayed image with anti-alias.
            <code lang="vbnet">
              m_ImageObject.FilterSwirl(0.04,True)
            </code><code lang="C#">
              m_ImageObject.FilterSwirl(0.04,true);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterSwirlAsync(System.Double,System.Boolean,System.Boolean)">
      <summary>
            Applies the swirl filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">The value of the degree of the moire filter.</param>
      <param name="AntiAlias">Applies or not the filter with anti-alias.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the swirl filter to the displayed image with anti-alias.
            <code lang="vbnet">
              m_ImageObject.FilterSwirlAsync(0.04,True)
            </code><code lang="C#">
              m_ImageObject.FilterSwirlAsync(0.04,true);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterSphere(System.Boolean,System.Boolean)">
      <summary>
            Applies the sphere filter to the displayed image page.
            </summary>
      <param name="AntiAlias">Applies or not the filter with anti-alias.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the sphere filter to the displayed image with anti-alias.
            <code lang="vbnet">
              m_ImageObject.FilterSphere(True)
            </code><code lang="C#">
              m_ImageObject.FilterSphere(true);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterSphereAsync(System.Boolean,System.Boolean)">
      <summary>
            Applies the sphere filter to the displayed image page asynchronously.
            </summary>
      <param name="AntiAlias">Applies or not the filter with anti-alias.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the sphere filter to the displayed image with anti-alias.
            <code lang="vbnet">
              m_ImageObject.FilterSphereAsync(True)
            </code><code lang="C#">
              m_ImageObject.FilterSphereAsync(true);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterTimeWarp(System.Byte,System.Boolean,System.Boolean)">
      <summary>
            Applies the time warp filter to the displayed image page.
            </summary>
      <param name="Value">The value of the factor of the time warp filter.</param>
      <param name="AntiAlias">Applies or not the filter with anti-alias.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the time warp filter to the displayed image with anti-alias.
            <code lang="vbnet">
              m_ImageObject.FilterTimeWarp(15,True)
            </code><code lang="C#">
              m_ImageObject.FilterTimeWarp(15,true);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterTimeWarpAsync(System.Byte,System.Boolean,System.Boolean)">
      <summary>
            Applies the time warp filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">The value of the factor of the time warp filter.</param>
      <param name="AntiAlias">Applies or not the filter with anti-alias.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the time warp filter to the displayed image with anti-alias.
            <code lang="vbnet">
              m_ImageObject.FilterTimeWarpAsync(15,True)
            </code><code lang="C#">
              m_ImageObject.FilterTimeWarpAsync(15,true);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterWater(System.Int16,System.Boolean,System.Boolean)">
      <summary>
            Applies the water filter to the displayed image page.
            </summary>
      <param name="Value">The value of the wave of the water filter.</param>
      <param name="AntiAlias">Applies or not the filter with anti-alias.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the water filter to the displayed image with anti-alias.
            <code lang="vbnet">
              m_ImageObject.FilterWater(15,True)
            </code><code lang="C#">
              m_ImageObject.FilterWater(15,true);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterWaterAsync(System.Int16,System.Boolean,System.Boolean)">
      <summary>
            Applies the water filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">The value of the wave of the water filter.</param>
      <param name="AntiAlias">Applies or not the filter with anti-alias.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the water filter to the displayed image with anti-alias.
            <code lang="vbnet">
              m_ImageObject.FilterWaterAsync(15,True)
            </code><code lang="C#">
              m_ImageObject.FilterWaterAsync(15,true);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterPixelate(System.Int16,System.Boolean,System.Boolean)">
      <summary>
            Applies the pix elate filter to the displayed image page.
            </summary>
      <param name="Value">The value of the pixel of the pix elate filter.</param>
      <param name="Grid">Shows or not the grid in the displayed image.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the pix elate filter to the displayed image with no grid.
            <code lang="vbnet">
              m_ImageObject.FilterPixelate(15,False)
            </code><code lang="C#">
              m_ImageObject.FilterPixelate(15,false);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterPixelateAsync(System.Int16,System.Boolean,System.Boolean)">
      <summary>
            Applies the pix elate filter to the displayed image page asynchronously.
            </summary>
      <param name="Value">The value of the pixel of the pix elate filter.</param>
      <param name="Grid">Shows or not the grid in the displayed image.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the pix elate filter to the displayed image with no grid.
            <code lang="vbnet">
              m_ImageObject.FilterPixelateAsync(15,False)
            </code><code lang="C#">
              m_ImageObject.FilterPixelateAsync(15,false);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.RemoveBorders(System.Collections.Generic.List{System.Int32},System.Drawing.Color,System.Int32,System.Drawing.Color)">
      <summary>
            Removes the black borders from the specified image page range.
            </summary>
      <param name="PageRange">The page range to apply the filter.</param>
      <param name="OriginalColor">The image border color to remove.</param>
      <param name="Tolerance">The color to remove tolerance value.</param>
      <param name="ReplaceColor">The image border color to replace.</param>
      <example>The following example shows how to remove the black borders to the page range collection, replacing with a white color with no tolerance..
            <code lang="vbnet">
              Dim m_Range As New List(Of Integer)()
              m_Range.Add(0)
              m_Range.Add(1)
              m_ImageObject.RemoveBorders(m_Range, Color.Black, 0, Color.White)
            </code><code lang="C#">
              List&lt;int&gt; m_Range = new List&lt;int&gt;() { 0, 1 };
              m_ImageObject.RemoveBorders(m_Range, Color.Black, 0, Color.White);
            </code></example>
      <remarks>To process the total pages create the page range collection with the -1 value.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.RemoveBordersAsync(System.Collections.Generic.List{System.Int32},System.Drawing.Color,System.Int32,System.Drawing.Color)">
      <summary>
            Removes the black borders from the specified image page range asynchronously.
            </summary>
      <param name="PageRange">The page range to apply the filter.</param>
      <param name="OriginalColor">The image border color to remove.</param>
      <param name="Tolerance">The color to remove tolerance value.</param>
      <param name="ReplaceColor">The image border color to replace.</param>
      <example>The following example shows how to remove the black borders to the page range collection, replacing with a white color with no tolerance..
            <code lang="vbnet">
              Dim m_Range As New List(Of Integer)()
              m_Range.Add(0)
              m_Range.Add(1)
              m_ImageObject.RemoveBordersAsync(m_Range, Color.Black, 0, Color.White)
            </code><code lang="C#">
              List&lt;int&gt; m_Range = new List&lt;int&gt;() { 0, 1 };
              m_ImageObject.RemoveBordersAsync(m_Range, Color.Black, 0, Color.White);
            </code></example>
      <remarks>To process the total pages create the page range collection with the -1 value.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.RemoveBorders(System.Drawing.Color,System.Int32,System.Drawing.Color,System.Boolean)">
      <summary>
            Removes the black borders of the displayed image.
            </summary>
      <param name="OriginalColor">The image border color to remove.</param>
      <param name="Tolerance">The color to remove tolerance value.</param>
      <param name="ReplaceColor">The image border color to replace.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to remove the black borders of the displayed image, replacing with a white color with no tolerance.
            <code lang="vbnet">
              m_ImageObject.RemoveBorders(Color.Black, 0, Color.White)
            </code><code lang="C#">
              m_ImageObject.RemoveBorders(Color.Black, 0, Color.White);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.RemoveBordersAsync(System.Drawing.Color,System.Int32,System.Drawing.Color,System.Boolean)">
      <summary>
            Removes the black borders of the displayed image asynchronously.
            </summary>
      <param name="OriginalColor">The image border color to remove.</param>
      <param name="Tolerance">The color to remove tolerance value.</param>
      <param name="ReplaceColor">The image border color to replace.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to remove the black borders of the displayed image, replacing with a white color with no tolerance.
            <code lang="vbnet">
              m_ImageObject.RemoveBordersAsync(Color.Black, 0, Color.White)
            </code><code lang="C#">
              m_ImageObject.RemoveBordersAsync(Color.Black, 0, Color.White);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AutoCropImage(System.Boolean)">
      <summary>
            Automatic cropping of the displayed image.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to auto crop the displayed image.
            <code lang="vbnet">
              m_ImageObject.AutoCropImage()
            </code><code lang="C#">
              m_ImageObject.AutoCropImage();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AutoCropImageAsync(System.Boolean)">
      <summary>
            Automatic cropping of the displayed image asynchronously.
            </summary>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to auto crop the displayed image.
            <code lang="vbnet">
              m_ImageObject.AutoCropImageAsync()
            </code><code lang="C#">
              m_ImageObject.AutoCropImageAsync();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AutoCropImage(System.Drawing.Color,System.Byte,System.Boolean)">
      <summary>
            Automatic cropping of the displayed image.
            </summary>
      <param name="BackColor">The crop background color.</param>
      <param name="Tolerance">The background color tolerance value.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to auto crop the displayed image with a white background and a 10 value of tolerance.
            <code lang="vbnet">
              m_ImageObject.AutoCropImage(Color.White, 10)
            </code><code lang="C#">
              m_ImageObject.AutoCropImage(Color.White, 10);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AutoCropImageAsync(System.Drawing.Color,System.Byte,System.Boolean)">
      <summary>
            Automatic cropping of the displayed image asynchronously.
            </summary>
      <param name="BackColor">The crop background color.</param>
      <param name="Tolerance">The background color tolerance value.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to auto crop the displayed image with a white background and a 10 value of tolerance.
            <code lang="vbnet">
              m_ImageObject.AutoCropImageAsync(Color.White, 10)
            </code><code lang="C#">
              m_ImageObject.AutoCropImageAsync(Color.White, 10);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.DeskewImage">
      <summary>
            Automatic skewing of the displayed image.
            </summary>
      <example>The following example shows how to deskew the displayed image.
            <code lang="vbnet">
              m_ImageObject.DeskewImage()
            </code><code lang="C#">
              m_ImageObject.DeskewImage();
            </code></example>
      <remarks>By default the edges of the image are not preserved on rotation.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.DeskewImage(System.Boolean)">
      <summary>
            Automatic skewing of the displayed image.
            </summary>
      <param name="PreserveEdges">Preserves the image edges on image deskew.</param>
      <example>The following example shows how to deskew the displayed image.
            <code lang="vbnet">
              m_ImageObject.DeskewImage(True)
            </code><code lang="C#">
              m_ImageObject.DeskewImage(True);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.DeskewImage(System.Collections.Generic.List{System.Int32},System.Boolean)">
      <summary>
            Automatic skewing of the specified image page range.
            </summary>
      <param name="PageRange">The page range to apply the filter.</param>
      <param name="PreserveEdges">Preserves the image edges on image deskew.</param>
      <example>The following example shows how to deskew the specified page range collection.
            <code lang="vbnet">
              Dim m_Range As New List(Of Integer)()
              m_Range.Add(0)
              m_Range.Add(1)
              m_ImageObject.DeskewImage(m_Range, True)
            </code><code lang="C#">
              List&lt;int&gt; m_Range = new List&lt;int&gt;() { 0, 1 };
              m_ImageObject.DeskewImage(m_Range, True);
            </code></example>
      <remarks>To process the total pages create the page range collection with the -1 value.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.DeskewImageAsync(System.Collections.Generic.List{System.Int32},System.Boolean)">
      <summary>
            Automatic skewing of the specified image page range asynchronously.
            </summary>
      <param name="PageRange">The page range to apply the filter.</param>
      <param name="PreserveEdges">Preserves the image edges on image deskew.</param>
      <example>The following example shows how to deskew the specified page range collection.
            <code lang="vbnet">
              Dim m_Range As New List(Of Integer)()
              m_Range.Add(0)
              m_Range.Add(1)
              m_ImageObject.DeskewImageAsync(m_Range, True)
            </code><code lang="C#">
              List&lt;int&gt; m_Range = new List&lt;int&gt;() { 0, 1 };
              m_ImageObject.DeskewImageAsync(m_Range, True);
            </code></example>
      <remarks>To process the total pages create the page range collection with the -1 value.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterDespeckle">
      <summary>
            Applies the despeckle filter to the displayed image page.
            </summary>
      <example>The following example shows how to apply the despeckle filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterDespeckle()
            </code><code lang="C#">
              m_ImageObject.FilterDespeckle();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterDespeckle(System.Boolean)">
      <summary>
            Applies the despeckle filter to the displayed image page.
            </summary>
      <param name="Extensive">Do an extensive image despeckle processing.</param>
      <example>The following example shows how to apply the despeckle filter to the displayed image without an extensive processing.
            <code lang="vbnet">
              m_ImageObject.FilterDespeckle(False)
            </code><code lang="C#">
              m_ImageObject.FilterDespeckle(false);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterDespeckle(System.Collections.Generic.List{System.Int32},System.Boolean)">
      <summary>
            Applies the despeckle filter to the specified image page range.
            </summary>
      <param name="PageRange">The page range to apply the filter.</param>
      <param name="Extensive">Do an extensive image despeckle processing.</param>
      <example>The following example shows how to apply the despeckle filter to the specified page range collection without an extensive processing.
            <code lang="vbnet">
              Dim m_Range As New List(Of Integer)()
              m_Range.Add(0)
              m_Range.Add(1)
              m_ImageObject.FilterDespeckle(m_Range, False)
            </code><code lang="C#">
              List&lt;int&gt; m_Range = new List&lt;int&gt;() { 0, 1 };
              m_ImageObject.FilterDespeckle(m_Range, false);
            </code></example>
      <remarks>To process the total pages create the page range collection with the -1 value.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterDespeckleAsync(System.Collections.Generic.List{System.Int32},System.Boolean)">
      <summary>
            Applies the despeckle filter to the specified image page range asynchronously.
            </summary>
      <param name="PageRange">The page range to apply the filter.</param>
      <param name="Extensive">Do an extensive image despeckle processing.</param>
      <example>The following example shows how to apply the despeckle filter to the specified page range collection without an extensive processing.
            <code lang="vbnet">
              Dim m_Range As New List(Of Integer)()
              m_Range.Add(0)
              m_Range.Add(1)
              m_ImageObject.FilterDespeckleAsync(m_Range, False)
            </code><code lang="C#">
              List&lt;int&gt; m_Range = new List&lt;int&gt;() { 0, 1 };
              m_ImageObject.FilterDespeckleAsync(m_Range, false);
            </code></example>
      <remarks>To process the total pages create the page range collection with the -1 value.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterOpenMorphology(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Applies the open morphology filter to the displayed image page.
            </summary>
      <param name="MatrixSize">The matrix size value.</param>
      <param name="ApplyBlue">Optional apply to the blue channel.</param>
      <param name="ApplyGreen">Optional apply to the green channel.</param>
      <param name="ApplyRed">Optional apply to the red channel.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the open morphology filter to the displayed image with a matrix size of 3.
            <code lang="vbnet">
              m_ImageObject.FilterOpenMorphology(3)
            </code><code lang="C#">
              m_ImageObject.FilterOpenMorphology(3);
            </code></example>
      <remarks>The matrix acceptable values are: 3, 5, 7, 9, 11, 13, 15 and 17.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterOpenMorphologyAsync(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Applies the open morphology filter to the displayed image page asynchronously.
            </summary>
      <param name="MatrixSize">The matrix size value.</param>
      <param name="ApplyBlue">Optional apply to the blue channel.</param>
      <param name="ApplyGreen">Optional apply to the green channel.</param>
      <param name="ApplyRed">Optional apply to the red channel.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the open morphology filter to the displayed image with a matrix size of 3.
            <code lang="vbnet">
              m_ImageObject.FilterOpenMorphologyAsync(3)
            </code><code lang="C#">
              m_ImageObject.FilterOpenMorphologyAsync(3);
            </code></example>
      <remarks>The matrix acceptable values are: 3, 5, 7, 9, 11, 13, 15 and 17.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterCloseMorphology(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Applies the close morphology filter to the displayed image page.
            </summary>
      <param name="MatrixSize">The matrix size value.</param>
      <param name="ApplyBlue">Optional apply to the blue channel.</param>
      <param name="ApplyGreen">Optional apply to the green channel.</param>
      <param name="ApplyRed">Optional apply to the red channel.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the close morphology filter to the displayed image with a matrix size of 3.
            <code lang="vbnet">
              m_ImageObject.FilterCloseMorphology(3)
            </code><code lang="C#">
              m_ImageObject.FilterCloseMorphology(3);
            </code></example>
      <remarks>The matrix acceptable values are: 3, 5, 7, 9, 11, 13, 15 and 17.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterCloseMorphologyAsync(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Applies the close morphology filter to the displayed image page asynchronously.
            </summary>
      <param name="MatrixSize">The matrix size value.</param>
      <param name="ApplyBlue">Optional apply to the blue channel.</param>
      <param name="ApplyGreen">Optional apply to the green channel.</param>
      <param name="ApplyRed">Optional apply to the red channel.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the close morphology filter to the displayed image with a matrix size of 3.
            <code lang="vbnet">
              m_ImageObject.FilterCloseMorphologyAsync(3)
            </code><code lang="C#">
              m_ImageObject.FilterCloseMorphologyAsync(3);
            </code></example>
      <remarks>The matrix acceptable values are: 3, 5, 7, 9, 11, 13, 15 and 17.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterDilate(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Applies the dilate filter to the displayed image page.
            </summary>
      <param name="MatrixSize">The matrix size value.</param>
      <param name="ApplyBlue">Optional apply to the blue channel.</param>
      <param name="ApplyGreen">Optional apply to the green channel.</param>
      <param name="ApplyRed">Optional apply to the red channel.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the dilate morphology filter to the displayed image with a matrix size of 3.
            <code lang="vbnet">
              m_ImageObject.FilterDilate(3)
            </code><code lang="C#">
              m_ImageObject.FilterDilate(3);
            </code></example>
      <remarks>The matrix acceptable values are: 3, 5, 7, 9, 11, 13, 15 and 17.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterDilateAsync(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Applies the dilate filter to the displayed image page asynchronously.
            </summary>
      <param name="MatrixSize">The matrix size value.</param>
      <param name="ApplyBlue">Optional apply to the blue channel.</param>
      <param name="ApplyGreen">Optional apply to the green channel.</param>
      <param name="ApplyRed">Optional apply to the red channel.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the dilate morphology filter to the displayed image with a matrix size of 3.
            <code lang="vbnet">
              m_ImageObject.FilterDilateAsync(3)
            </code><code lang="C#">
              m_ImageObject.FilterDilateAsync(3);
            </code></example>
      <remarks>The matrix acceptable values are: 3, 5, 7, 9, 11, 13, 15 and 17.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterErode(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Applies the erode filter to the displayed image page.
            </summary>
      <param name="MatrixSize">The matrix size value.</param>
      <param name="ApplyBlue">Optional apply to the blue channel.</param>
      <param name="ApplyGreen">Optional apply to the green channel.</param>
      <param name="ApplyRed">Optional apply to the red channel.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the erode morphology filter to the displayed image with a matrix size of 3.
            <code lang="vbnet">
              m_ImageObject.FilterErode(3)
            </code><code lang="C#">
              m_ImageObject.FilterErode(3);
            </code></example>
      <remarks>The matrix acceptable values are: 3, 5, 7, 9, 11, 13, 15 and 17.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterErodeAsync(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Applies the erode filter to the displayed image page asynchronously.
            </summary>
      <param name="MatrixSize">The matrix size value.</param>
      <param name="ApplyBlue">Optional apply to the blue channel.</param>
      <param name="ApplyGreen">Optional apply to the green channel.</param>
      <param name="ApplyRed">Optional apply to the red channel.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the erode morphology filter to the displayed image with a matrix size of 3.
            <code lang="vbnet">
              m_ImageObject.FilterErodeAsync(3)
            </code><code lang="C#">
              m_ImageObject.FilterErodeAsync(3);
            </code></example>
      <remarks>The matrix acceptable values are: 3, 5, 7, 9, 11, 13, 15 and 17.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterCartoon(System.Int32,System.Byte,System.Boolean)">
      <summary>
            Applies the cartoon filter to the displayed image page.
            </summary>
      <param name="FilterSize">The filter size value represents the number of neighbouring pixels used in calculating each individual pixel value.</param>
      <param name="Threshold">The filter threshold determining whether a pixel forms part of an Image Edge.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the cartoon filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterCartoon(9, 25)
            </code><code lang="C#">
              m_ImageObject.FilterCartoon(9, 25);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterCartoonAsync(System.Int32,System.Byte,System.Boolean)">
      <summary>
            Applies the cartoon filter to the displayed image page asynchronously.
            </summary>
      <param name="FilterSize">The filter size value represents the number of neighbouring pixels used in calculating each individual pixel value.</param>
      <param name="Threshold">The filter threshold determining whether a pixel forms part of an Image Edge.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the cartoon filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterCartoonAsync(9, 25)
            </code><code lang="C#">
              m_ImageObject.FilterCartoonAsync(9, 25);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterOilPaint(System.Int32,System.Boolean)">
      <summary>
            Applies the oil paint filter to the displayed image page.
            </summary>
      <param name="BrushSize">The filter brush size.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the oil paint filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterOilPaint(10, 15)
            </code><code lang="C#">
              m_ImageObject.FilterOilPaint(10, 15);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.FilterOilPaintAsync(System.Int32,System.Boolean)">
      <summary>
            Applies the oil paint filter to the displayed image page asynchronously.
            </summary>
      <param name="BrushSize">The filter brush size.</param>
      <param name="Preview">Optional filter result preview enabled.</param>
      <example>The following example shows how to apply the oil paint filter to the displayed image.
            <code lang="vbnet">
              m_ImageObject.FilterOilPaintAsync(10, 15)
            </code><code lang="C#">
              m_ImageObject.FilterOilPaintAsync(10, 15);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.HolePunchRemoval(System.Nullable{System.Drawing.Color},System.Int32)">
      <summary>
            Hole punch removal of the displayed image.
            </summary>
      <param name="FillColor">The hole fill color or null to an automatic color fill.</param>
      <param name="MinSize">The minimum hole size.</param>
      <example>The following example shows how detect and fill the punch holes with an automatic color.
            <code lang="vbnet">
              m_ImageObject.HolePunchRemoval(null)
            </code><code lang="C#">
              m_ImageObject.HolePunchRemoval(null);
            </code></example>
      <remarks>The MinSize acceptable values are from 1 and 100.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.HolePunchRemovalAsync(System.Nullable{System.Drawing.Color},System.Int32)">
      <summary>
            Hole punch removal of the displayed image asynchronously.
            </summary>
      <param name="FillColor">The hole fill color or null to an automatic color fill.</param>
      <param name="MinSize">The minimum hole size.</param>
      <example>The following example shows how detect and fill the punch holes with an automatic color.
            <code lang="vbnet">
              m_ImageObject.HolePunchRemovalAsync(null)
            </code><code lang="C#">
              m_ImageObject.HolePunchRemovalAsync(null);
            </code></example>
      <remarks>The MinSize acceptable values are from 1 and 100.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.DrawLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Int32)">
      <summary>
             Draws a line on the displayed image page.
             </summary>
      <param name="point1">The first line point.</param>
      <param name="point2">The second line point.</param>
      <param name="color">The line color.</param>
      <param name="size">The line size.</param>
      <example>The following example shows how to draw a line on the displayed image.
             <code lang="vbnet">
               m_ImageObject.DrawLine(New Point(50, 50), New Point(100, 100), Color.Red, 5)
             </code><code lang="C#">
               m_ImageObject.DrawLine(new Point(50,50), new Point(100,100), Color.Red, 5);
             </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.DrawLine(System.Drawing.Point[],System.Drawing.Point[],System.Drawing.Color[],System.Int32[])">
      <summary>
             Draws a collection of lines on the displayed image page.
             </summary>
      <param name="point1">The first line point collection.</param>
      <param name="point2">The second line point collection.</param>
      <param name="color">The line color collection.</param>
      <param name="size">The line size collection.</param>
      <example>The following example shows how to draw a line on the displayed image.
             <code lang="vbnet">
               Dim m_Point1(1) As Point
               Dim m_Point2(1) As Point
               Dim m_Colors(1) As Color
               Dim m_Sizes(1) As Integer
               m_Point1(0) = New Point(50, 50)
               m_Point2(0) = New Point(100, 100)
               m_Colors(0) = Color.Red
               m_Sizes(0) = 5
               m_ImageObject.DrawLine(m_Point1, m_Point2, m_Colors, m_Sizes)
             </code><code lang="C#">
               Point[] m_Point1 = new Point[1];
               Point[] m_Point2 = new Point[1];
               Color[] m_Colors = new Color[1];
               int[] m_Sizes = new int[1];
               m_Point1[0] = new Point(50, 50);
               m_Point2[0] = new Point(100, 100);
               m_Colors[0] = Color.Red;
               m_Sizes[0] = 5;
               m_ImageObject.DrawLine(m_Point1, m_Point2, m_Colors, m_Sizes);
             </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Int32)">
      <summary>
             Draws a rectangle on the displayed image page.
             </summary>
      <param name="rectangle">The rectangle size.</param>
      <param name="color">The rectangle line color.</param>
      <param name="size">The rectangle line size.</param>
      <example>The following example shows how to draw a rectangle on the displayed image.
             <code lang="vbnet">
               m_ImageObject.DrawRectangle(New Rectangle(50, 50, 100, 100), Color.Red, 5)
             </code><code lang="C#">
               m_ImageObject.DrawRectangle(new Rectangle(50, 50, 100, 100), Color.Red, 5);
             </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.DrawRectangle(System.Drawing.Rectangle[],System.Drawing.Color[],System.Int32[])">
      <summary>
             Draws a collection of rectangles on the displayed image page.
             </summary>
      <param name="rectangle">The rectangle size collection.</param>
      <param name="color">The rectangle line color collection.</param>
      <param name="size">The rectangle line size collection.</param>
      <example>The following example shows how to draw a rectangle on the displayed image.
             <code lang="vbnet">
               Dim m_Rectangle(1) As Rectangle
               Dim m_Colors(1) As Color
               Dim m_Sizes(1) As Integer
               m_Rectangle(0) = New Rectangle(50, 50, 100, 100)
               m_Colors(0) = Color.Red
               m_Sizes(0) = 5
               m_ImageObject.DrawRectangle(m_Rectangle, m_Colors, m_Sizes)
             </code><code lang="C#">
               Rectangle[] m_Rectangle = new Rectangle[1];
               Color[] m_Colors = new Color[1];
               int[] m_Sizes = new int[1];
               m_Rectangle[0] = new Rectangle(50, 50, 100, 100);
               m_Colors[0] = Color.Red;
               m_Sizes[0] = 5;
               m_ImageObject.DrawRectangle(m_Rectangle, m_Colors, m_Sizes);
             </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Print">
      <summary>
            Prints all pages of the loaded image with specific print properties settings.
            </summary>
      <example>The following example shows how to print all pages with some properties settings.
            <code lang="vbnet">
              m_ImageObject.PrintFitOptions = ImageComponents.Shared.ImgEdit.ICImagePrintOptions.FitToPage
              m_ImageObject.Print()
            </code><code lang="C#">
              m_ImageObject.PrintFitOptions = ImageComponents.Shared.ImgEdit.ICImagePrintOptions.FitToPage;
              m_ImageObject.Print();
            </code></example>
      <remarks>Check the print properties help for more information.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Print(System.Int32)">
      <summary>
            Prints the specified page from the loaded image with specific print properties settings.
            </summary>
      <param name="Page">The page number that will be printed.</param>
      <example>The following example shows how to print the second loaded image page with some properties settings.
            <code lang="vbnet">
              m_ImageObject.PrintFitOptions = ImageComponents.Shared.ImgEdit.ICImagePrintOptions.FitToPage
              m_ImageObject.Print(1)
            </code><code lang="C#">
              m_ImageObject.PrintFitOptions = ImageComponents.Shared.ImgEdit.ICImagePrintOptions.FitToPage;
              m_ImageObject.Print(1);
            </code></example>
      <remarks>Check the print properties help for more information.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Print(System.Collections.Generic.List{System.Int32})">
      <summary>
            Prints the specified page from the loaded image with specific print properties settings.
            </summary>
      <param name="PageRange">The collection of pages that will be printed.</param>
      <example>The following example shows how to print the first and second loaded image page with some properties settings.
            <code lang="vbnet">
              Dim m_Range As New List(Of Integer)()
              m_Range.Add(0)
              m_Range.Add(1)
              m_ImageObject.PrintFitOptions = ImageComponents.Shared.ImgEdit.ICImagePrintOptions.FitToPage
              m_ImageObject.Print(m_Range)
            </code><code lang="C#">
              List&lt;int&gt; m_Range = new List&lt;int&gt;() { 0, 1 };
              m_ImageObject.PrintFitOptions = ImageComponents.Shared.ImgEdit.ICImagePrintOptions.FitToPage;
              m_ImageObject.Print(m_Range);
            </code></example>
      <remarks>Check the print properties help for more information.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.PrintSelectedPage">
      <summary>
            Prints the displayed image with specific print properties settings.
            </summary>
      <example>The following example shows how to print the displayed image page with some properties settings.
            <code lang="vbnet">
              m_ImageObject.PrintWithAnnotations = False
              m_ImageObject.PrintFitOptions = ImageComponents.Shared.ImgEdit.ICImagePrintOptions.FitToPage
              m_ImageObject.PrintSelectedPage()
            </code><code lang="C#">
              m_ImageObject.PrintWithAnnotations = false;
              m_ImageObject.PrintFitOptions = ImageComponents.Shared.ImgEdit.ICImagePrintOptions.FitToPage;
              m_ImageObject.PrintSelectedPage();
            </code></example>
      <remarks>Check the print properties help for more information.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.OCRImage">
      <summary>
            Converts the content of the displayed image to text.
            </summary>
      <example>The following example shows how to OCR all the image pages using the alphanumeric English language.
            <code lang="vbnet">
              m_ImageObject.ImageOCRLanguage = ImageComponents.Core.Imaging.ICImageOCRLanguages.English
              m_ImageObject.ImageOCRType = ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric
              m_ImageObject.ImageOCRPageType = ImageComponents.Shared.ImgEdit.ICImageOCRPageType.AllPages
              m_ImageObject.OCRImage()
            </code><code lang="C#">
              m_ImageObject.ImageOCRLanguage = ImageComponents.Core.Imaging.ICImageOCRLanguages.English;
              m_ImageObject.ImageOCRType = ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric;
              m_ImageObject.ImageOCRPageType = ImageComponents.Shared.ImgEdit.ICImageOCRPageType.AllPages;
              m_ImageObject.OCRImage();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.OCRImage(ImageComponents.Core.Imaging.ICImageOCRLanguages)">
      <summary>
            Converts the content of the displayed image to text.
            </summary>
      <param name="imageOCRLanguage">OCR language.</param>
      <example>The following example shows how to OCR  the selected image page using the alphanumeric English language.
            <code lang="vbnet">
              m_ImageObject.ImageOCRType = ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric
              m_ImageObject.ImageOCRPageType = ImageComponents.Core.Imaging.ICImageOCRLanguages.ICImageOCRPageType.SelectedPage
              m_ImageObject.OCRImage(ImageComponents.Core.Imaging.ICImageOCRLanguages.English)
            </code><code lang="C#">
              m_ImageObject.ImageOCRType = ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric;
              m_ImageObject.ImageOCRPageType = ImageComponents.Core.Imaging.ICImageOCRLanguages.ICImageOCRPageType.SelectedPage;
              m_ImageObject.OCRImage(ImageComponents.Core.Imaging.ICImageOCRLanguages.English);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.OCRImage(System.Collections.Generic.List{ImageComponents.Core.Imaging.ICImageOCRLanguages})">
      <summary>
            Converts the content of the displayed image to text.
            </summary>
      <param name="imageOCRLanguages">OCR languages.</param>
      <example>The following example shows how to OCR  the selected image page using the alphanumeric English and Portuguese language.
            <code lang="vbnet">
              Dim m_Languages As New List(Of ICImageOCRLanguages)()
              m_Languages.Add(ImageComponents.Core.Imaging.ICImageOCRLanguages.English)
              m_Languages.Add(ImageComponents.Core.Imaging.ICImageOCRLanguages.Portuguese)
              m_ImageObject.ImageOCRType = ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric
              m_ImageObject.ImageOCRPageType = ImageComponents.Core.Imaging.ICImageOCRPageType.SelectedPage
              m_ImageObject.OCRImage(m_Languages)
            </code><code lang="C#">
              List&lt;ICImageOCRLanguages&gt; m_Languages = new List&lt;ICImageOCRLanguages&gt;() { ImageComponents.Core.Imaging.ICImageOCRLanguages.English, ImageComponents.Core.Imaging.ICImageOCRLanguages.Portuguese };
              m_ImageObject.ImageOCRType = ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric;
              m_ImageObject.ImageOCRPageType = ImageComponents.Core.Imaging.ICImageOCRPageType.SelectedPage;
              m_ImageObject.OCRImage(m_Languages);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.OCRImage(ImageComponents.Core.Imaging.ICImageOCRLanguages,ImageComponents.Core.Imaging.ICImageOCRType,ImageComponents.Core.Imaging.ICImageOCRPageType)">
      <summary>
            Converts the content of the displayed image to text.
            </summary>
      <param name="imageOCRLanguage">OCR language.</param>
      <param name="imageOCRType">The OCR reader type.</param>
      <param name="imageOCRPageType">The object type the OCR will read.</param>
      <example>The following example shows how to OCR  the selected image page using the alphanumeric English language.
            <code lang="vbnet">
              m_ImageObject.OCRImage(ImageComponents.Core.Imaging.ICImageOCRLanguages.English, ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric, ImageComponents.Shared.ImgEdit.ICImageOCRPageType.SelectedPage)
            </code><code lang="C#">
              m_ImageObject.OCRImage(ImageComponents.Core.Imaging.ICImageOCRLanguages.English, ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric, ImageComponents.Shared.ImgEdit.ICImageOCRPageType.SelectedPage);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.OCRImage(System.Collections.Generic.List{ImageComponents.Core.Imaging.ICImageOCRLanguages},ImageComponents.Core.Imaging.ICImageOCRType,ImageComponents.Core.Imaging.ICImageOCRPageType)">
      <summary>
            Converts the content of the displayed image to text.
            </summary>
      <param name="imageOCRLanguages">OCR languages.</param>
      <param name="imageOCRType">The OCR reader type.</param>
      <param name="imageOCRPageType">The object type the OCR will read.</param>
      <example>The following example shows how to OCR  the selected image page using the alphanumeric English and Portuguese language.
            <code lang="vbnet">
              Dim m_Languages As New List(Of ImageComponents.Core.Imaging.ICImageOCRLanguages)()
              m_Languages.Add(ImageComponents.Core.Imaging.ICImageOCRLanguages.English)
              m_Languages.Add(ImageComponents.Core.Imaging.ICImageOCRLanguages.Portuguese)
              m_ImageObject.OCRImage(m_Languages, ImageComponents.Shared.ICImageOCRType.Alfanumeric, Imaging.ImgEdit.ICImageOCRPageType.SelectedPage)
            </code><code lang="C#">
              List&lt;ImageComponents.Core.Imaging.ICImageOCRLanguages&gt; m_Languages = new List&lt;ImageComponents.Core.Imaging.ICImageOCRLanguages&gt;() { ImageComponents.Core.Imaging.ICImageOCRLanguages.English, ImageComponents.Core.Imaging.ICImageOCRLanguages.Portuguese };
              m_ImageObject.OCRImage(m_Languages, ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric, Imaging.ImgEdit.ICImageOCRPageType.SelectedPage);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.OCRImageAsync">
      <summary>
            Converts the content of the displayed image to text.
            </summary>
      <example>The following example shows how to OCR all the image pages using the alphanumeric English language.
            <code lang="vbnet">
              m_ImageObject.ImageOCRLanguage = ImageComponents.Core.Imaging.ICImageOCRLanguages.English
              m_ImageObject.ImageOCRType = ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric
              m_ImageObject.ImageOCRPageType = ImageComponents.Shared.ImgEdit.ICImageOCRPageType.AllPages
              m_ImageObject.OCRImage()
            </code><code lang="C#">
              m_ImageObject.ImageOCRLanguage = ImageComponents.Core.Imaging.ICImageOCRLanguages.English;
              m_ImageObject.ImageOCRType = ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric;
              m_ImageObject.ImageOCRPageType = ImageComponents.Shared.ImgEdit.ICImageOCRPageType.AllPages;
              m_ImageObject.OCRImage();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.OCRImageAsync(ImageComponents.Core.Imaging.ICImageOCRLanguages)">
      <summary>
            Converts the content of the displayed image to text.
            </summary>
      <param name="imageOCRLanguage">OCR language.</param>
      <example>The following example shows how to OCR  the selected image page using the alphanumeric English language.
            <code lang="vbnet">
              m_ImageObject.ImageOCRType = ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric
              m_ImageObject.ImageOCRPageType = ImageComponents.Shared.ImgEdit.ICImageOCRPageType.SelectedPage
              m_ImageObject.OCRImage(ImageComponents.Core.Imaging.ICImageOCRLanguages.English)
            </code><code lang="C#">
              m_ImageObject.ImageOCRType = ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric;
              m_ImageObject.ImageOCRPageType = ImageComponents.Shared.ImgEdit.ICImageOCRPageType.SelectedPage;
              m_ImageObject.OCRImage(ImageComponents.Core.Imaging.ICImageOCRLanguages.English);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.OCRImageAsync(System.Collections.Generic.List{ImageComponents.Core.Imaging.ICImageOCRLanguages})">
      <summary>
            Converts the content of the displayed image to text asynchronously.
            </summary>
      <param name="imageOCRLanguages">OCR languages.</param>
      <example>The following example shows how to OCR  the selected image page using the alphanumeric English and Portuguese language asynchronously.
            <code lang="vbnet">
              Dim m_Languages As New List(Of ICImageOCRLanguages)()
              m_Languages.Add(ICImageOCRLanguages.English)
              m_Languages.Add(ICImageOCRLanguages.Portuguese)
              m_ImageObject.ImageOCRType = ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric
              m_ImageObject.ImageOCRPageType = ImageComponents.Core.Imaging.ICImageOCRPageType.SelectedPage
              m_ImageObject.OCRImageAsync(m_Languages)
            </code><code lang="C#">
              List&lt;ICImageOCRLanguages&gt; m_Languages = new List&lt;ICImageOCRLanguages&gt;() { ICImageOCRLanguages.English, ICImageOCRLanguages.Portuguese };
              m_ImageObject.ImageOCRType = ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric;
              m_ImageObject.ImageOCRPageType = ImageComponents.Core.Imaging.ICImageOCRPageType.SelectedPage;
              m_ImageObject.OCRImageAsync(m_Languages);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.OCRImageAsync(ImageComponents.Core.Imaging.ICImageOCRLanguages,ImageComponents.Core.Imaging.ICImageOCRType,ImageComponents.Core.Imaging.ICImageOCRPageType)">
      <summary>
            Converts the content of the displayed image to text.
            </summary>
      <param name="imageOCRLanguage">OCR language.</param>
      <param name="imageOCRType">The OCR reader type.</param>
      <param name="imageOCRPageType">The object type the OCR will read.</param>
      <example>The following example shows how to OCR  the selected image page using the alphanumeric English language.
            <code lang="vbnet">
              m_ImageObject.OCRImage(ImageComponents.Core.Imaging.ICImageOCRLanguages.English, ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric, ImageComponents.Core.Imaging.ICImageOCRPageType.SelectedPage)
            </code><code lang="C#">
              m_ImageObject.OCRImage(ImageComponents.Core.Imaging.ICImageOCRLanguages.English, ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric, ImageComponents.Core.Imaging.ICImageOCRPageType.SelectedPage);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.OCRImageAsync(System.Collections.Generic.List{ImageComponents.Core.Imaging.ICImageOCRLanguages},ImageComponents.Core.Imaging.ICImageOCRType,ImageComponents.Core.Imaging.ICImageOCRPageType)">
      <summary>
            Converts the content of the displayed image to text asynchronously.
            </summary>
      <param name="imageOCRLanguages">OCR languages.</param>
      <param name="imageOCRType">The OCR reader type.</param>
      <param name="imageOCRPageType">The object type the OCR will read.</param>
      <example>The following example shows how to OCR  the selected image page using the alphanumeric English and Portuguese language asynchronously.
            <code lang="vbnet">
              Dim m_Languages As New List(Of ICImageOCRLanguages)()
              m_Languages.Add(ICImageOCRLanguages.English)
              m_Languages.Add(ICImageOCRLanguages.Portuguese)
              m_ImageObject.OCRImageAsync(m_Languages, ImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric, ImageComponents.Core.Imaging.ICImageOCRPageType.SelectedPage)
            </code><code lang="C#">
              List&lt;ICImageOCRLanguages&gt; m_Languages = new List&lt;ICImageOCRLanguages&gt;() { ICImageOCRLanguages.English, ICImageOCRLanguages.Portuguese };
              m_ImageObject.OCRImageAsync(m_Languages, IImageComponents.Core.Imaging.ICImageOCRType.Alfanumeric, ImageComponents.Core.Imaging.ICImageOCRPageType.SelectedPage);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.OCRImageAbort">
      <summary>
            Aborts the current image OCR process.
            </summary>
      <example>The following example shows how to abort a running OCR process.
            <code lang="vbnet">
              m_ImageObject.OCRImageAbort()
            </code><code lang="C#">
              m_ImageObject.OCRImageAbort();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CaptureScreen(System.Boolean)">
      <summary>
            Captures the full or a mouse selection of the screen.
            </summary>
      <param name="FullScreen">Do capture all screen.</param>
      <example>The following example shows how to capture the full screen image.
            <code lang="vbnet">
              m_ImageObject.CaptureScreen(True)
            </code><code lang="C#">
              m_ImageObject.CaptureScreen(true);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CaptureScreen(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Captures a specified image portion of the screen.
            </summary>
      <param name="x">The x position of the screen to capture.</param>
      <param name="y">The y position of the screen to capture.</param>
      <param name="width">The width value of the screen to capture.</param>
      <param name="height">The height value of the screen to capture.</param>
      <example>The following example shows how to capture the a specified image portion of the screen.
            <code lang="vbnet">
              m_ImageObject.CaptureScreen(0, 0, 100, 100)
            </code><code lang="C#">
              m_ImageObject.CaptureScreen(0, 0, 100, 100);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CopyImage(System.Boolean,System.Boolean)">
      <summary>
            Copies the displayed image with or without annotations into the clipboard.
            </summary>
      <param name="CopyAnnotations">Copies the image with burned annotations.</param>
      <param name="ClearOnExit">Clear the clipboard data on application exit.</param>
      <example>The following example shows how to copy the displayed image without annotations into the clipboard.
            <code lang="vbnet">
              m_ImageObject.CopyImage(False, True)
            </code><code lang="C#">
              m_ImageObject.CopyImage(false, true);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CopyImage(System.Drawing.Rectangle,System.Boolean,System.Boolean)">
      <summary>
            Copies an image selection with or without annotations into the clipboard.
            </summary>
      <param name="Selection">Image rectangle selection.</param>
      <param name="CopyAnnotations">Copies the image with burned annotations.</param>
      <param name="ClearOnExit">Clears the clipboard image on application exit.</param>
      <example>The following example shows how to copy the specified image selection without annotations into the clipboard.
            <code lang="vbnet">
              m_ImageObject.CopyImage(New System.Drawing.Rectangle(0, 0, 100, 100), False, True)
            </code><code lang="C#">
              m_ImageObject.CopyImage(new System.Drawing.Rectangle(0, 0, 100, 100), false, true);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CutImage(System.Boolean,System.Boolean)">
      <summary>
            Cuts the selection rectangle size of the displayed image.
            </summary>
      <param name="CopyAnnotations">Copies the image with burned annotations.</param>
      <param name="ClearOnExit">Clear the clipboard data on application exit.</param>
      <example>The following example shows how to set a manual selection rectangle and cut the displayed image selection without annotations.
            <code lang="vbnet">
              m_ImageObject.SetSelectionRectangle(0,0,100,100)
              m_ImageObject.CutImage()
            </code><code lang="C#">
              m_ImageObject.SetSelectionRectangle(0,0,100,100);
              m_ImageObject.CutImage();
            </code></example>
      <remarks>A selection rectangle must exist in the displayed image.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.CutImage(System.Drawing.Rectangle,System.Boolean,System.Boolean)">
      <summary>
            Cuts the selection rectangle size of the displayed image.
            </summary>
      <param name="Selection">Image rectangle selection.</param>
            /// <param name="CopyAnnotations">Copies the image with burned annotations.</param><param name="ClearOnExit">Clear the clipboard data on application exit.</param><example>The following example shows how to cut a specified displayed image rectangle selection without annotations.
            <code lang="vbnet">
              m_ImageObject.CutImage(New System.Drawing.Rectangle(0, 0, 100, 100))
            </code><code lang="C#">
              m_ImageObject.CutImage(new System.Drawing.Rectangle(0, 0, 100, 100));
            </code></example><returns>The Image Components Image Object instance.</returns></member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.PasteImage(System.Boolean)">
      <summary>
            Pastes a clipboard image into the control and display it.
            </summary>
      <param name="ClearOnFinish">Clear clipboard on finish.</param>
      <example>The following example shows how to paste one existing clipboard saved image into ImgEdit control.
            <code lang="vbnet">
              m_ImageObject.PasteImage(True)
            </code><code lang="C#">
              m_ImageObject.PasteImage(true);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.PasteIntoImage(System.Boolean)">
      <summary>
            Pastes one saved clipboard image into the displayed image.
            </summary>
      <param name="ClearOnFinish">Clear clipboard on finish.</param>
      <example>The following example shows how to paste one existing clipboard image into the displayed image.
            <code lang="vbnet">
              m_ImageObject.PasteIntoImage(True)
            </code><code lang="C#">
              m_ImageObject.PasteIntoImage(true);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.PasteIntoImage(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Pastes one saved clipboard image into the displayed image in a specified position.
            </summary>
      <param name="x">The image X position value.</param>
      <param name="y">The image Y position value.</param>
      <param name="ClearOnFinish">Clear clipboard on finish.</param>
      <example>The following example shows how to paste one existing clipboard image into a displayed image specific position.
            <code lang="vbnet">
              m_ImageObject.PasteIntoImage(100, 100, True)
            </code><code lang="C#">
              m_ImageObject.PasteIntoImage(100, 100, true);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.PasteIntoImage(System.Int32,System.Int32,System.Drawing.Bitmap)">
      <summary>
            Pastes one image object into the displayed image in a specified position.
            </summary>
      <param name="x">The image X position value.</param>
      <param name="y">The image Y position value.</param>
      <param name="ImageBitmap">The image bitmap object.</param>
      <example>The following example shows how to paste one existing image bitmap object into a displayed image specific position.
            <code lang="vbnet">
              Dim m_Bitmap As New Bitmap("C:\Test.jpg")
              m_ImageObject.PasteIntoImage(100, 100, m_Bitmap)
            </code><code lang="C#">
              Bitmap m_Bitmap = new Bitmap("C:\\Test.jpg");
              m_ImageObject.PasteIntoImage(100, 100, m_Bitmap);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SearchText(System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Reads and searches the image for the specified word or phrase and highlighting the value.
            </summary>
      <param name="Value">The text value to search.</param>
      <param name="MatchAllWord">Match all word.</param>
      <param name="MatchCase">Match case.</param>
      <param name="SearchUp">Searches the text from finish to the beginning.</param>
      <example>The following example shows how to search all pages of the image for a specified value.
            <code lang="vbnet">
              m_ImageObject.SearchText("Image Components", False, False, False)
            </code><code lang="C#">
              m_ImageObject.SearchText("Image Components", false, false, false);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SearchTextAsync(System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Reads and searches the image for the specified word or phrase and highlighting the value asynchronously.
            </summary>
      <param name="Value">The text value to search.</param>
      <param name="MatchAllWord">Match all word.</param>
      <param name="MatchCase">Match case.</param>
      <param name="SearchUp">Searches the text from finish to the beginning.</param>
      <example>The following example shows how to search all pages of the image for a specified value.
            <code lang="vbnet">
              m_ImageObject.SearchTextAsync("Image Components", False, False, False)
            </code><code lang="C#">
              m_ImageObject.SearchTextAsync("Image Components", false, false, false);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SearchText(System.String,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Reads and searches the specified page for the word or phrase and highlighting the value.
            </summary>
      <param name="Value">The text value to search.</param>
      <param name="PageIndex">The page index position to search.</param>
      <param name="MatchAllWord">Match all word.</param>
      <param name="MatchCase">Match case.</param>
      <example>The following example shows how to search the first page of the image for a specified value.
            <code lang="vbnet">
              m_ImageObject.SearchText("Image Components", 0, False, False)
            </code><code lang="C#">
              m_ImageObject.SearchText("Image Components", 0, false, false);
            </code></example>
      <remarks>The highlight color can be set specifying the color value of the SearchHighlightColor property.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.NextTextSearch(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Reads and searches the image for the next specified word or phrase and highlighting the value.
            </summary>
      <param name="MatchAllWord">Match all word.</param>
      <param name="MatchCase">Match case.</param>
      <param name="SearchUp">Searches the text from finish to the beginning.</param>
      <example>The following example shows how to search the next page for a specified value.
            <code lang="vbnet">
              m_ImageObject.NextTextSearch(False, False, False)
            </code><code lang="C#">
              m_ImageObject.NextTextSearch(false, false, false);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.NextTextSearchAsync(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Reads and searches the image for the next specified word or phrase and highlighting the value.
            </summary>
      <param name="MatchAllWord">Match all word.</param>
      <param name="MatchCase">Match case.</param>
      <param name="SearchUp">Searches the text from finish to the beginning.</param>
      <example>The following example shows how to search the next page for a specified value.
            <code lang="vbnet">
              m_ImageObject.NextTextSeach(False, False, False)
            </code><code lang="C#">
              m_ImageObject.NextTextSeach(false, false, false);
            </code></example>
      <remarks>The highlight color can be set specifying the color value of the SearchHighlightColor property.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ClearTextSearch">
      <summary>
            Clears the previous highlight search values.
            </summary>
      <example>The following example shows how to clear the highlight values from all image pages.
            <code lang="vbnet">
              m_ImageObject.ClearTextSearch()
            </code><code lang="C#">
              m_ImageObject.ClearTextSearch();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ClearTextSearch(System.Int32)">
      <summary>
            Clears the previous highlight search values.
            </summary>
      <param name="PageNumber">The page position in the image.</param>
      <example>The following example shows how to clear the highlight values from the first image page.
            <code lang="vbnet">
              m_ImageObject.ClearTextSearch(0)
            </code><code lang="C#">
              m_ImageObject.ClearTextSearch(0);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveImage">
      <summary>
            Saves the loaded image to a file with the specified properties settings.
            </summary>
      <example>The following example shows how to save the loaded image.
            <code lang="vbnet">
              m_ImageObject.SaveImage()
            </code><code lang="C#">
              m_ImageObject.SaveImage();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveImageAs">
      <summary>
            Saves the loaded image to a file with the specified properties settings.
            </summary>
      <example>The following example shows how to save the loaded image with the jpg image format, the jpg compression and the best jpg quality.
            <code lang="vbnet">
              m_ImageObject.SaveImageFormat = ImageComponents.Core.Imaging.ICImageOutputFormat.JPG
              m_ImageObject.SaveImageCompression = ImageComponents.Core.Imaging.ICImageCompression.JPG
              m_ImageObject.SaveJPGQuality = 100
              m_ImageObject.SaveImageAs()
            </code><code lang="C#">
              m_ImageObject.SaveImageFormat = ImageComponents.Core.Imaging.ICImageOutputFormat.JPG;
              m_ImageObject.SaveImageCompression = ImageComponents.Core.Imaging.ICImageCompression.JPG;
              m_ImageObject.SaveJPGQuality = 100;
              m_ImageObject.SaveImageAs();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveImageAs(System.String)">
      <summary>
            Saves the loaded image to a file with the specified properties settings.
            </summary>
      <param name="SaveImagePath">The saved image file path.</param>
      <example>The following example shows how to save the loaded image with the jpg image format, the jpg compression and the best jpg quality.
            <code lang="vbnet">
              m_ImageObject.SaveImageFormat = ImageComponents.Core.Imaging.ICImageOutputFormat.JPG
              m_ImageObject.SaveImageCompression = ImageComponents.Core.Imaging.ICImageCompression.JPG
              m_ImageObject.SaveJPGQuality = 100
              m_ImageObject.SaveImageAs("C:\Test.jpg")
            </code><code lang="C#">
              m_ImageObject.SaveImageFormat = ImageComponents.Core.Imaging.ICImageOutputFormat.JPG;
              m_ImageObject.SaveImageCompression = ImageComponents.Core.Imaging.ICImageCompression.JPG;
              m_ImageObject.SaveJPGQuality = 100;
              m_ImageObject.SaveImageAs("C:\\Test.jpg");
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveImageAs(System.String,ImageComponents.Core.Imaging.ICImageOutputFormat)">
      <summary>
            Saves the loaded image to a file with the specified properties settings.
            </summary>
      <param name="SaveImagePath">The saved image file path.</param>
      <param name="SaveImageFormat">The available save image format enumeration.</param>
      <example>The following example shows how to save the loaded image with the jpg image format.
            <code lang="vbnet">
              m_ImageObject.SaveImageAs("C:\Test.jpg", ImageComponents.Core.Imaging.ICImageOutputFormat.JPG)
            </code><code lang="C#">
              m_ImageObject.SaveImageAs("C:\\Test.jpg", ImageComponents.Core.Imaging.ICImageOutputFormat.JPG);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveImageAs(System.String,ImageComponents.Core.Imaging.ICImageOutputFormat,ImageComponents.Core.Imaging.ICImageCompression)">
      <summary>
            Saves the loaded image to a file with a specific image format and image compression.
            </summary>
      <param name="SaveImagePath">The saved image file path.</param>
      <param name="SaveImageFormat">The available save image format enumeration.</param>
      <param name="SaveImageCompression">The available save image compression enumeration.</param>
      <example>The following example shows how to save the loaded image with the tif image format and the CCITT4 compression.
            <code lang="vbnet">
              m_ImageObject.SaveImageAs("C:\Test.tif", ImageComponents.Core.Imaging.ICImageOutputFormat.TIF, ImageComponents.Core.Imaging.ICImageCompression.CCITT4)
            </code><code lang="C#">
              m_ImageObject.SaveImageAs("C:\\Test.tif", ImageComponents.Core.Imaging.ICImageOutputFormat.TIF, ImageComponents.Core.Imaging.ICImageCompression.CCITT4);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveImageAs(System.String,ImageComponents.Core.Imaging.ICImageOutputFormat,ImageComponents.Core.Imaging.ICImageCompression,ImageComponents.Core.Imaging.ICImageSavePageOptions)">
      <summary>
            Saves the selected image page to a file with a specific image format and image compression.
            </summary>
      <param name="SaveImagePath">The saved image file path.</param>
      <param name="SaveImageFormat">The available save image format enumeration.</param>
      <param name="SaveImageCompression">The available save image compression enumeration.</param>
      <param name="PageOptions">The available save image page options enumeration.</param>
      <example>The following example shows how to save the selected page with the tif image format and the CCITT4 compression.
            <code lang="vbnet">
              m_ImageObject.SaveImageAs("C:\Test.tif", ImageComponents.Core.Imaging.ICImageOutputFormat.TIF, ImageComponents.Core.Imaging.ICImageCompression.CCITT4, ImageComponents.Core.Imaging.ICImageSavePageOptions.Page)
            </code><code lang="C#">
              m_ImageObject.SaveImageAs("C:\\Test.tif", ImageComponents.Core.Imaging.ICImageOutputFormat.TIF, ImageComponents.Core.Imaging.ICImageCompression.CCITT4, ImageComponents.Core.Imaging.ICImageSavePageOptions.Page);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveImageAsync">
      <summary>
            Saves the loaded image to a file with the specified properties settings asynchronously.
            </summary>
      <example>The following example shows how to save the loaded image.
            <code lang="vbnet">
              m_ImageObject.SaveImageAsync()
            </code><code lang="C#">
              m_ImageObject.SaveImageAsync();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveImageAsAsync">
      <summary>
            Saves the loaded image to a file with the specified properties settings asynchronously.
            </summary>
      <example>The following example shows how to save the loaded image with the jpg image format, the jpg compression and the best jpg quality.
            <code lang="vbnet">
              m_ImageObject.SaveImageFormat = ImageComponents.Core.Imaging.ICImageOutputFormat.JPG
              m_ImageObject.SaveImageCompression = ImageComponents.Core.Imaging.ICImageCompression.JPG
              m_ImageObject.SaveJPGQuality = 100
              m_ImageObject.SaveImageAsAsync()
            </code><code lang="C#">
              m_ImageObject.SaveImageFormat = ImageComponents.Core.Imaging.ICImageOutputFormat.JPG;
              m_ImageObject.SaveImageCompression = ImageComponents.Core.Imaging.ICImageCompression.JPG;
              m_ImageObject.SaveJPGQuality = 100;
              m_ImageObject.SaveImageAsAsync();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveImageAsAsync(System.String)">
      <summary>
            Saves the loaded image to a file with the specified properties settings asynchronously.
            </summary>
      <param name="SaveImagePath">The saved image file path.</param>
      <example>The following example shows how to save the loaded image with the jpg image format, the jpg compression and the best jpg quality.
            <code lang="vbnet">
              m_ImageObject.SaveImageFormat = ImageComponents.Core.Imaging.ICImageOutputFormat.JPG
              m_ImageObject.SaveImageCompression = ImageComponents.Core.Imaging.ICImageCompression.JPG
              m_ImageObject.SaveJPGQuality = 100
              m_ImageObject.SaveImageAsAsync("C:\Test.jpg")
            </code><code lang="C#">
              m_ImageObject.SaveImageFormat = ImageComponents.Core.Imaging.ICImageOutputFormat.JPG;
              m_ImageObject.SaveImageCompression = ImageComponents.Core.Imaging.ICImageCompression.JPG;
              m_ImageObject.SaveJPGQuality = 100;
              m_ImageObject.SaveImageAsAsync("C:\\Test.jpg");
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveImageAsAsync(System.String,ImageComponents.Core.Imaging.ICImageOutputFormat)">
      <summary>
            Saves the loaded image to a file with the specified properties settings asynchronously.
            </summary>
      <param name="SaveImagePath">The saved image file path.</param>
      <param name="SaveImageFormat">The available save image format enumeration.</param>
      <example>The following example shows how to save the loaded image with the jpg image format.
            <code lang="vbnet">
              m_ImageObject.SaveImageAsAsync("C:\Test.jpg", ImageComponents.Core.Imaging.ICImageOutputFormat.JPG)
            </code><code lang="C#">
              m_ImageObject.SaveImageAsAsync("C:\\Test.jpg", ImageComponents.Core.Imaging.ICImageOutputFormat.JPG);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveImageAsAsync(System.String,ImageComponents.Core.Imaging.ICImageOutputFormat,ImageComponents.Core.Imaging.ICImageCompression)">
      <summary>
            Saves the loaded image to a file with a specific image format and image compression asynchronously.
            </summary>
      <param name="SaveImagePath">The saved image file path.</param>
      <param name="SaveImageFormat">The available save image format enumeration.</param>
      <param name="SaveImageCompression">The available save image compression enumeration.</param>
      <example>The following example shows how to save the loaded image with the tif image format and the CCITT4 compression.
            <code lang="vbnet">
              m_ImageObject.SaveImageAsAsync("C:\Test.tif", ImageComponents.Core.Imaging.ICImageOutputFormat.TIF, ImageComponents.Core.Imaging.ICImageCompression.CCITT4)
            </code><code lang="C#">
              m_ImageObject.SaveImageAsAsync("C:\\Test.tif", ImageComponents.Core.Imaging.ICImageOutputFormat.TIF, ImageComponents.Core.Imaging.ICImageCompression.CCITT4);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveImageAsAsync(System.String,ImageComponents.Core.Imaging.ICImageOutputFormat,ImageComponents.Core.Imaging.ICImageCompression,ImageComponents.Core.Imaging.ICImageSavePageOptions)">
      <summary>
            Saves the selected image page to a file with a specific image format and image compression asynchronously.
            </summary>
      <param name="SaveImagePath">The saved image file path.</param>
      <param name="SaveImageFormat">The available save image format enumeration.</param>
      <param name="SaveImageCompression">The available save image compression enumeration.</param>
      <param name="PageOptions">The available save image page options enumeration.</param>
      <example>The following example shows how to save the selected page with the tif image format and the CCITT4 compression.
            <code lang="vbnet">
              m_ImageObject.SaveImageAsAsync("C:\Test.tif", ImageComponents.Core.Imaging.ICImageOutputFormat.TIF, ImageComponents.Core.Imaging.ICImageCompression.CCITT4, ImageComponents.Shared.ImgEdit.ICImageSavePageOptions.Page)
            </code><code lang="C#">
              m_ImageObject.SaveImageAsAsync("C:\\Test.tif", ImageComponents.Core.Imaging.ICImageOutputFormat.TIF, ImageComponents.Core.Imaging.ICImageCompression.CCITT4, ImageComponents.Shared.ImgEdit.ICImageSavePageOptions.Page);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ClosePage">
      <summary>
            Closes the current image page from the display and from the memory.
            </summary>
      <example>The following example closes the current image page from the display and from the memory.
            <code lang="vbnet">
              m_ImageObject.ClosePage()
            </code><code lang="C#">
              m_ImageObject.ClosePage();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ClosePage(System.Int32)">
      <summary>
            Closes the specified image page from the display and from the memory.
            </summary>
      <param name="PageIndex">Page index position.</param>
      <example>The following example closes the first image page.
            <code lang="vbnet">
              m_ImageObject.ClosePage(0)
            </code><code lang="C#">
              m_ImageObject.ClosePage(0);
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Close(System.Boolean)">
      <summary>
            Closes the image from the display and from the memory.
            </summary>
      <param name="ResetVariables">Clear class variables.</param>
      <example>The following example closes the displayed image.
            <code lang="vbnet">
              m_ImageObject.Close()
            </code><code lang="C#">
              m_ImageObject.Close();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AddNote(ImageComponents.Core.Imaging.ICTextAnnotation)">
      <summary>
            Adds a text annotation to the selected page.
            </summary>
      <param name="textAnnotation">The text annotation object containing the configured values.</param>
      <example> This sample shows how to add a note to the selected image page.
            <code lang="vbnet">
              Dim m_TextAnnotation As ImageComponents.Core.Imaging.ICTextAnnotation = New ImageComponents.Core.Imaging.ICTextAnnotation()
              m_TextAnnotation.Width = 150
              m_TextAnnotation.Height = 100
              m_TextAnnotation.Text = "Hello annotations world!!!"
              m_TextAnnotation.X = 50
              m_TextAnnotation.Y = 50
              m_TextAnnotation.TextFont.FontSize = 18
              m_TextAnnotation.TextFont.IsBold = True
              m_TextAnnotation.LineColor = Colors.Blue
              m_TextAnnotation.FillColor = Colors.Blue
              m_TextAnnotation.FillTransparency = 72
              m_ImageObject.AddNote(m_TextAnnotation)
            </code><code lang="C#">
              ImageComponents.Core.Imaging.ICTextAnnotation m_TextAnnotation = new ImageComponents.Core.Imaging.ICTextAnnotation();
              m_TextAnnotation.Width = 150;
              m_TextAnnotation.Height = 100;
              m_TextAnnotation.Text = "Hello annotations world!!!";
              m_TextAnnotation.X = 50;
              m_TextAnnotation.Y = 50;
              m_TextAnnotation.TextFont.FontSize = 18;
              m_TextAnnotation.TextFont.IsBold = true;
              m_TextAnnotation.LineColor = Colors.Blue;
              m_TextAnnotation.FillColor = Colors.Blue;
              m_TextAnnotation.FillTransparency = 72;
              m_ImageObject.AddNote(m_TextAnnotation);
              m_ImageObject.EnableTextEdit();
            </code></example>
      <remarks>One image should already be loaded in order to the annotations be accepted by the library.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AddStamp(ImageComponents.Core.Imaging.ICStampAnnotation)">
      <summary>
            Adds a stamp annotation to the selected page.
            </summary>
      <param name="stampAnnotation">The stamp annotation object containing the configured values.</param>
      <example> This sample shows how to add a stamp to the selected image page.
            <code lang="vbnet">
              Dim m_StampAnnotation As ImageComponents.Core.Imaging.ICStampAnnotation = New ImageComponents.Core.Imaging.ICStampAnnotation()
              m_StampAnnotation.Width = 150
              m_StampAnnotation.Height = 100
              m_StampAnnotation.Text = "Hello annotations world!!!"
              m_StampAnnotation.TextAngle = 310
              m_StampAnnotation.X = 50
              m_StampAnnotation.Y = 50
              m_StampAnnotation.TextFont.FontSize = 18
              m_StampAnnotation.TextFont.IsBold = True
              m_ImageObject.AddStamp(m_StampAnnotation)
            </code><code lang="C#">
              ImageComponents.Core.Imaging.ICStampAnnotation m_StampAnnotation = new ImageComponents.Core.Imaging.ICStampAnnotation();
              m_StampAnnotation.Width = 150;
              m_StampAnnotation.Height = 100;
              m_StampAnnotation.Text = "Hello annotations world!!!";
              m_StampAnnotation.TextAngle = 310;
              m_StampAnnotation.X = 50;
              m_StampAnnotation.Y = 50;
              m_StampAnnotation.TextFont.FontSize = 18;
              m_StampAnnotation.TextFont.IsBold = true;
              m_ImageObject.AddStamp(m_StampAnnotation);
            </code></example>
      <remarks>One image should already be loaded in order to the annotations be accepted by the library.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AddOCRZone(ImageComponents.Core.Imaging.ICOCRZoneAnnotation)">
      <summary>
            Adds an OCR zone annotation to the selected page.
            </summary>
      <param name="ocrZoneAnnotation">The OCR zone annotation object containing the configured values.</param>
      <example> This sample shows how to add an OCR zone to the selected image page.
            <code lang="vbnet">
              Dim m_OCRZoneAnnotation As ImageComponents.Core.Imaging.ICOCRZoneAnnotation = New ImageComponents.Core.Imaging.ICOCRZoneAnnotation()
              m_OCRZoneAnnotation.Width = 150
              m_OCRZoneAnnotation.Height = 100
              m_OCRZoneAnnotation.X = 50
              m_OCRZoneAnnotation.Y = 50
              m_OCRZoneAnnotation.LineColor = Colors.Blue
              m_OCRZoneAnnotation.FillColor = Colors.Blue
              m_OCRZoneAnnotation.FillTransparency = 72
              m_ImageObject.AddOCRZone(m_OCRZoneAnnotation)
            </code><code lang="C#">
              ImageComponents.Core.Imaging.ICOCRZoneAnnotation m_OCRZoneAnnotation = new ImageComponents.Core.Imaging.ICOCRZoneAnnotation();
              m_OCRZoneAnnotation.Width = 150;
              m_OCRZoneAnnotation.Height = 100;
              m_OCRZoneAnnotation.X = 50;
              m_OCRZoneAnnotation.Y = 50;
              m_OCRZoneAnnotation.LineColor = Colors.Blue;
              m_OCRZoneAnnotation.FillColor = Colors.Blue;
              m_OCRZoneAnnotation.FillTransparency = 72;
              m_ImageObject.AddOCRZone(m_OCRZoneAnnotation);
            </code></example>
      <remarks>One image should already be loaded in order to the annotations be accepted by the library.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AddBarcodeZone(ImageComponents.Core.Imaging.ICBarcodeZoneAnnotation)">
      <summary>
            Adds a Barcode zone annotation to the selected page.
            </summary>
      <param name="barcodeZoneAnnotation">The Barcode zone annotation object containing the configured values.</param>
      <example> This sample shows how to add a Barcode zone to the selected image page.
            <code lang="vbnet">
              Dim m_BarcodeZoneAnnotation As ImageComponents.Core.Imaging.ICBarcodeZoneAnnotation = New ImageComponents.Core.Imaging.ICBarcodeZoneAnnotation()
              m_BarcodeZoneAnnotation.Width = 150
              m_BarcodeZoneAnnotation.Height = 100
              m_BarcodeZoneAnnotation.X = 50
              m_BarcodeZoneAnnotation.Y = 50
              m_BarcodeZoneAnnotation.LineColor = Colors.Blue
              m_BarcodeZoneAnnotation.FillColor = Colors.Blue
              m_BarcodeZoneAnnotation.FillTransparency = 72
              m_ImageObject.AddBarcodeZone(m_BarcodeZoneAnnotation)
            </code><code lang="C#">
              ImageComponents.Core.Imaging.ICBarcodeZoneAnnotation m_BarcodeZoneAnnotation = new ImageComponents.Core.Imaging.ICBarcodeZoneAnnotation();
              m_BarcodeZoneAnnotation.Width = 150;
              m_BarcodeZoneAnnotation.Height = 100;
              m_BarcodeZoneAnnotation.X = 50;
              m_BarcodeZoneAnnotation.Y = 50;
              m_BarcodeZoneAnnotation.LineColor = Colors.Blue;
              m_BarcodeZoneAnnotation.FillColor = Colors.Blue;
              m_BarcodeZoneAnnotation.FillTransparency = 72;
              m_ImageObject.AddBarcodeZone(m_BarcodeZoneAnnotation);
            </code></example>
      <remarks>One image should already be loaded in order to the annotations be accepted by the library.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AddZoomToZone(ImageComponents.Core.Imaging.ICZoomToZoneAnnotation)">
      <summary>
            Adds a Zoom to zone annotation to the selected page.
            </summary>
      <param name="zoomToZoneAnnotation">The Zoom to zone annotation object containing the configured values.</param>
      <example> This sample shows how to add a Zoom to zone to the selected image page.
            <code lang="vbnet">
              Dim m_ZoomToZoneAnnotation As ImageComponents.Core.Imaging.ICZoomToZoneAnnotation = New ImageComponents.Core.Imaging.ICZoomToZoneAnnotation()
              m_ZoomToZoneAnnotation.Width = 150
              m_ZoomToZoneAnnotation.Height = 100
              m_ZoomToZoneAnnotation.X = 50
              m_ZoomToZoneAnnotation.Y = 50
              m_ZoomToZoneAnnotation.LineColor = Colors.Blue
              m_ZoomToZoneAnnotation.FillColor = Colors.Blue
              m_ZoomToZoneAnnotation.FillTransparency = 72
              m_ImageObject.AddZoomToZone(m_ZoomToZoneAnnotation)
            </code><code lang="C#">
              ImageComponents.Core.Imaging.ICZoomToZoneAnnotation m_ZoomToZoneAnnotation = new ImageComponents.Core.Imaging.ICZoomToZoneAnnotation();
              m_ZoomToZoneAnnotation.Width = 150;
              m_ZoomToZoneAnnotation.Height = 100;
              m_ZoomToZoneAnnotation.X = 50;
              m_ZoomToZoneAnnotation.Y = 50;
              m_ZoomToZoneAnnotation.LineColor = Colors.Blue;
              m_ZoomToZoneAnnotation.FillColor = Colors.Blue;
              m_ZoomToZoneAnnotation.FillTransparency = 72;
              m_ImageObject.AddZoomToZone(m_ZoomToZoneAnnotation);
            </code></example>
      <remarks>One image should already be loaded in order to the annotations be accepted by the library.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AddHighlight(ImageComponents.Core.Imaging.ICHighlightAnnotation)">
      <summary>
            Adds a Highlight annotation to the selected page.
            </summary>
      <param name="highlightAnnotation">The Highlight annotation object containing the configured values.</param>
      <example> This sample shows how to add a Highlight to the selected image page.
            <code lang="vbnet">
              Dim m_HighlightAnnotation As ImageComponents.Core.Imaging.ICHighlightAnnotation = New ImageComponents.Core.Imaging.ICHighlightAnnotation()
              m_HighlightAnnotation.Width = 150
              m_HighlightAnnotation.Height = 100
              m_HighlightAnnotation.X = 50
              m_HighlightAnnotation.Y = 50
              m_HighlightAnnotation.LineColor = Colors.Blue
              m_HighlightAnnotation.FillColor = Colors.Blue
              m_HighlightAnnotation.FillTransparency = 72
              m_ImageObject.AddHighlight(m_HighlightAnnotation)
            </code><code lang="C#">
              ImageComponents.Core.Imaging.ICHighlightAnnotation m_HighlightAnnotation = new ImageComponents.Core.Imaging.ICHighlightAnnotation();
              m_HighlightAnnotation.Width = 150;
              m_HighlightAnnotation.Height = 100;
              m_HighlightAnnotation.X = 50;
              m_HighlightAnnotation.Y = 50;
              m_HighlightAnnotation.LineColor = Colors.Blue;
              m_HighlightAnnotation.FillColor = Colors.Blue;
              m_HighlightAnnotation.FillTransparency = 72;
              m_ImageObject.AddHighlight(m_HighlightAnnotation);
            </code></example>
      <remarks>One image should already be loaded in order to the annotations be accepted by the library.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AddHide(ImageComponents.Core.Imaging.ICHideAnnotation)">
      <summary>
             Adds a Hide annotation to the selected page.
             </summary>
      <param name="hideAnnotation">The Hide annotation object containing the configured values.</param>
      <example> This sample shows how to add a Hide to the selected image page.
             <code lang="vbnet">
               Dim m_HideAnnotation As ImageComponents.Core.Imaging.ICHideAnnotation = New ImageComponents.Core.Imaging.ICHideAnnotation()
               m_HideAnnotation.Width = 150
               m_HideAnnotation.Height = 100
               m_HideAnnotation.X = 50
               m_HideAnnotation.Y = 50
               m_HideAnnotation.LineColor = Colors.Blue
               m_HideAnnotation.FillColor = Colors.Blue
               m_ImageObject.AddHide(m_HideAnnotation)
             </code><code lang="C#">
               ImageComponents.Core.Imaging.ICHideAnnotation m_HideAnnotation = new ImageComponents.Core.Imaging.ICHideAnnotation();
               m_HideAnnotation.Width = 150;
               m_HideAnnotation.Height = 100;
               m_HideAnnotation.X = 50;
               m_HideAnnotation.Y = 50;
               m_HideAnnotation.LineColor = Colors.Blue;
               m_HideAnnotation.FillColor = Colors.Blue;
               m_ImageObject.AddHide(m_HideAnnotation);
             </code></example>
      <remarks>One image should already be loaded in order to the annotations be accepted by the library.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AddEllipse(ImageComponents.Core.Imaging.ICEllipseAnnotation)">
      <summary>
            Adds an Ellipse annotation to the selected page.
            </summary>
      <param name="ellipseAnnotation">The Ellipse annotation object containing the configured values.</param>
      <example> This sample shows how to add an Ellipse to the selected image page.
            <code lang="vbnet">
              Dim m_EllipseAnnotation As ImageComponents.Core.Imaging.ICEllipseAnnotation = New ImageComponents.Core.Imaging.ICEllipseAnnotation()
              m_EllipseAnnotation.Width = 150
              m_EllipseAnnotation.Height = 100
              m_EllipseAnnotation.X = 50
              m_EllipseAnnotation.Y = 50
              m_EllipseAnnotation.LineColor = Colors.Blue
              m_EllipseAnnotation.FillColor = Colors.Blue
              m_EllipseAnnotation.FillTransparency = 72
              m_ImageObject.AddEllipse(m_EllipseAnnotation)
            </code><code lang="C#">
              ImageComponents.Core.Imaging.ICEllipseAnnotation m_EllipseAnnotation = new ImageComponents.Core.Imaging.ICEllipseAnnotation();
              m_EllipseAnnotation.Width = 150;
              m_EllipseAnnotation.Height = 100;
              m_EllipseAnnotation.X = 50;
              m_EllipseAnnotation.Y = 50;
              m_EllipseAnnotation.LineColor = Colors.Blue;
              m_EllipseAnnotation.FillColor = Colors.Blue;
              m_EllipseAnnotation.FillTransparency = 72;
              m_ImageObject.AddEllipse(m_EllipseAnnotation);
            </code></example>
      <remarks>One image should already be loaded in order to the annotations be accepted by the library.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AddLine(ImageComponents.Core.Imaging.ICLineAnnotation)">
      <summary>
            Adds a Line annotation to the selected page.
            </summary>
      <param name="lineAnnotation">The Line annotation object containing the configured values.</param>
      <example> This sample shows how to add a Line to the selected image page.
            <code lang="vbnet">
              Dim m_LineAnnotation As ImageComponents.Core.Imaging.ICLineAnnotation = New ImageComponents.Core.Imaging.ICLineAnnotation()
              m_LineAnnotation.Width = 150
              m_LineAnnotation.Height = 100
              m_LineAnnotation.X = 50
              m_LineAnnotation.Y = 50
              m_LineAnnotation.LineColor = Colors.Blue
              m_LineAnnotation.LineWidth = 1
              m_LineAnnotation.FillTransparency = 255
              m_ImageObject.AddLine(m_LineAnnotation)
            </code><code lang="C#">
              ImageComponents.Core.Imaging.ICLineAnnotation m_LineAnnotation = new ImageComponents.Core.Imaging.ICLineAnnotation();
              m_LineAnnotation.Width = 150;
              m_LineAnnotation.Height = 100;
              m_LineAnnotation.X = 50;
              m_LineAnnotation.Y = 50;
              m_LineAnnotation.LineColor = Colors.Blue;
              m_LineAnnotation.LineWidth = 1;
              m_LineAnnotation.FillTransparency = 255;
              m_ImageObject.AddLine(m_LineAnnotation);
            </code></example>
      <remarks>One image should already be loaded in order to the annotations be accepted by the library.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AddArrow(ImageComponents.Core.Imaging.ICArrowAnnotation)">
      <summary>
            Adds a Arrow annotation to the selected page.
            </summary>
      <param name="arrowAnnotation">The Arrow annotation object containing the configured values.</param>
      <example> This sample shows how to add a Arrow to the selected image page.
            <code lang="vbnet">
              Dim m_ArrowAnnotation As ImageComponents.Core.Imaging.ICArrowAnnotation = New ImageComponents.Core.Imaging.ICArrowAnnotation()
              m_ArrowAnnotation.Width = 150
              m_ArrowAnnotation.Height = 100
              m_ArrowAnnotation.X = 50
              m_ArrowAnnotation.Y = 50
              m_ArrowAnnotation.LineColor = Colors.Blue
              m_ArrowAnnotation.LineWidth = 1
              m_ArrowAnnotation.FillTransparency = 255
              m_ImageObject.AddArrow(m_ArrowAnnotation)
            </code><code lang="C#">
              ImageComponents.Core.Imaging.ICArrowAnnotation m_ArrowAnnotation = new ImageComponents.Core.Imaging.ICArrowAnnotation();
              m_ArrowAnnotation.Width = 150;
              m_ArrowAnnotation.Height = 100;
              m_ArrowAnnotation.X = 50;
              m_ArrowAnnotation.Y = 50;
              m_ArrowAnnotation.LineColor = Colors.Blue;
              m_ArrowAnnotation.LineWidth = 1;
              m_ArrowAnnotation.FillTransparency = 255;
              m_ImageObject.AddArrow(m_ArrowAnnotation);
            </code></example>
      <remarks>One image should already be loaded in order to the annotations be accepted by the library.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AddEmbeddedImage(ImageComponents.Core.Imaging.ICEmbeddedImageAnnotation)">
      <summary>
            Adds a embedded image annotation to the selected page.
            </summary>
      <param name="embeddedImageAnnotation">The embedded image annotation object containing the configured values.</param>
      <example> This sample shows how to add a embedded image to the selected image page.
            <code lang="vbnet">
              Dim m_EmbeddedImageAnnotation As ImageComponents.Core.Imaging.ICEmbeddedImageAnnotation = New ImageComponents.Core.Imaging.ICEmbeddedImageAnnotation()
              m_EmbeddedImageAnnotation.Width = 150
              m_EmbeddedImageAnnotation.Height = 100
              m_EmbeddedImageAnnotation.X = 50
              m_EmbeddedImageAnnotation.Y = 50
              m_EllipseAnnotation.EmbeddedImage = 'Your byte array bitmap';
              m_ImageObject.AddEmbeddedImage(m_EmbeddedImageAnnotation)
            </code><code lang="C#">
              ImageComponents.Core.Imaging.ICEmbeddedImageAnnotation m_EmbeddedImageAnnotation = new ImageComponents.Core.Imaging.ICEmbeddedImageAnnotation();
              m_EmbeddedImageAnnotation.Width = 150;
              m_EmbeddedImageAnnotation.Height = 100;
              m_EmbeddedImageAnnotation.X = 50;
              m_EmbeddedImageAnnotation.Y = 50;
              m_EmbeddedImageAnnotation.EmbeddedImage = 'Your byte array bitmap';
              m_ImageObject.AddEmbeddedImage(m_EmbeddedImageAnnotation);
            </code></example>
      <remarks>One image should already be loaded in order to the annotations be accepted by the library.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AddLineSegments(ImageComponents.Core.Imaging.ICLineSegmentsAnnotation)">
      <summary>
            Adds a Line segment annotation to the selected page.
            </summary>
      <param name="lineSegmentsAnnotation">The Line segments annotation object containing the configured values.</param>
      <example> This sample shows how to add a Line to the selected image page.
            <code lang="vbnet">
              Dim m_LineAnnotation As ImageComponents.Core.Imaging.ICLineAnnotation = New ImageComponents.Core.Imaging.ICLineAnnotation()
              m_LineAnnotation.Width = 150
              m_LineAnnotation.Height = 100
              m_LineAnnotation.X = 50
              m_LineAnnotation.Y = 50
              m_LineAnnotation.LineColor = Colors.Red
              m_LineAnnotation.LineWidth = 5
              m_ImageObject.AddLine(m_LineAnnotation)
            </code><code lang="C#">
              ImageComponents.Core.Imaging.ICLineAnnotation m_LineAnnotation = new ImageComponents.Core.Imaging.ICLineAnnotation();
              m_LineAnnotation.Width = 150;
              m_LineAnnotation.Height = 100;
              m_LineAnnotation.X = 50;
              m_LineAnnotation.Y = 50;
              m_LineAnnotation.LineColor = Colors.Red;
              m_LineAnnotation.LineWidth = 5;
              m_ImageObject.AddLine(m_LineAnnotation);
            </code></example>
      <remarks>One image should already be loaded in order to the annotations be accepted by the library.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.RemoveAnnotation(ImageComponents.Core.Imaging.ICAnnotationObject)">
      <summary>
            Removes the specified annotation object from the selected image page.
            </summary>
      <example> This sample shows how to remove one annotation from the selected page.
            <code lang="vbnet">
              Dim m_AnnotationObject As ImageComponents.WPF.Imaging.Annotations.ICAnnotationObject = m_ImageObject.SelectedAnnotationObject
              m_ImageObject.RemoveAnnotation(m_AnnotationObject)
            </code><code lang="C#">
              ImageComponents.WPF.Imaging.Annotations.ICAnnotationObject m_AnnotationObject = m_ImageObject.SelectedAnnotationObject;
              m_ImageObject.RemoveAnnotation(m_AnnotationObject);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ClearAnnotations">
      <summary>
            Clears all the annotations of the displayed image.
            </summary>
      <example> This sample shows how to clear all annotations of the displayed image.
            <code lang="vbnet">
              m_ImageObject.ClearAnnotations()
            </code><code lang="C#">
              m_ImageObject.ClearAnnotations();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ClearAnnotations(System.Int32)">
      <summary>
            Clears all the annotations of the specified image page.
            </summary>
      <example> This sample shows how to clear all annotations of the first image page.
            <param name="PageIndex">Page index position.</param><code lang="vbnet">
              m_ImageObject.ClearAnnotations(0)
            </code><code lang="C#">
              m_ImageObject.ClearAnnotations(0);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ProtectAnnotations(System.Boolean)">
      <summary>
            Protects or remove protection all the annotations of the image pages.
            </summary>
      <param name="IsProtected">Sets the protect value of the annotations.</param>
      <example> This sample shows how to protect all annotations of the image pages.
            <code lang="vbnet">
              m_ImageObject.ProtectAnnotations(True)
            </code><code lang="C#">
              m_ImageObject.ProtectAnnotations(true);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ProtectAnnotations(System.Int32,System.Boolean)">
      <summary>
            Protects or remove protection all the annotations of a specific image pages.
            </summary>
      <param name="PageIndex">The specified image page to protect annotations.</param>
      <param name="IsProtected">Sets the protect value of the annotations.</param>
      <example> This sample shows how to protect the annotations of the first image page.
            <code lang="vbnet">
              m_ImageObject.ProtectAnnotations(0, True)
            </code><code lang="C#">
              m_ImageObject.ProtectAnnotations(0, true);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetAnnotations(System.Int32)">
      <summary>
            Gets all the annotations of the specified image page.
            </summary>
      <param name="PageIndex">Image page index.</param>
      <returns>ICAnnotationObjects page collection object.</returns>
      <example> This sample shows how to get all annotations in the specified page.
            <code lang="vbnet">
              Dim m_AnnotationObjects As ImageComponents.WPF.Imaging.Annotations.ICAnnotationObjects()
              m_AnnotationObjects = m_ImageObject.GetAnnotations(0)
            </code><code lang="C#">
              ImageComponents.WPF.Imaging.Annotations.ICAnnotationObjects m_AnnotationObjects;
              m_AnnotationObjects = m_ImageObject.GetAnnotations(0);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetAnnotations(ImageComponents.Core.Imaging.AnnotationType)">
      <summary>
            Gets the annotations of the specified type.
            </summary>
      <param name="AnnotationsType">Annotations objects type.</param>
      <returns>ICAnnotationObjects page collection object.</returns>
      <example> This sample shows how to get the text annotations in the specified image.
            <code lang="vbnet">
              Dim m_AnnotationObjects As ImageComponents.WPF.Imaging.Annotations.ICAnnotationObjects()
              m_AnnotationObjects = m_ImageObject.GetAnnotations(Imaging.Annotations.AnnotationType.TextAnnotation)
            </code><code lang="C#">
              ImageComponents.WPF.Imaging.Annotations.ICAnnotationObjects m_AnnotationObjects;
              m_AnnotationObjects = m_ImageObject.GetAnnotations(Imaging.Annotations.AnnotationType.TextAnnotation);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetAnnotations(ImageComponents.Core.Imaging.AnnotationType,System.Int32)">
      <summary>
            Gets the annotations of the specified page and type.
            </summary>
      <param name="AnnotationsType">Annotations objects type.</param>
      <param name="PageIndex">Image page index.</param>
      <returns>ICAnnotationObjects page collection object.</returns>
      <example> This sample shows how to get the text annotations in the first image page.
            <code lang="vbnet">
              Dim m_AnnotationObjects As ImageComponents.WPF.Imaging.Annotations.ICAnnotationObjects()
              m_AnnotationObjects = m_ImageObject.GetAnnotations(Imaging.Annotations.AnnotationType.TextAnnotation, 0)
            </code><code lang="C#">
              ImageComponents.WPF.Imaging.Annotations.ICAnnotationObjects m_AnnotationObjects;
              m_AnnotationObjects = m_ImageObject.GetAnnotations(Imaging.Annotations.AnnotationType.TextAnnotation, 0);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetAnnotation(System.Int32)">
      <summary>
            Gets the annotation of the specified zone id.
            </summary>
      <param name="ZoneID">Annotation zone ID.</param>
      <returns>ICAnnotationObjects page collection object.</returns>
      <example> This sample shows how to get the annotation object by zone id.
            <code lang="vbnet">
              Dim m_AnnotationObject As ImageComponents.WPF.Imaging.Annotations.ICAnnotationObject()
              m_AnnotationObject = m_ImageObject.GetAnnotation(1)
            </code><code lang="C#">
              ImageComponents.WPF.Imaging.Annotations.ICAnnotationObject m_AnnotationObject;
              m_AnnotationObject = m_ImageObject.GetAnnotation(1);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.BurnAnnotations">
      <summary>
            Burns the existent annotations in the displayed image page.
            </summary>
      <example> This sample shows how to burn the annotation objects into the displayed page.
            <code lang="vbnet">
              m_ImageObject.BurnAnnotations()
            </code><code lang="C#">
              m_ImageObject.BurnAnnotations();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.BurnAnnotations(System.Int32)">
      <summary>
            Burns the existent annotations in the specified image page.
            </summary>
      <param name="PageIndex">Page index position.</param>
      <example> This sample shows how to burn the annotation objects into the first page.
            <code lang="vbnet">
              m_ImageObject.BurnAnnotations(0)
            </code><code lang="C#">
              m_ImageObject.BurnAnnotations(0);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.BurnAllAnnotations">
      <summary>
            Burns all the existent annotations in the image page.
            </summary>
      <example> This sample shows how to burn all annotation objects into the loaded image.
            <code lang="vbnet">
              m_ImageObject.BurnAllAnnotations()
            </code><code lang="C#">
              m_ImageObject.BurnAllAnnotations();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.LoadAnnotations">
      <summary>
            Loads the xml annotations definition to the displayed image.
            </summary>
      <example> This sample shows how to load the annotations definition into the displayed image.
            <code lang="vbnet">
              Dim m_FileDialog As New OpenFileDialog()
              m_FileDialog.Multiselect = False
              m_FileDialog.Filter = "Image Annotations File (*.ann) |*.ann"
              Dim m_DialogResult As System.Nullable(Of Boolean) = m_FileDialog.ShowDialog()
              If Convert.ToBoolean(m_DialogResult) Then
            	 Dim fs As FileStream = m_FileDialog.File.OpenRead()
            	 Dim br As New BinaryReader(fs)
            	 Dim m_AnnotationsByteArray As Byte() = New Byte(fs.Length - 1)
            	 m_AnnotationsByteArray = br.ReadBytes(CInt(fs.Length))
            	 br.Close()
            	 br = Nothing
            	 fs.Close()
            	 fs.Dispose()
            	 fs = Nothing
            	 m_ImageObject.ICImageAnnotations = m_AnnotationsByteArray
            	 m_ImageObject.LoadAnnotations()
              End If
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.Multiselect = false;
              m_FileDialog.Filter = "Image Annotations File (*.ann) |*.ann";
              Boolean? m_DialogResult = m_FileDialog.ShowDialog();
              if (Convert.ToBoolean(m_DialogResult))
              {
                  FileStream fs = m_FileDialog.File.OpenRead();
                  BinaryReader br = new BinaryReader(fs);
                  Byte[] m_AnnotationsByteArray = new Byte[fs.Length];
                  m_AnnotationsByteArray = br.ReadBytes((int)fs.Length);
                  br.Close();
                  br = null;
                  fs.Close();
                  fs.Dispose();
                  fs = null;
                  m_ImageObject.ICImageAnnotations = m_AnnotationsByteArray;
                  m_ImageObject.LoadAnnotations();
              }
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.LoadAnnotations(System.IO.Stream)">
      <summary>
            Loads the xml annotations definition to the displayed image.
            </summary>
      <param name="ImageAnnotation">Image annotations definition stream.</param>
      <example> This sample shows how to load the annotations definition into the displayed image.
            <code lang="vbnet">
              Dim m_FileDialog As New OpenFileDialog()
              m_FileDialog.Multiselect = False
              m_FileDialog.Filter = "Image Annotations File (*.ann) |*.ann"
              Dim m_DialogResult As System.Nullable(Of Boolean) = m_FileDialog.ShowDialog()
              If Convert.ToBoolean(m_DialogResult) Then
            	 Dim fs As FileStream = m_FileDialog.File.OpenRead()
            	 m_ImageObject.LoadAnnotations(fs)
              End If
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.Multiselect = false;
              m_FileDialog.Filter = "Image Annotations File (*.ann) |*.ann";
              Boolean? m_DialogResult = m_FileDialog.ShowDialog();
              if (Convert.ToBoolean(m_DialogResult))
              {
                  FileStream fs = m_FileDialog.File.OpenRead();
                  m_ImageObject.LoadAnnotations(fs);
              }
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.LoadAnnotations(System.String)">
      <summary>
            Loads the xml annotations definition to the displayed image.
            </summary>
      <param name="ImageAnnotation">Image annotations definition string.</param>
      <example> This sample shows how to load the annotations definition into the displayed image.
            <code lang="vbnet">
              Dim m_FileDialog As New OpenFileDialog()
              m_FileDialog.Multiselect = False
              m_FileDialog.Filter = "Image Annotations File (*.ann) |*.ann"
              Dim m_DialogResult As System.Nullable(Of Boolean) = m_FileDialog.ShowDialog()
              If Convert.ToBoolean(m_DialogResult) Then
            	 Dim fs As FileStream = m_FileDialog.File.OpenRead()
            	 Dim m_StreamReader As StreamReader = New StreamReader(fs)
            	 Dim m_AnnotationsString = m_StreamReader.ReadToEnd()
            	 m_ImageObject.LoadAnnotations(m_AnnotationsString)
              End If
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.Multiselect = false;
              m_FileDialog.Filter = "Image Annotations File (*.ann) |*.ann";
              Boolean? m_DialogResult = m_FileDialog.ShowDialog();
              if (Convert.ToBoolean(m_DialogResult))
              {
                  FileStream fs = m_FileDialog.File.OpenRead();
                  StreamReader m_StreamReader = new StreamReader(fs);
                  String m_AnnotationsString =  m_StreamReader.ReadToEnd();
                  m_ImageObject.LoadAnnotations(m_AnnotationsString);
              }
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveAnnotationsString(ImageComponents.Core.Imaging.ICImageObject.ObjectsType)">
      <summary>
            Saves the xml annotations definition to a string object.
            </summary>
      <param name="AnnotationsType">Annotation objects type.</param>
      <returns>Image annotations definition XML string.</returns>
      <example> This sample shows how to save the annotations definition.
            <code lang="vbnet">
              Dim m_AnnotationsDefinition = m_ImageObject.SaveAnnotationsString()
              Dim m_AnnotationsByteArray as Byte()
              m_AnnotationsByteArray = Encoding.UTF8.GetBytes(m_AnnotationsDefinition)
              Dim m_SaveFileDialog As New SaveFileDialog()
              	If Not [String].IsNullOrEmpty(m_AnnotationsDefinition) Then
              	  m_SaveFileDialog.Filter = "Image Components Annotations (*.ann)|*.ann"
                  If Convert.ToBoolean(m_SaveFileDialog.ShowDialog()) Then
                     Using fs As Stream = DirectCast(m_SaveFileDialog.OpenFile(), Stream)
                     	fs.Write(m_AnnotationsByteArray, 0, m_AnnotationsByteArray.Length)
                        fs.Close()
                        fs.Close();
                     End Using
                  End If   
              End If
            </code><code lang="C#">
              String m_AnnotationsDefinition = m_ImageObject.SaveAnnotationsString();
              Byte[] m_AnnotationsByteArray = Encoding.UTF8.GetBytes(m_AnnotationsDefinition);
              SaveFileDialog m_SaveFileDialog = new SaveFileDialog();
              if (!String.IsNullOrEmpty(m_AnnotationsDefinition))
              {
                  m_SaveFileDialog.Filter = "Image Components Annotations (*.ann)|*.ann";
                  if (Convert.ToBoolean(m_SaveFileDialog.ShowDialog()))
                  {
                     using (Stream fs = (Stream)m_SaveFileDialog.OpenFile())
                     {
                        fs.Write(m_AnnotationsByteArray, 0, m_AnnotationsByteArray.Length);
                        fs.Close();
                     }
                  }
              }
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveAnnotationsStream(ImageComponents.Core.Imaging.ICImageObject.ObjectsType)">
      <summary>
            Saves the xml annotations definition to a string object.
            </summary>
      <param name="AnnotationsType">Annotation objects type.</param>
      <returns>Image annotations definition stream.</returns>
      <example> This sample shows how to save the annotations definition.
            <code lang="vbnet">
              Dim m_SaveFileDialog As New SaveFileDialog()
              If m_ImageObject.SaveAnnotationsStream(ImageComponents.WPF.Imaging.ImgAnnotations.ObjectsType.All) IsNot Nothing Then
              	  m_SaveFileDialog.Filter = "Image Components Annotations (*.ann)|*.ann"
                  If Convert.ToBoolean(m_SaveFileDialog.ShowDialog()) Then
                     Using fs As Stream = DirectCast(m_SaveFileDialog.OpenFile(), Stream)
                     	fs.Write(m_ImageObject.ICImageAnnotations, 0, m_ImageObject.ICImageAnnotations.Length)
                        fs.Close()
                        fs.Close();
                     End Using
                  End If   
              End If
            </code><code lang="C#">
              SaveFileDialog m_SaveFileDialog = new SaveFileDialog();
              if (m_ImageObject.SaveAnnotationsStream(ImageComponents.WPF.Imaging.ImgAnnotations.ObjectsType.All) != null)
              {
                  m_SaveFileDialog.Filter = "Image Components Annotations (*.ann)|*.ann";
                  if (Convert.ToBoolean(m_SaveFileDialog.ShowDialog()))
                  {
                     using (Stream fs = (Stream)m_SaveFileDialog.OpenFile())
                     {
                        fs.Write(m_ImageObject.ICImageAnnotations, 0, m_ImageObject.ICImageAnnotations.Length);
                        fs.Close();
                     }
                  }
              }
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReadBarcodes">
      <summary>
            Reads the existing barcodes in a specified image page.
            </summary>
      <example>This sample shows how to read the existing barcodes in the first image page. 
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject().Load(File.ReadAllBytes("E:\MyImage.tif"))
              m_ImageObject.ReadBarcodeTypes = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeType)
              m_ImageObject.ReadBarcodeTypes.Add(ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO)
              m_ImageObject.ReadBarcodeOrientations = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeOrientation)
              m_ImageObject.ReadBarcodeOrientations.Add(ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight)
              m_ImageObject.StopOnFirstResult = False
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage
              m_ImageObject.Page = 0
              Dim m_Result As ICBarcodesResultCollection = m_ImageObject.ReadBarcodes().ReadBarcodesResults
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject().Load(File.ReadAllBytes("E:\\MyImage.tif"));
              m_ImageObject.ImageBarcodeTypes = new List&lt;ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType&gt;() { ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeTypes = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeType&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeOrientations = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeOrientation&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight };
              m_ImageObject.StopOnFirstResult = false;
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage;
              m_ImageObject.Page = 0;
              ICBarcodesResultCollection m_Result = m_ImageObject.ReadBarcodes().ReadBarcodesResults;
            </code></example>
      <remarks>The read results will be obtained on the ImgBarDecoder.ScanResult event for each valid barcode
            or on the ImgBarDecoder.ReadedBarcodesResults collection property.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReadBarcodes(System.Drawing.Bitmap)">
      <summary>
            Loads the image bitmap object and reads the existing valid barcodes.
            </summary>
      <param name="ImageBitmap">The System.Drawing.Bitmap object.</param>
      <example>This sample shows how to read the existing barcodes from an image Bitmap. 
            <code lang="vbnet">
              Dim bmp As New System.Drawing.Bitmap("C:\Test.tif")
              m_ImageObject.ReadBarcodeTypes = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeType)
              m_ImageObject.ReadBarcodeTypes.Add(ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO)
              m_ImageObject.ReadBarcodeOrientations = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeOrientation)
              m_ImageObject.ReadBarcodeOrientations.Add(ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight)
              m_ImageObject.StopOnFirstResult = False
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage
              m_ImageObject.Page = 0
              Dim m_Result As ICBarcodesResultCollection = m_ImageObject.ReadBarcodes(bmp).ReadBarcodesResults
            </code><code lang="C#">
              System.Drawing.Bitmap bmp = new System.Drawing.Bitmap("C:\\Test.tif");
              m_ImageObject.ImageBarcodeTypes = new List&lt;ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType&gt;() { ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeTypes = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeType&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeOrientations = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeOrientation&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight };
              m_ImageObject.StopOnFirstResult = false;
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage;
              m_ImageObject.Page = 0;
              ICBarcodesResultCollection m_Result = m_ImageObject.ReadBarcodes(bmp).ReadBarcodesResults;
            </code></example>
      <remarks>The read results will be obtained on the ImgBarDecoder.ScanResult event for each valid barcode
            or on the ImgBarDecoder.ReadedBarcodesResults collection property.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReadBarcodes(System.Byte[])">
      <summary>
            Loads the image byte array and reads the existing valid barcodes.
            </summary>
      <param name="ImageSource">The image source byte array.</param>
      <example> This sample shows how to load a byte array image and read the valid barcodes from the first page.
            <code lang="vbnet">
              Dim m_ImageByteArray As Byte() = File.ReadAllBytes("C:\Test.tif")
              m_ImageObject.ReadBarcodeTypes = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeType)
              m_ImageObject.ReadBarcodeTypes.Add(ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO)
              m_ImageObject.ReadBarcodeOrientations = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeOrientation)
              m_ImageObject.ReadBarcodeOrientations.Add(ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight)
              m_ImageObject.StopOnFirstResult = False
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage
              m_ImageObject.Page = 0
              Dim m_Result As ICBarcodesResultCollection = m_ImageObject.ReadBarcodes(m_ImageByteArray).ReadBarcodesResults
            </code><code lang="C#">
              byte[] m_ImageByteArray = File.ReadAllBytes("C:\Test.tif");
              m_ImageObject.ImageBarcodeTypes = new List&lt;ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType&gt;() { ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeTypes = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeType&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeOrientations = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeOrientation&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight };
              m_ImageObject.StopOnFirstResult = false;
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage;
              m_ImageObject.Page = 0;
              ICBarcodesResultCollection m_Result = m_ImageObject.ReadBarcodes(m_ImageByteArray).ReadBarcodesResults;
            </code></example>
      <remarks>The read results will be obtained on the ImgBarDecoder.ScanResult event for each valid barcode
            or on the ImgBarDecoder.ReadedBarcodesResults collection property.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReadBarcodes(System.Uri)">
      <summary>
            Loads the image from the Uri path and reads the existing valid barcodes.
            </summary>
      <param name="ImageUri">The image resource identifier path.</param>
      <example>This sample shows how to scan the existing barcodes from a specified Uri. 
            <code lang="vbnet">
              Dim m_Uri as New Uri("http://www.imagecomponents.net/Images/Test.tif")
              m_ImageObject.ReadBarcodeTypes = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeType)
              m_ImageObject.ReadBarcodeTypes.Add(ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO)
              m_ImageObject.ReadBarcodeOrientations = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeOrientation)
              m_ImageObject.ReadBarcodeOrientations.Add(ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight)
              m_ImageObject.StopOnFirstResult = False
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage
              m_ImageObject.Page = 0
              Dim m_Result As ICBarcodesResultCollection = m_ImageObject.ReadBarcodes(m_Uri).ReadBarcodesResults
            </code><code lang="C#">
              Uri m_uri = new Uri("http://www.imagecomponents.net/Images/Test.tif");
              m_ImageObject.ImageBarcodeTypes = new List&lt;ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType&gt;() { ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeTypes = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeType&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeOrientations = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeOrientation&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight };
              m_ImageObject.StopOnFirstResult = false;
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage;
              m_ImageObject.Page = 0;
              ICBarcodesResultCollection m_Result = m_ImageObject.ReadBarcodes(m_ImageByteArray).ReadBarcodesResults;
            </code></example>
      <remarks>The read results will be obtained on the ImgBarDecoder.ScanResult event for each valid barcode
            or on the ImgBarDecoder.ReadedBarcodesResults collection property.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReadBarcodesAsync">
      <summary>
            Reads the existing barcodes in a specified image page asynchronously.
            </summary>
      <example>This sample shows how to read the existing barcodes in the first image page. 
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject().Load(File.ReadAllBytes("E:\MyImage.tif"))
              m_ImageObject.ReadBarcodeTypes = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeType)
              m_ImageObject.ReadBarcodeTypes.Add(ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO)
              m_ImageObject.ReadBarcodeOrientations = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeOrientation)
              m_ImageObject.ReadBarcodeOrientations.Add(ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight)
              m_ImageObject.StopOnFirstResult = False
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage
              m_ImageObject.Page = 0
              m_ImageObject.ReadBarcodes()
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject().Load(File.ReadAllBytes("E:\\MyImage.tif"));
              m_ImageObject.ImageBarcodeTypes = new List&lt;ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType&gt;() { ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeTypes = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeType&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeOrientations = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeOrientation&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight };
              m_ImageObject.StopOnFirstResult = false;
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage;
              m_ImageObject.Page = 0;
              m_ImageObject.ReadBarcodesAsync();
            </code></example>
      <remarks>The read results will be obtained on the ImgBarDecoder.ScanResult event for each valid barcode
            or on the ImgBarDecoder.ReadedBarcodesResults collection property.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReadBarcodesAsync(System.Drawing.Bitmap)">
      <summary>
            Loads the image bitmap object and reads the existing valid barcodes asynchronously.
            </summary>
      <param name="ImageBitmap">The System.Drawing.Bitmap object.</param>
      <example>This sample shows how to read the existing barcodes from an image Bitmap. 
            <code lang="vbnet">
              Dim bmp As New System.Drawing.Bitmap("C:\Test.tif")
              m_ImageObject.ReadBarcodeTypes = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeType)
              m_ImageObject.ReadBarcodeTypes.Add(ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO)
              m_ImageObject.ReadBarcodeOrientations = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeOrientation)
              m_ImageObject.ReadBarcodeOrientations.Add(ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight)
              m_ImageObject.StopOnFirstResult = False
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage
              m_ImageObject.Page = 0
              m_ImageObject.ReadBarcodesAsync(bmp)
            </code><code lang="C#">
              System.Drawing.Bitmap bmp = new System.Drawing.Bitmap("C:\\Test.tif");
              m_ImageObject.ImageBarcodeTypes = new List&lt;ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType&gt;() { ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeTypes = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeType&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeOrientations = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeOrientation&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight };
              m_ImageObject.StopOnFirstResult = false;
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage;
              m_ImageObject.Page = 0;
              m_ImageObject.ReadBarcodesAsync(bmp);
            </code></example>
      <remarks>The read results will be obtained on the ImgBarDecoder.ScanResult event for each valid barcode
            or on the ImgBarDecoder.ReadedBarcodesResults collection property.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReadBarcodesAsync(System.Byte[])">
      <summary>
            Loads the image byte array and reads the existing valid barcodes asynchronously.
            </summary>
      <param name="ImageSource">The image source byte array.</param>
      <example> This sample shows how to load a byte array image and read the valid barcodes from the first page.
            <code lang="vbnet">
              Dim m_ImageByteArray As Byte() = File.ReadAllBytes("C:\Test.tif")
              m_ImageObject.ReadBarcodeTypes = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeType)
              m_ImageObject.ReadBarcodeTypes.Add(ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO)
              m_ImageObject.ReadBarcodeOrientations = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeOrientation)
              m_ImageObject.ReadBarcodeOrientations.Add(ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight)
              m_ImageObject.StopOnFirstResult = False
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage
              m_ImageObject.Page = 0
              m_ImageObject.ReadBarcodesAsync(m_ImageByteArray)
            </code><code lang="C#">
              byte[] m_ImageByteArray = File.ReadAllBytes("C:\Test.tif");
              m_ImageObject.ImageBarcodeTypes = new List&lt;ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType&gt;() { ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeTypes = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeType&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeOrientations = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeOrientation&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight };
              m_ImageObject.StopOnFirstResult = false;
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage;
              m_ImageObject.Page = 0;
              m_ImageObject.ReadBarcodesAsync(m_ImageByteArray);
            </code></example>
      <remarks>The read results will be obtained on the ImgBarDecoder.ScanResult event for each valid barcode
            or on the ImgBarDecoder.ReadedBarcodesResults collection property.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ReadBarcodesAsync(System.Uri)">
      <summary>
            Loads the image from the Uri path and reads the existing valid barcodes asynchronously.
            </summary>
      <param name="ImageUri">The image resource identifier path.</param>
      <example>This sample shows how to scan the existing barcodes from a specified Uri. 
            <code lang="vbnet">
              Dim m_Uri as New Uri("http://www.imagecomponents.net/Images/Test.tif")
              m_ImageObject.ReadBarcodeTypes = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeType)
              m_ImageObject.ReadBarcodeTypes.Add(ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO)
              m_ImageObject.ReadBarcodeOrientations = New List(Of ImageComponents.Core.Imaging.ICImageBarcodeOrientation)
              m_ImageObject.ReadBarcodeOrientations.Add(ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight)
              m_ImageObject.StopOnFirstResult = False
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage
              m_ImageObject.Page = 0
              m_ImageObject.ReadBarcodesAsync(m_Uri)
            </code><code lang="C#">
              Uri m_uri = new Uri("http://www.imagecomponents.net/Images/Test.tif");
              m_ImageObject.ImageBarcodeTypes = new List&lt;ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType&gt;() { ImageComponents.Win32.ImgBarDecoder.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeTypes = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeType&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO };
              m_ImageObject.ReadBarcodeOrientations = new List&lt;ImageComponents.Core.Imaging.ICImageBarcodeOrientation&gt;() { ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight };
              m_ImageObject.StopOnFirstResult = false;
              m_ImageObject.ReadBarcodePageType = ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage;
              m_ImageObject.Page = 0;
              m_ImageObject.ReadBarcodesAsync(m_ImageByteArray);
            </code></example>
      <remarks>The read results will be obtained on the ImgBarDecoder.ScanResult event for each valid barcode
            or on the ImgBarDecoder.ReadedBarcodesResults collection property.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.AbortBarcodeRead">
      <summary>
            Aborts the current barcode read process.
            </summary>
      <example> This sample shows how to abort the barcode read process.
            <code lang="vbnet">
              m_ImageObject.AbortBarcodeRead()
            </code><code lang="C#">
              m_ImageObject.AbortBarcodeRead();
            </code></example>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.EncodeBarcode(ImageComponents.Core.Imaging.ICImageBarcodeType,System.String,System.Int32,System.Int32)">
      <summary>
            Encodes one specified character string to a barcode System.Drawing.Image object.
            </summary>
      <param name="BarcodeType">The barcode format type to encode.</param>
      <param name="ValueToEncode">The character string value to encode.</param>
      <param name="Width">The encoded barcode image width.</param>
      <param name="Height">The encoded barcode image height.</param>
      <returns>The encoded barcode System.Drawing.Image object.</returns>
      <example> This sample shows how to encode a barcode using the Code39 type, saving it to a file.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              Dim m_Result As ICBarcodeEncodeResult = m_ImageObject.EncodeBarcode(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678", 400, 200).EncodedBarcodeResult
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              ICBarcodeEncodeResult m_Result = m_ImageObject.EncodeBarcode(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678", 400, 200).EncodedBarcodeResult;
            </code></example>
      <remarks>The encoded image barcode result will be returned in the EncodeFinished event.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.EncodeBarcode(ImageComponents.Core.Imaging.ICImageBarcodeType,System.String,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
      <summary>
            Encodes one specified character string to a barcode System.Drawing.Image object.
            </summary>
      <param name="BarcodeType">The barcode format type to encode.</param>
      <param name="ValueToEncode">The character string value to encode.</param>
      <param name="ForeColor">The barcode bars, header and footer text fore-color.</param>
      <param name="BackColor">The encoded barcode image back-color.</param>
      <param name="Width">The encoded barcode image width.</param>
      <param name="Height">The encoded barcode image height.</param>
      <returns>The encoded barcode System.Drawing.Image object.</returns>
      <example> This sample shows how to encode a barcode using the Code39 type, saving it to a file.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              Dim m_Result As ICBarcodeEncodeResult = m_ImageObject.EncodeBarcode(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678", System.Drawing.Color.Black, System.Drawing.Color.White, 400, 200).EncodedBarcodeResult
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              ICBarcodeEncodeResult m_Result = m_ImageObject.EncodeBarcode(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678", System.Drawing.Color.Black, System.Drawing.Color.White, 400, 200).EncodedBarcodeResult;
            </code></example>
      <remarks>The encoded image barcode result will be returned in the EncodeFinished event.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.EncodeBarcode(ImageComponents.Core.Imaging.ICImageBarcodeType,System.String,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Encodes one specified character string to a barcode System.Drawing.Image object.
            </summary>
      <param name="BarcodeType">The barcode format type to encode.</param>
      <param name="ValueToEncode">The character string value to encode.</param>
      <param name="ForeColor">The barcode bars, header and footer text fore-color.</param>
      <param name="BackColor">The encoded barcode image back-color.</param>
      <returns>The encoded barcode System.Drawing.Image object.</returns>
      <example> This sample shows how to encode a barcode using the Code39 type, saving it to a file.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              Dim m_Result As ICBarcodeEncodeResult = m_ImageObject.EncodeBarcode(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678", System.Drawing.Color.Black, System.Drawing.Color.White).EncodedBarcodeResult
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              ICBarcodeEncodeResult m_Result = m_ImageObject.EncodeBarcode(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678", System.Drawing.Color.Black, System.Drawing.Color.White).EncodedBarcodeResult;
            </code></example>
      <remarks>The encoded image barcode result will be returned in the EncodeFinished event.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.EncodeBarcode(ImageComponents.Core.Imaging.ICImageBarcodeType,System.String)">
      <summary>
            Encodes one specified character string to a barcode System.Drawing.Image object.
            </summary>
      <param name="BarcodeType">The barcode format type to encode.</param>
      <param name="ValueToEncode">The character string value to encode.</param>
      <returns>The encoded barcode System.Drawing.Image object.</returns>
      <example> This sample shows how to encode a barcode using the Code39 type, saving it to a file.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              Dim m_Result As ICBarcodeEncodeResult = m_ImageObject.EncodeBarcode(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678").EncodedBarcodeResult
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              ICBarcodeEncodeResult m_Result = m_ImageObject.EncodeBarcode(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678").EncodedBarcodeResult;
            </code></example>
      <remarks>The encoded image barcode result will be returned in the EncodeFinished event.</remarks>
      <returns>The Image Components Image Object instance.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.EncodeBarcodeAsync(ImageComponents.Core.Imaging.ICImageBarcodeType,System.String,System.Int32,System.Int32)">
      <summary>
            Encodes one specified character string to a barcode System.Drawing.Image object.
            </summary>
      <param name="BarcodeType">The barcode format type to encode.</param>
      <param name="ValueToEncode">The character string value to encode.</param>
      <param name="Width">The encoded barcode image width.</param>
      <param name="Height">The encoded barcode image height.</param>
      <returns>The encoded barcode System.Drawing.Image object.</returns>
      <example> This sample shows how to encode a barcode using the Code39 type, saving it to a file.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              m_ImageObject.EncodeBarcodeAsync(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678", 400, 200)
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              m_ImageObject.EncodeBarcodeAsync(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678", 400, 200);
            </code></example>
      <remarks>The encoded image barcode result will be returned in the EncodeFinished event.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.EncodeBarcodeAsync(ImageComponents.Core.Imaging.ICImageBarcodeType,System.String,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
      <summary>
            Encodes one specified character string to a barcode System.Drawing.Image object.
            </summary>
      <param name="BarcodeType">The barcode format type to encode.</param>
      <param name="ValueToEncode">The character string value to encode.</param>
      <param name="ForeColor">The barcode bars, header and footer text fore-color.</param>
      <param name="BackColor">The encoded barcode image back-color.</param>
      <param name="Width">The encoded barcode image width.</param>
      <param name="Height">The encoded barcode image height.</param>
      <returns>The encoded barcode System.Drawing.Image object.</returns>
      <example> This sample shows how to encode a barcode using the Code39 type, saving it to a file.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              m_ImageObject.EncodeBarcodeAsync(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678", System.Drawing.Color.Black, System.Drawing.Color.White, 400, 200)
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              m_ImageObject.EncodeBarcodeAsync(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678", System.Drawing.Color.Black, System.Drawing.Color.White, 400, 200);
            </code></example>
      <remarks>The encoded image barcode result will be returned in the EncodeFinished event.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.EncodeBarcodeAsync(ImageComponents.Core.Imaging.ICImageBarcodeType,System.String,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Encodes one specified character string to a barcode System.Drawing.Image object.
            </summary>
      <param name="BarcodeType">The barcode format type to encode.</param>
      <param name="ValueToEncode">The character string value to encode.</param>
      <param name="ForeColor">The barcode bars, header and footer text fore-color.</param>
      <param name="BackColor">The encoded barcode image back-color.</param>
      <returns>The encoded barcode System.Drawing.Image object.</returns>
      <example> This sample shows how to encode a barcode using the Code39 type, saving it to a file.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              m_ImageObject.EncodeBarcodeAsync(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678", System.Drawing.Color.Black, System.Drawing.Color.White)
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              m_ImageObject.EncodeBarcodeAsync(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678", System.Drawing.Color.Black, System.Drawing.Color.White);
            </code></example>
      <remarks>The encoded image barcode result will be returned in the EncodeFinished event.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.EncodeBarcodeAsync(ImageComponents.Core.Imaging.ICImageBarcodeType,System.String)">
      <summary>
            Encodes one specified character string to a barcode System.Drawing.Image object.
            </summary>
      <param name="BarcodeType">The barcode format type to encode.</param>
      <param name="ValueToEncode">The character string value to encode.</param>
      <returns>The encoded barcode System.Drawing.Image object.</returns>
      <example> This sample shows how to encode a barcode using the Code39 type, saving it to a file.
            <code lang="vbnet">
              Dim m_ImageObject As ICImageObject = ICImageObject.NewImageObject()
              m_ImageObject.EncodeBarcode(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678")
            </code><code lang="C#">
              ICImageObject m_ImageObject = ICImageObject.NewImageObject();
              m_ImageObject.EncodeBarcode(ImageComponents.Shared.ImgBarcodes.ICImageBarcodeType.CODE39, "12345678");
            </code></example>
      <remarks>The encoded image barcode result will be returned in the EncodeFinished event.</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SelectSource">
      <summary>
            Selects the scanning hardware source.
            </summary>
      <returns>The select source dialog result.</returns>
      <example> This sample shows how to display the available scanner sources window.
            <code lang="vbnet">
            imgScan.SelectSource()
            </code><code lang="C#">
            imgScan.SelectSource();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SelectSource(System.String)">
      <summary>
            Selects the scanning hardware source.
            </summary>
      <param name="SourceName">The source name.</param>
      <returns>The select source result.</returns>
      <example> This sample shows how to select the scanner source by name.
            <code lang="vbnet">
            imgScan.SelectSource("KODAK Scanner: i900")
            </code><code lang="C#">
            imgScan.SelectSource("KODAK Scanner: i900");
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.IsSourceActive(System.String)">
      <summary>
            Checks if the specified source is active on the system.
            </summary>
      <param name="SourceName">The source name.</param>
      <example> This sample shows how to checks if the specified source is active.
            <code lang="vbnet">
            Dim IsActive As Boolean = imgScan.IsSourceActive("Device 1")
            </code><code lang="C#">
            Boolean IsActive = imgScan.IsSourceActive("Device 1");
            </code></example>
      <returns>If specified source name is active or not.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.GetScannerSources">
      <summary>
            Gets a collection of all active sources on the system.
            </summary>
      <example> This sample shows how get all the active sources on the system.
            <code lang="vbnet">
            Dim Sources As ArrayList = imgScan.GetScannerSources()
            </code><code lang="C#">
            ArrayList Sources = imgScan.GetScannerSources();
            </code></example>
      <returns>The available twain or WIA sources.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Acquire">
      <summary>
            Starts acquiring the images from the selected scanner.
            </summary>
      <example> This sample shows how start acquiring images from the selected scanner.
            <code lang="vbnet">
            imgScan.SaveImageFormat = ImgScan.ICImageOutputFormat.TIFF
            imgScan.SaveImageCompression = ImgScan.ICImageCompression.CCITT4
            imgScan.ImageFileDirectory = "C:\Test\"
            imgScan.Acquire()
            </code><code lang="C#">
            imgScan.SaveImageFormat = ImgScan.ICImageOutputFormat.TIFF;
            imgScan.SaveImageCompression = ImgScan.ICImageCompression.CCITT4;
            imgScan.ImageFileDirectory = "C:\\Test\\";
            imgScan.Acquire();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.LoadSettings(System.String)">
      <summary>
            Loads the xml scan definition to the component.
            </summary>
      <param name="ScanSettings">Image scan definition string.</param>
      <example> This sample shows how to load the scan definition into the component.
            <code lang="vbnet">
              Dim m_FileDialog As New OpenFileDialog()
              m_FileDialog.Multiselect = False
              m_FileDialog.Filter = "Image Annotations File (*.ann) |*.ann"
              Dim m_DialogResult As System.Nullable(Of Boolean) = m_FileDialog.ShowDialog()
              If Convert.ToBoolean(m_DialogResult) Then
            	 Dim fs As FileStream = m_FileDialog.File.OpenRead()
            	 Dim m_StreamReader As StreamReader = New StreamReader(fs)
            	 Dim m_AnnotationsString = m_StreamReader.ReadToEnd()
            	 m_ImageObject.LoadAnnotations(m_AnnotationsString)
              End If
            </code><code lang="C#">
              OpenFileDialog m_FileDialog = new OpenFileDialog();
              m_FileDialog.Multiselect = false;
              m_FileDialog.Filter = "Image Annotations File (*.ann) |*.ann";
              Boolean? m_DialogResult = m_FileDialog.ShowDialog();
              if (Convert.ToBoolean(m_DialogResult))
              {
                  FileStream fs = m_FileDialog.File.OpenRead();
                  StreamReader m_StreamReader = new StreamReader(fs);
                  String m_AnnotationsString =  m_StreamReader.ReadToEnd();
                  m_ImageObject.LoadAnnotations(m_AnnotationsString);
              }
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.SaveSettings">
      <summary>
            Saves the xml scan definition to a string object.
            </summary>
      <returns>Image scan definition string value.</returns>
      <example> This sample shows how to save the scan definition to a file.
            <code lang="vbnet">
              Dim m_SaveFileDialog As New SaveFileDialog()
              m_SaveFileDialog.Filter = "Image Components Scan (*.scn)|*.scn"
              If Convert.ToBoolean(m_SaveFileDialog.ShowDialog()) Then
                File.WriteAllText(m_SaveFileDialog.FileName, imgScan.SaveSettings())
              End If   
            </code><code lang="C#">
              SaveFileDialog m_SaveFileDialog = new SaveFileDialog();
              m_SaveFileDialog.Filter = "Image Components Scan (*.scn)|*.scn";
              if (Convert.ToBoolean(m_SaveFileDialog.ShowDialog()))
              {
                File.WriteAllText(m_SaveFileDialog.FileName, imgScan.SaveSettings());
              }
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ApplySettings">
      <summary>
            Applies the changed settings to the scanner driver.
            </summary>
      <example>This sample shows how to change a property and apply the changes to the scanner driver.
            <code lang="vbnet">
              imgScan.ImageFileDirectory ="C:\AnotherFolder\"
              imgScan.ApplySettings()
            </code><code lang="C#">
              imgScan.ImageFileDirectory ="C:\\AnotherFolder\\";
              imgScan.ApplySettings(); 
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.Abort">
      <summary>
            Aborts the acquisition process from the selected device. 
            </summary>
      <example> This sample shows how stop acquiring images from the selected device.
            <code lang="vbnet">
            imgScan.Abort()
            </code><code lang="C#">
            imgScan.Abort();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.TWOpenDSM">
      <summary>
            Opens the twain data source manager.
            </summary>
      <returns>If the data source manager is successfully opened.</returns>
      <example> This sample shows how to open the twain data source manager.
            <code lang="vbnet">
            Dim IsOpen As Boolean = imgScan.TWOpenDSM()
            </code><code lang="C#">
            Boolean IsOpen = imgScan.TWOpenDSM();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.TWOpenDS">
      <summary>
            Opens the selected or active data source.
            </summary>
      <returns>If the data source manager is successfully opened.</returns>
      <example>This sample shows how to open the selected or active data source.
            <code lang="vbnet">
            Dim IsOpen As Boolean = imgScan.TWOpenDS()
            </code><code lang="C#">
            Boolean IsOpen = imgScan.TWOpenDS();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.TWOpenDS(System.String)">
      <summary>
            Opens the specified data source.
            </summary>
      <param name="SourceName">The source name.</param>
      <returns>If the data source manager is successfully opened.</returns>
      <example>This sample shows how to open the data source with the name 'Device 1'.
            <code lang="vbnet">
            Dim IsOpen As Boolean = imgScan.TWOpenDS("Device 1")
            </code><code lang="C#">
            Boolean IsOpen = imgScan.TWOpenDS("Device 1");
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.TWEnableDSUI">
      <summary>
            Enables the data source user interface for scanning.
            </summary>
      <returns>If the data source user interface is successfully opened.</returns>
      <example>This sample shows how to open the data source user interface for scanning.
            <code lang="vbnet">
            Dim IsOpen As Boolean = imgScan.TWEnableDSUI()
            </code><code lang="C#">
            Boolean IsOpen = imgScan.TWEnableDSUI();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.TWEnableDSUIOnly">
      <summary>
            Enables the data source user interface for changing settings.
            </summary>
      <returns>If the data source user interface is successfully opened.</returns>
      <example>This sample shows how to open the data source user interface for changing settings.
            <code lang="vbnet">
            Dim IsOpen As Boolean = imgScan.TWEnableDSUIOnly()
            </code><code lang="C#">
            Boolean IsOpen = imgScan.TWEnableDSUIOnly();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.TWManageCapabilities(ImageComponents.Core.Imaging.Twain.CapabilityValues)">
      <summary>
            Manage twain source capability.
            </summary>
      <param name="capability">Capability value request.</param>
      <returns>Capability values result.</returns>
      <example> This sample shows how to get the current value of the brightness image capability.
            <code lang="vbnet">
            Dim m_Cap As New ImgScan.Twain.CapabilityValues()
            m_Cap.Capability = ImgScan.Twain.CAPABILITIES.ICAP_BRIGHTNESS
            m_Cap.Message = ImgScan.Twain.CAPMSG.GETCURRENT
            m_Cap = imgScan1.TWManageCapabilities(m_Cap)
            </code><code lang="C#">
            ImgScan.Twain.CapabilityValues m_Result = imgScan1.TWManageCapabilities(new ImgScan.Twain.CapabilityValues()
            {
                 Capability = ImgScan.Twain.CAPABILITIES.ICAP_BRIGHTNESS,
                 Message = ImgScan.Twain.CAPMSG.GETCURRENT
            });
            </code></example>
      <remarks>The source must be selected before managing it's capabilities,</remarks>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.TWManageCapabilities(System.Collections.Generic.List{ImageComponents.Core.Imaging.Twain.CapabilityValues})">
      <summary>
            Manage twain source capabilities.
            </summary>
      <param name="capability">Capability values request collection.</param>
      <returns>Capabilities collection values result.</returns>
            /// <example> This sample shows how to get the current value of the brightness and the contrast image capability.
            <code lang="vbnet">
             Dim m_Caps As New List(Of ImgScan.Twain.CapabilityValues)
             Dim m_Cap As New ImgScan.Twain.CapabilityValues()
             m_Cap.Capability = ImgScan.Twain.CAPABILITIES.ICAP_BRIGHTNESS
             m_Cap.Message = ImgScan.Twain.CAPMSG.GETCURRENT
             m_Caps.Add(m_Cap)
             m_Cap As New ImgScan.Twain.CapabilityValues()
             m_Cap.Capability = ImgScan.Twain.CAPABILITIES.ICAP_CONTRAST
             m_Cap.Message = ImgScan.Twain.CAPMSG.GETCURRENT
             m_Caps.Add(m_Cap)
             m_Caps = imgScan1.TWManageCapabilities(m_Caps)
            </code><code lang="C#">
            List&lt;ImgScan.Twain.CapabilityValues&gt; m_Caps = new List&lt;ImgScan.Twain.CapabilityValues&gt;();
            m_Caps.Add(new ImgScan.Twain.CapabilityValues()
            {
                Capability = ImgScan.Twain.CAPABILITIES.ICAP_BRIGHTNESS,
                Message = ImgScan.Twain.CAPMSG.GETCURRENT
            });
            m_Caps.Add(new ImgScan.Twain.CapabilityValues()
            {
                Capability = ImgScan.Twain.CAPABILITIES.ICAP_CONTRAST,
                Message = ImgScan.Twain.CAPMSG.GETCURRENT
            });
            m_Caps = imgScan1.TWManageCapabilities(m_Caps);
            </code></example><remarks>The source must be selected before managing it's capabilities,</remarks></member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.TWGetTwainState">
      <summary>
            Gets the twain data source current state.
            </summary>
      <returns>The data source current state.</returns>
      <example>This sample shows how to get the twain data source current state.
            <code lang="vbnet">
            Dim m_State As TWSTATE = imgScan.TWGetTwainState()
            </code><code lang="C#">
            TWSTATE m_State = imgScan.TWGetTwainState();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.TWSetTwainState(ImageComponents.Core.Imaging.Twain.TWSTATE)">
      <summary>
            Sets the twain data source state.
            </summary>
      <param name="twainState">The twain source manager state.</param>
      <example>This sample shows how to set the twain data source state closing the data source and manager.
            <code lang="vbnet">
            imgScan.TWSetTwainState(TWSTATE.S1)
            </code><code lang="C#">
            imgScan.TWSetTwainState(TWSTATE.S1);
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.TWDisableDS">
      <summary>
            Disable the current or active data source.
            </summary>
      <example>This sample shows how to disable the current or active data source.
            <code lang="vbnet">
            imgScan.TWDisableDS()
            </code><code lang="C#">
            imgScan.TWDisableDS();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.TWCloseDS">
      <summary>
            Close the current or active data source.
            </summary>
      <example>This sample shows how to close the current or active data source.
            <code lang="vbnet">
            imgScan.TWCloseDS()
            </code><code lang="C#">
            imgScan.TWCloseDS();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.TWCloseDSM">
      <summary>
            Close the twain data source manager.
            </summary>
      <example>This sample shows how to close the data source manager.
            <code lang="vbnet">
            imgScan.CloseDSM()
            </code><code lang="C#">
            imgScan.CloseDSM();
            </code></example>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.StartCamera">
      <summary>
            Start camera.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.ShowCameraProperties">
      <summary>
            Show camera properties.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageObject.StopCamera">
      <summary>
            Stop camera.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.ObjectsType">
      <summary>
            Draw annotation type enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageObject.ObjectsType.All">
      <summary>
            All annotations type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageObject.ObjectsType.Annotation">
      <summary>
            Non zone annotations type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageObject.ObjectsType.AnnotationZones">
      <summary>
            Zone annotations type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageObject.ImageObjectCanvas">
      <summary>
            Image Components Image Object Canvas Class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageObjectCanvas.Canvas">
      <summary>
            Get/Set Image Object draw canvas.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageObjectCanvas.CanvasPosition">
      <summary>
            Get/Set Canvas position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageObjectCanvas.CanvasSize">
      <summary>
            Get/Set Canvas size.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageObject.ImageObjectCanvas.Scale">
      <summary>
            Get/Set Scale.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICPageProperties">
      <summary>
            Image Components page properties class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPageProperties.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageProperties.Width">
      <summary>
            Gets the displayed page width value.
            </summary>
      <returns>Gets the displayed page width value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageProperties.Height">
      <summary>
            Gets the displayed page height value.
            </summary>
      <returns>Gets the displayed page height value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageProperties.XResolution">
      <summary>
            Gets the displayed page horizontal resolution.
             </summary>
      <returns>Gets the displayed page horizontal resolution.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageProperties.YResolution">
      <summary>
            Gets the displayed page vertical resolution.
            </summary>
      <returns>Gets the displayed page vertical resolution.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageProperties.BitsPerSample">
      <summary>
            Gets the displayed page bits per sample.
            </summary>
      <returns>Gets the displayed page bits per sample.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageProperties.SamplesPerPixel">
      <summary>
            Gets the displayed page samples per pixel.
            </summary>
      <returns>Gets the displayed page samples per pixel.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageProperties.PixelFormat">
      <summary>
            Gets the displayed page pixel format.
            </summary>
      <returns>Gets the displayed page pixel format.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageProperties.Compression">
      <summary>
            Gets the displayed page compression.
            </summary>
      <returns>Gets the displayed page compression.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPageProperties.ToString">
      <summary>
            Object properties to string.
            </summary>
      <returns>Object properties string value.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICPageMetadata">
      <summary>
            Image Components page meta data class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPageMetadata.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageMetadata.Artist">
      <summary>
            Gets or sets the image page author.
            </summary>
      <value>Sets the image page author.</value>
      <returns>Gets the image page author.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageMetadata.EquipmentMaker">
      <summary>
            Gets or sets the image page equipment maker.
            </summary>
      <value>Sets the image page equipment maker.</value>
      <returns>Gets the image page equipment maker.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageMetadata.EquipmentModel">
      <summary>
            Gets or sets the image page equipment model.
            </summary>
      <value>Sets the image page equipment model.</value>
      <returns>Gets the image page equipment model.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageMetadata.SoftwareUsed">
      <summary>
            Get/Set Software Used
            </summary>
      <value>Sets the image page equipment maker.</value>
      <returns>Gets the image page equipment maker.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageMetadata.DateTimeLastModified">
      <summary>
            Gets or sets the image page last modified date time.
            </summary>
      <value>Sets the image page last modified date time.</value>
      <returns>Gets the image page last modified date time.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageMetadata.DateTimeOriginal">
      <summary>
            Gets or sets the image page original date time.
            </summary>
      <value>Sets the image page original date time.</value>
      <returns>Gets the image page original date time.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageMetadata.DateTimeDigitalized">
      <summary>
            Gets or sets the image page digitalized date time.
            </summary>
      <value>Sets the image page digitalized date time.</value>
      <returns>Gets the image page digitalized date time.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageMetadata.ImageTitle">
      <summary>
            Gets or sets the image page title.
            </summary>
      <value>Sets the image page title.</value>
      <returns>Gets the image page title.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageMetadata.UserComment">
      <summary>
            Gets or sets the image page user comment.
            </summary>
      <value>Sets the image page user comment.</value>
      <returns>Gets the image page user comment.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageMetadata.ImageDescription">
      <summary>
            Gets or sets the image page image description.
            </summary>
      <value>Sets the image page image description.</value>
      <returns>Gets the image page image description.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageMetadata.ImageCopyright">
      <summary>
            Gets or sets the image page copyright.
            </summary>
      <value>Sets the image page copyright.</value>
      <returns>Gets the image page copyright.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageMetadata.DocumentName">
      <summary>
            Gets or sets the image page document name.
            </summary>
      <value>Sets the image page document name.</value>
      <returns>Gets the image page document name.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPageMetadata.PageName">
      <summary>
            Gets or sets the image page name.
            </summary>
      <value>Sets the image page name.</value>
      <returns>Gets the image page name.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPageMetadata.ToString">
      <summary>
            Object properties to string.
            </summary>
      <returns>Object properties string value.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICPagePaperSize">
      <summary>
            Image Components page paper size class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPagePaperSize.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPagePaperSize.PaperInchesX">
      <summary>
            Gets the image page X paper inches.
            </summary>
      <returns>Gets the image page X paper inches.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPagePaperSize.PaperInchesY">
      <summary>
            Gets the image page Y paper inches.
            </summary>
      <returns>Gets the image page Y paper inches.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPagePaperSize.PaperName">
      <summary>
            Gets the image page paper name.
            </summary>
      <returns>Gets the image page paper name.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPagePaperSize.PaperCmX">
      <summary>
            Gets the image page X paper centimeters.
            </summary>
      <returns>Gets the image page X paper centimeters.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPagePaperSize.PaperCmY">
      <summary>
            Gets the image page Y paper centimeters.
            </summary>
      <returns>Gets the image page Y paper centimeters.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPagePaperSize.ToString">
      <summary>
            Object properties to string.
            </summary>
      <returns>Object properties string value.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageProperties">
      <summary>
            Image Components image properties class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageProperties.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageProperties.ImageFilePath">
      <summary>
            Gets the image file path.
            </summary>
      <returns>Gets the image file path.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageProperties.ImageFileDirectory">
      <summary>
            Gets the image file directory.
            </summary>
      <returns>Gets the image file directory.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageProperties.ImageFileName">
      <summary>
            Gets the image file name.
            </summary>
      <returns>Gets the image file name.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageProperties.ImageFileExtension">
      <summary>
            Gets the image file extension.
            </summary>
      <returns>Gets the image file extension.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageProperties.ImageFileSize">
      <summary>
            Gets the image byte size.
            </summary>
      <returns>Gets the image byte size.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageProperties.ImageFormat">
      <summary>
            Gets the image file format.
            </summary>
      <returns>Gets the image file format.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageProperties.ToString">
      <summary>
            Object properties to string.
            </summary>
      <returns>Object properties string value.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICSelectionEventArgs">
      <summary>
            Image Components selection event args class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICSelectionEventArgs.#ctor(System.Drawing.Point)">
      <summary>
            Constructor.
            </summary>
      <param name="StartSelectionLocation">Start selection location.</param>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICSelectionEventArgs.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
      <summary>
            Constructor.
            </summary>
      <param name="StartSelectionLocation">Start selection location.</param>
      <param name="EndSelectionLocation">End selection location.</param>
      <param name="SelectionSize">Selection size.</param>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSelectionEventArgs.StartSelectionLocation">
      <summary>
            Get start selection location.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSelectionEventArgs.SelectionSize">
      <summary>
            Get selection size.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSelectionEventArgs.EndSelectionLocation">
      <summary>
            Get end selection location.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSelectionEventArgs.IsEmpty">
      <summary>
            Is selection rectangle empty.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageOutline">
      <summary>
            Image Components image outline object.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageOutline.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageOutline.Title">
      <summary>
            Get/Set Outline title.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageOutline.Count">
      <summary>
            Get/Set Outline child items count.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageOutline.DestinationPage">
      <summary>
            Get/Set Outline destination page.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageOutline.Items">
      <summary>
            Get/Set Outline child items.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICOutlinePage">
      <summary>
            Image Components Outline page class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICOutlinePage.PageNumber">
      <summary>
            Get/Set Page number.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICOutlinePage.PageLabel">
      <summary>
            Get/Set Page label.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICOutlinePage.X">
      <summary>
            Get Page X position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICOutlinePage.Y">
      <summary>
            Get Page Y position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICOutlinePage.Z">
      <summary>
            Get Page Z position.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageStatistics">
      <summary>
            Image Components image statistics object.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageStatistics.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.Red">
      <summary>
            Histogram of red channel.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.Green">
      <summary>
            Histogram of green channel.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.Blue">
      <summary>
            Histogram of blue channel.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.Gray">
      <summary>
            Histogram of gray channel.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.RedWithoutBlack">
      <summary>
            Histogram of red channel excluding black pixels.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.GreenWithoutBlack">
      <summary>
            Histogram of green channel excluding black pixels.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.BlueWithoutBlack">
      <summary>
            Histogram of blue channel excluding black pixels
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.GrayWithoutBlack">
      <summary>
            Histogram of gray channel excluding black pixels.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.PixelsCount">
      <summary>
            Total pixels count in the processed image.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.PixelsCountWithoutBlack">
      <summary>
            Total pixels count in the processed image excluding black pixels.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.IsGrayscale">
      <summary>
            Value which specifies if the processed image was color or grayscale.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.IsBlackAndWhite">
      <summary>
            Is black and white image.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.PixelsCountBlack">
      <summary>
            Total black pixels count in the processed image.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.PixelsCountWhite">
      <summary>
            Total white pixels count in the processed image.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageStatistics.ICHistogram">
      <summary>
            Image Components image histogram object.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.ICHistogram.Values">
      <summary>
            Values of the histogram.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.ICHistogram.Mean">
      <summary>
            Mean value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.ICHistogram.StdDev">
      <summary>
            Standard deviation.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.ICHistogram.Median">
      <summary>
            Median value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.ICHistogram.Min">
      <summary>
            Minimum value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageStatistics.ICHistogram.Max">
      <summary>
            Maximum value.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageSavedOutputEventArgs">
      <summary>
            Image Components image saved output event args class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageSavedOutputEventArgs.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageSavedOutputEventArgs.OutputByteArray">
      <summary>
            Get/Set Output byte array.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageSavedOutputEventArgs.OutputAnnotations">
      <summary>
            Get/Set Output annotations file path.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageSavedOutputEventArgs.OutputFileName">
      <summary>
            Get/Set Output file name.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageSavedOutputEventArgs.OutputMemoryStream">
      <summary>
            Get/Set Output memory stream.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageSavedOutputEventArgs.PageCount">
      <summary>
            Get/Set Output page count.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageSavedOutputEventArgs.PagePosition">
      <summary>
            Get/Set Output page position.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageRequestedEventArgs">
      <summary>
            Image Components image requested event args class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageRequestedEventArgs.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageRequestedEventArgs.ImageByteArray">
      <summary>
            Get/Set Requested image byte array.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageRequestedEventArgs.ImageBitmap">
      <summary>
            Get/Set Requested image bitmap object.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageRequestedEventArgs.IsBlankPage">
      <summary>
            Get/Set Is requested page blank.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageRequestedEventArgs.IsRequestFinished">
      <summary>
            Get/Set Is requested finished.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICBarcodesResult">
      <summary>
            Image Components Barcode Result Class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodesResult.Text">
      <summary>
            Gets the barcode result text.
            </summary>
      <returns>Gets the barcode result text.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodesResult.Count">
      <summary>
            Gets the barcode character count.
            </summary>
      <returns>Gets the barcode character count.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodesResult.ZoneID">
      <summary>
            Get/Set Zone ID.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodesResult.PageIndex">
      <summary>
            Gets the Page index position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodesResult.BarcodeType">
      <summary>
            Gets the barcode type result.
            </summary>
      <returns>Gets the barcode type result.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodesResult.BarcodeOrientation">
      <summary>
            Get/Set Barcode orientation.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodesResult.BarcodePosition">
      <summary>
            Get/Set Barcode position.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICBarcodesResultCollection">
      <summary>
            Image Components Barcode Result Collection Class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodesResultCollection.Count">
      <summary>
            Gets the barcode results count.
            </summary>
      <returns>the barcode results count.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodesResultCollection.Item(System.Int32)">
      <summary>
            Gets result item index.
            </summary>
      <param name="Index">Index position.</param>
      <returns>Barcode result class.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICBarcodesResultCollection.GetEnumerator">
      <summary>
            Get collection enumerator.
            </summary>
      <returns>IEnumerator.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICBarcodeEncodeResult">
      <summary>
            Image Components Barcode Encode Result Class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodeEncodeResult.Status">
      <summary>
            Gets the barcode result status.
            </summary>
      <returns>Gets the barcode result status.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodeEncodeResult.ErrorDescription">
      <summary>
            Gets the barcode result error description.
            </summary>
      <returns>Gets the barcode result error description.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodeEncodeResult.BarcodeFilePath">
      <summary>
            Gets the barcode image file path.
            </summary>
      <returns>Gets the barcode image file path.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodeEncodeResult.BarcodeBitmap">
      <summary>
            Gets the barcode image bitmap.
            </summary>
      <returns>Gets the barcode image bitmap.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodeEncodeResult.BarcodeByteArray">
      <summary>
            Gets the barcode image byte array.
            </summary>
      <returns>Gets the barcode image byte array.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodeEncodeResult.BarcodeBase64">
      <summary>
            Gets the barcode image base 64 value.
            </summary>
      <returns>Gets the barcode image base 64 value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodeEncodeResult.BarcodeStream">
      <summary>
            Gets the barcode image stream.
            </summary>
      <returns>Gets the barcode image stream.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICScanEventArgs">
      <summary>
            Image Components Scan event args class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICScanEventArgs.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanEventArgs.Handled">
      <summary>
            Get/Set Handled value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanEventArgs.ScannedFilename">
      <summary>
            Get/Set Scanned filename.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanEventArgs.ScannedImage">
      <summary>
            Get/Set Scanned image.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanEventArgs.PagePosition">
      <summary>
            Get/Set Page position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanEventArgs.BarcodeResults">
      <summary>
            Get/Set Barcode read results.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanEventArgs.ScanEnded">
      <summary>
            Get/Set Scan process ended.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanEventArgs.ImageID">
      <summary>
            Get/Set Current file unique id.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICScanStartedEventArgs">
      <summary>
            Image Components Scan started event args class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICScanStartedEventArgs.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanStartedEventArgs.Handled">
      <summary>
            Get/Set Handled value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanStartedEventArgs.ScannedImage">
      <summary>
            Get/Set Scanned image.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanStartedEventArgs.CurrentFilename">
      <summary>
            Get/Set Current file name.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanStartedEventArgs.PageRemoved">
      <summary>
            Gets if the page was removed.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanStartedEventArgs.BarcodeResults">
      <summary>
            Get/Set Barcode read results.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanStartedEventArgs.ImageID">
      <summary>
            Get/Set Current file unique id.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICScanHandled">
      <summary>
            Image Components Scan handled class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanHandled.DiscardScan">
      <summary>
            Get/Set Discard scan.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanHandled.StopFeeder">
      <summary>
            Get/Set Stop feeder.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICScanHandled.ResetTransfer">
      <summary>
            Get/Set Reset transfer.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICSeparationSettings">
      <summary>
            Page separation settings class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSeparationSettings.BarcodeTypes">
      <summary>
            Gets or sets the barcode separation types.
            </summary>
      <value>Sets the barcode separation type.</value>
      <returns>Gets the barcode separation type.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSeparationSettings.BarcodeOrientations">
      <summary>
            Gets or sets the barcode orientations.
            </summary>
      <value>Sets the barcode orientations.</value>
      <returns>Gets the barcode orientations.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSeparationSettings.BarcodeSeparationValue">
      <summary>
            Gets or sets the barcode separation value.
            </summary>
      <value>Sets the barcode separation value.</value>
      <returns>Gets the barcode separation value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSeparationSettings.PageCountSeparationValue">
      <summary>
            Gets or sets the page count separation value.
            </summary>
      <value>Sets the page count separation value.</value>
      <returns>Gets the page count separation value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSeparationSettings.IsBarcodeInFirstPage">
      <summary>
            Gets or sets if the barcode is in the first page.
            </summary>
      <value>Sets if the barcode is in the first page.</value>
      <returns>Gets if the barcode is in the first page.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSeparationSettings.RemoveBarcodePage">
      <summary>
            Gets or sets the remove barcode page value.
            </summary>
      <value>Sets the remove barcode page value.</value>
      <returns>Gets the remove barcode page value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSeparationSettings.BlankPageTolerance">
      <summary>
            Gets or sets the blank page tolerance value.
            </summary>
      <value>Sets the blank page tolerance value.</value>
      <returns>Gets the blank page tolerance value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSeparationSettings.BlankPageMargin">
      <summary>
            Gets or sets the blank page margin value.
            </summary>
      <value>Sets the blank page margin value.</value>
      <returns>Gets the blank page margin value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSeparationSettings.BlankPageRemoveBorders">
      <summary>
            Gets or sets the blank page remove black margins value.
            </summary>
      <value>Sets the blank page remove black margins value.</value>
      <returns>Gets the blank page remove black margins value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSeparationSettings.BlankPageRemoveEmptyData">
      <summary>
            Gets or sets the blank page remove empty data value.
            </summary>
      <value>Sets the blank page remove empty data value.</value>
      <returns>Gets the blank page remove empty data value.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSeparationSettings.StopOnFirstResult">
      <summary>
            Get/Set Stop reading on first result.
            </summary>
      <value>Sets the stop reading on first result.</value>
      <returns>Gets the stop reading on first result.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSeparationSettings.EnableCheckDigit">
      <summary>
            Enabled or disables the barcode check digit.
            </summary>
      <value>Sets the value of the barcode check digit.</value>
      <returns>Gets the value of the barcode check digit.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSeparationSettings.ImageBarcodeSearchMode">
      <summary>
            Gets or sets the barcode search mode.
            </summary>
      <value>Sets the barcode search mode.</value>
      <returns>Gets the barcode search mode.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICAnnotationObjects">
      <summary>
            Image Components Annotation Objects class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObjects.HorizontalResolution">
      <summary>
            Get or sets the draw horizontal resolution.
            </summary>
      <value>Sets the draw horizontal resolution.</value>
      <returns>Gets the draw horizontal resolution.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObjects.VerticalResolution">
      <summary>
            Get or sets the draw vertical resolution.
            </summary>
      <value>Sets the draw vertical resolution.</value>
      <returns>Gets the draw vertical resolution.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObjects.PageIndex">
      <summary>
            Gets the annotations objects collection page index.
            </summary>
      <returns>Gets the annotations objects collection page index.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObjects.Item(System.Int32)">
      <summary>
            Gets or set the annotation object item by index position.
            </summary>
      <param name="index">Index annotation object position.</param>
      <value>Sets the annotation object item by index position.</value>
      <returns>Gets the annotation object item by index position.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObjects.Items">
      <summary>
            Gets or sets the annotation objects collection list.
            </summary>
      <value>Sets the annotation objects collection list.</value>
      <returns>Gets the annotation objects collection list.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICAnnotationObjects.Contains(System.String)">
      <summary>
            Contains annotation object.
            </summary>
      <param name="UID">Annotation unique identifier.</param>
      <returns>Contains or not.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICAnnotationObject">
      <summary>
            Image Components Annotation Object class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICAnnotationObject.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObject.PageIndex">
      <summary>
            Gets the annotations objects collection page index.
            </summary>
      <returns>Gets the annotations objects collection page index.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObject.AnnotationObjectType">
      <summary>
            Gets the annotation object type.
            </summary>
      <returns>Gets the annotation object type.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObject.X">
      <summary>
            Gets or sets the annotation X position.
            </summary>
      <value>Sets the annotation X position.</value>
      <returns>Gets the annotation X position.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObject.Y">
      <summary>
            Gets or sets the annotation Y position.
            </summary>
      <value>Sets the annotation Y position.</value>
      <returns>Gets the annotation Y position.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObject.Height">
      <summary>
            Gets or sets the annotation height size.
            </summary>
      <value>Sets the annotation height size.</value>
      <returns>Gets the annotation height size.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObject.Width">
      <summary>
            Gets or sets the annotation width size.
            </summary>
      <value>Sets the annotation width size.</value>
      <returns>Gets the annotation width size.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObject.ID">
      <summary>
            Gets or sets the annotation identification.
            </summary>
      <value>Sets the annotation identification.</value>
      <returns>Gets the annotation identification.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObject.UID">
      <summary>
            Gets the annotation unique identifier.
            </summary>
      <returns>Gets the annotation unique identifier.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObject.IsVisible">
      <summary>
            Get or sets the annotation visibility.
            </summary>
      <value>Sets the annotation visibility.</value>
      <returns>Gets the annotation visibility.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObject.IsProtected">
      <summary>
            Get or sets the annotation protection.
            </summary>
      <value>Sets the annotation protection.</value>
      <returns>Gets the annotation protection.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObject.Tag">
      <summary>
            Get or sets the annotation tag.
            </summary>
      <value>Sets the annotation tag.</value>
      <returns>Gets the annotation tag.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICAnnotationObject.ToolTip">
      <summary>
            Get or sets the annotation tooltip.
            </summary>
      <value>Sets the annotation tooltip.</value>
      <returns>Gets the annotation tooltip.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICTextAnnotation">
      <summary>
            Image Components Text Annotation class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICTextAnnotation.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICTextAnnotation.LineWidth">
      <summary>
            Get or sets the annotation border line width.
            </summary>
      <value>Sets the annotation border line width.</value>
      <returns>Gets the annotation border line width.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICTextAnnotation.LineColor">
      <summary>
            Get or sets the annotation border line color.
            </summary>
      <value>Sets the annotation border line color.</value>
      <returns>Gets the annotation border line color.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICTextAnnotation.Fill">
      <summary>
            Get or sets the annotation has back color.
            </summary>
      <value>Sets the annotation has back color.</value>
      <returns>Gets the annotation has back color.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICTextAnnotation.FillColor">
      <summary>
            Get or sets the annotation fill color.
            </summary>
      <value>Sets the annotation fill color.</value>
      <returns>Gets the annotation fill color.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICTextAnnotation.FillTransparency">
      <summary>
            Get or sets the annotation fill transparency.
            </summary>
      <value>Sets the annotation fill transparency.</value>
      <returns>Gets the annotation fill transparency.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICTextAnnotation.TextFont">
      <summary>
            Get or sets the annotation text font.
            </summary>
      <value>Sets the annotation text font.</value>
      <returns>Gets the annotation text font.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICTextAnnotation.Text">
      <summary>
            Get or sets the annotation text.
            </summary>
      <value>Sets the annotation text.</value>
      <returns>Gets the annotation text.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICTextAnnotation.TextColor">
      <summary>
            Get or sets the annotation text color.
            </summary>
      <value>Sets the annotation text color.</value>
      <returns>Gets the annotation text color.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICStampAnnotation">
      <summary>
            Image Components Stamp Annotation class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICStampAnnotation.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICStampAnnotation.TextFont">
      <summary>
            Get or sets the annotation text font.
            </summary>
      <value>Sets the annotation text font.</value>
      <returns>Gets the annotation text font.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICStampAnnotation.Text">
      <summary>
            Get or sets the annotation text.
            </summary>
      <value>Sets the annotation text.</value>
      <returns>Gets the annotation text.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICStampAnnotation.TextAngle">
      <summary>
            Get or sets the annotation text angle.
            </summary>
      <value>Sets the annotation text angle.</value>
      <returns>Gets the annotation text angle.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICStampAnnotation.TextColor">
      <summary>
            Get or sets the annotation text color.
            </summary>
      <value>Sets the annotation text color.</value>
      <returns>Gets the annotation text color.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICShapeAnnotation">
      <summary>
            Image Components Shape Annotation class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICShapeAnnotation.LineWidth">
      <summary>
            Get or sets the annotation border line width.
            </summary>
      <value>Sets the annotation border line width.</value>
      <returns>Gets the annotation border line width.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICShapeAnnotation.LineColor">
      <summary>
            Get or sets the annotation border line color.
            </summary>
      <value>Sets the annotation border line color.</value>
      <returns>Gets the annotation border line color.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICShapeAnnotation.Fill">
      <summary>
            Get or sets the annotation has back color.
            </summary>
      <value>Sets the annotation has back color.</value>
      <returns>Gets the annotation has back color.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICShapeAnnotation.FillColor">
      <summary>
            Get or sets the annotation fill color.
            </summary>
      <value>Sets the annotation fill color.</value>
      <returns>Gets the annotation fill color.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICShapeAnnotation.FillTransparency">
      <summary>
            Get or sets the annotation fill transparency.
            </summary>
      <value>Sets the annotation fill transparency.</value>
      <returns>Gets the annotation fill transparency.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICShapeAnnotation.Data">
      <summary>
            Gets or sets the path data.
            </summary>
      <value>Sets the path data.</value>
      <returns>Get the path data.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICLineAnnotation">
      <summary>
            Image Components Line Annotation class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICLineAnnotation.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICArrowAnnotation">
      <summary>
            Image Components Arrow Annotation class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICArrowAnnotation.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICHighlightAnnotation">
      <summary>
            Image Components Highlight Annotation class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICHighlightAnnotation.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICHideAnnotation">
      <summary>
            Image Components Hide Annotation class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICHideAnnotation.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICEllipseAnnotation">
      <summary>
            Image Components Ellipse Annotation class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICEllipseAnnotation.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICLineSegmentsAnnotation">
      <summary>
            Image Components Line Segments Annotation class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICLineSegmentsAnnotation.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageAnnotation">
      <summary>
            Image Components Image Annotation class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageAnnotation.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICEmbeddedImageAnnotation">
      <summary>
            Image Components Embedded Image Annotation class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICEmbeddedImageAnnotation.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICEmbeddedImageAnnotation.EmbeddedBitmap">
      <summary>
            Gets or sets the annotation embedded image bitmap.
            </summary>
      <returns>Image annotation bitmap object.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICEmbeddedImageAnnotation.IsTransparent">
      <summary>
            Get or sets the image annotation is transparent.
            </summary>
      <value>Sets the image annotation is transparent.</value>
      <returns>Gets the image annotation is transparent.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICZoneAnnotation">
      <summary>
            Image Components Zone Annotation class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICZoneAnnotation.ZoneID">
      <summary>
            Get or sets the annotation zone ID.
            </summary>
      <value>Sets the annotation zone ID.</value>
      <returns>Gets the annotation zone ID.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICZoneAnnotation.LineWidth">
      <summary>
            Get or sets the annotation border line width.
            </summary>
      <value>Sets the annotation border line width.</value>
      <returns>Gets the annotation border line width.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICZoneAnnotation.LineColor">
      <summary>
            Get or sets the annotation border line color.
            </summary>
      <value>Sets the annotation border line color.</value>
      <returns>Gets the annotation border line color.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICZoneAnnotation.Fill">
      <summary>
            Get or sets the annotation has back color.
            </summary>
      <value>Sets the annotation has back color.</value>
      <returns>Gets the annotation has back color.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICZoneAnnotation.FillColor">
      <summary>
            Get or sets the annotation fill color.
            </summary>
      <value>Sets the annotation fill color.</value>
      <returns>Gets the annotation fill color.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICZoneAnnotation.FillTransparency">
      <summary>
            Get or sets the annotation fill transparency.
            </summary>
      <value>Sets the annotation fill transparency.</value>
      <returns>Gets the annotation fill transparency.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICOCRZoneAnnotation">
      <summary>
            Image Components OCR Zone Annotation class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICOCRZoneAnnotation.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICOCRZoneAnnotation.OCRResult">
      <summary>
            Get or sets the annotation OCR result.
            </summary>
      <value>Sets the annotation OCR result.</value>
      <returns>Get the annotation OCR result.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICOCRZoneAnnotation.ApplyAnnotationOCRSettings">
      <summary>
            Get or sets the application of the configured annotation OCR settings.
            </summary>
      <value>Sets the application of the configured annotation OCR settings.</value>
      <returns>Get the application of the configured annotation OCR settings.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICOCRZoneAnnotation.AppendData">
      <summary>
            Get or sets the append annotation OCR result.
            </summary>
      <value>Sets the append annotation OCR result.</value>
      <returns>Get the append annotation OCR result.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICOCRZoneAnnotation.OCRLanguage">
      <summary>
            Get or sets the annotation OCR language.
            </summary>
      <value>Sets the annotation OCR language.</value>
      <returns>Get the annotation OCR language.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICOCRZoneAnnotation.OCRType">
      <summary>
            Get or sets the annotation OCR type.
            </summary>
      <value>Sets the annotation OCR type.</value>
      <returns>Get the annotation OCR type.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICOCRZoneAnnotation.WhiteList">
      <summary>
            Gets or sets the OCR result white characters list.
            </summary>
      <value>Sets the OCR result white characters list.</value>
      <returns>Get the OCR result white characters list.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICOCRZoneAnnotation.BlackList">
      <summary>
            Gets or sets the OCR result black characters list.
            </summary>
      <value>Sets the OCR result black characters list.</value>
      <returns>Get the OCR result black characters list.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICBarcodeZoneAnnotation">
      <summary>
            Image Components Barcode Zone Annotation class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICBarcodeZoneAnnotation.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodeZoneAnnotation.BarcodeResult">
      <summary>
            Get or sets the annotation Barcode result.
            </summary>
      <value>Sets the annotation Barcode result.</value>
      <returns>Get the annotation Barcode result.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodeZoneAnnotation.ApplyAnnotationBarcodeSettings">
      <summary>
            Get or sets the application of the configured annotation Barcode settings.
            </summary>
      <value>Sets the application of the configured annotation Barcode settings.</value>
      <returns>Get the application of the configured annotation Barcode settings.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodeZoneAnnotation.BarcodeType">
      <summary>
            Get or sets the annotation Barcode type.
            </summary>
      <value>Sets the annotation Barcode type.</value>
      <returns>Get the annotation Barcode type.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodeZoneAnnotation.BarcodeOrientation">
      <summary>
            Get or sets the annotation Barcode orientation.
            </summary>
      <value>Sets the annotation Barcode orientation.</value>
      <returns>Get the annotation Barcode orientation.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodeZoneAnnotation.StopOnFirstResult">
      <summary>
            Get or sets the stop on first result.
            </summary>
      <value>Sets the stop on first result.</value>
      <returns>Get the stop on first result.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodeZoneAnnotation.EnableCheckDigit">
      <summary>
            Enables or disables the barcode check digit.
            </summary>
      <value>Sets the value of the barcode check digit.</value>
      <returns>Gets the value of the barcode check digit.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICBarcodeZoneAnnotation.AppendData">
      <summary>
            Get or sets the append annotation Barcode result.
            </summary>
      <value>Sets the append annotation Barcode result.</value>
      <returns>Get the append annotation Barcode result.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICZoomToZoneAnnotation">
      <summary>
            Image Components Zoom To Zone Annotation class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICZoomToZoneAnnotation.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICColor">
      <summary>
            Image Components color class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICColor.A">
      <summary>
            Get/Set Alpha component value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICColor.R">
      <summary>
            Get/Set Red component value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICColor.G">
      <summary>
            Get/Set Green component value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICColor.B">
      <summary>
            Get/Set Blue component value.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICColor.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICColor.#ctor(System.Drawing.Color)">
      <summary>
            Constructor.
            </summary>
      <param name="color">Drawing.Color value.</param>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICColor.ToColor">
      <summary>
            To Drawing.Color value.
            </summary>
      <returns>Drawing.Color value.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICColor.FromColor(System.Drawing.Color)">
      <summary>
            From Drawing.Color value.
            </summary>
      <param name="color">Drawing.Color value.</param>
      <returns>Annotations.Color object.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICColor.ToHex">
      <summary>
            Color to Hex.
            </summary>
      <returns>Color hex value.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICColor.FromHex(System.String)">
      <summary>
            Hex to color.
            </summary>
      <param name="HexValue">Hex string value.</param>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICFont">
      <summary>
            Image Components Font class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICFont.FontFamily">
      <summary>
            Get or sets the font family name.
            </summary>
      <value>Sets the font family name.</value>
      <returns>Gets the font family name.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICFont.IsBold">
      <summary>
            Get or sets the font is bold.
            </summary>
      <value>Sets the font is bold.</value>
      <returns>Gets the font is bold.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICFont.IsItalic">
      <summary>
            Get or sets the font is italic.
            </summary>
      <value>Sets the font is italic.</value>
      <returns>Gets the font is italic.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICFont.IsStrikeout">
      <summary>
            Get or sets the font is strikeout.
            </summary>
      <value>Sets the font is strikeout.</value>
      <returns>Gets the font is strikeout.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICFont.IsUnderline">
      <summary>
            Get or sets the font is underline.
            </summary>
      <value>Sets the font is underline.</value>
      <returns>Gets the font is underline.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICFont.FontSize">
      <summary>
            Get or sets the font size.
            </summary>
      <value>Sets the font size.</value>
      <returns>Gets the font size.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICPathValues">
      <summary>
            Image Components Path Values class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPathValues.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPathValues.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructor.
            </summary>
      <param name="x1">X1 Position.</param>
      <param name="y1">Y1 Position.</param>
      <param name="x2">X2 Position.</param>
      <param name="y2">Y2 Position.</param>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPathValues.X1">
      <summary>
            Get/Set X1.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPathValues.X2">
      <summary>
            Get/Set X2.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPathValues.Y1">
      <summary>
            Get/Set Y1.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPathValues.Y2">
      <summary>
            Get/Set Y2.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ObjectsType">
      <summary>
            Draw annotation type enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ObjectsType.All">
      <summary>
            All annotations type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ObjectsType.Annotation">
      <summary>
            Non zone annotations type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ObjectsType.AnnotationZones">
      <summary>
            Zone annotations type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.AnnotationType">
      <summary>
            Annotation type enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.AnnotationType.None">
      <summary>
            None Annotation type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.AnnotationType.ArrowAnnotation">
      <summary>
            Arrow Annotation type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.AnnotationType.BarcodeZoneAnnotation">
      <summary>
            Barcode Zone Annotation type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.AnnotationType.EllipseAnnotation">
      <summary>
            Ellipse Annotation type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.AnnotationType.EmbeddedImageAnnotation">
      <summary>
            Embedded Image Annotation type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.AnnotationType.HideAnnotation">
      <summary>
            Hide Annotation type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.AnnotationType.HighlightAnnotation">
      <summary>
            Highlight Annotation type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.AnnotationType.LineAnnotation">
      <summary>
            Line Annotation type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.AnnotationType.OCRZoneAnnotation">
      <summary>
            OCR Zone Annotation type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.AnnotationType.StampAnnotation">
      <summary>
            Stamp Annotation type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.AnnotationType.TextAnnotation">
      <summary>
            Text Annotation type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.AnnotationType.ZoomToZoneAnnotation">
      <summary>
            Zoom To Zone Annotation type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.AnnotationType.FreeDrawAnnotation">
      <summary>
            [NOT IMPLEMENTED] Free Draw Annotation type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.AnnotationType.LineSegmentsAnnotation">
      <summary>
            Line Segments Annotation type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICKeywordResultType">
      <summary>
            Annotation keyword result type enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICKeywordResultType.None">
      <summary>
            None result type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICKeywordResultType.Characters">
      <summary>
            Characters result type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICKeywordResultType.Word">
      <summary>
            Word result type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICKeywordResultType.Line">
      <summary>
            Line result type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageBarcodeType">
      <summary>
            Image Barcode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeType.AUTO">
      <summary>
            None or auto barcode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeType.CODE11">
      <summary>
            Code11 barcode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeType.CODE39EXT">
      <summary>
            Code39 extended barcode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeType.CODABAR">
      <summary>
            CODABAR 1D barcode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeType.CODE39">
      <summary>
            CODE 39 1D barcode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeType.CODE93">
      <summary>
            CODE 93 1D barcode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeType.CODE128">
      <summary>
            CODE 128 1D barcode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeType.EAN8">
      <summary>
            EAN-8 1D barcode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeType.EAN13">
      <summary>
            EAN-13 1D barcode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeType.ILV2OF5">
      <summary>
            Interleaved 2 of 5 1D barcode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeType.PDF417">
      <summary>
            PDF417 barcode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeType.QRCODE">
      <summary>
            QR CODE 2D barcode barcode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeType.UPCA">
      <summary>
            UPC-A 1D barcode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeType.UPCE">
      <summary>
            UPC-E 1D barcode type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageBarcodeOrientation">
      <summary>
            Image Barcode orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeOrientation.Auto">
      <summary>
            Auto barcode orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeOrientation.LeftToRight">
      <summary>
            Left to right barcode orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeOrientation.TopToBottom">
      <summary>
            Top to bottom barcode orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeOrientation.RightToLeft">
      <summary>
            Right to left barcode orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeOrientation.BottomToTop">
      <summary>
            Bottom to top barcode orientation.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageBarcodePageType">
      <summary>
            Image Barcode page type enumerations.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodePageType.AllPages">
      <summary>
            All pages Barcode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodePageType.SelectedPage">
      <summary>
            Selected page Barcode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodePageType.PageSelection">
      <summary>
            Page selection Barcode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodePageType.ImageBarcodeZones">
      <summary>
            Image Barcode Zones.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageBarcodeSearchMode">
      <summary>
            Image Barcode Search mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeSearchMode.Normal">
      <summary>
            Normal search mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeSearchMode.SpeedUp">
      <summary>
            Speed search mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeSearchMode.Accuracy">
      <summary>
            Accuracy search mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBarcodeSearchMode.TwoPassAccuracy">
      <summary>
            Two Pass accuracy search mode.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageBitConversion">
      <summary>
            Image bit conversion bits per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBitConversion.Convert_1Bit">
      <summary>
            Bit conversion to 1 bit per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBitConversion.Convert_4Bit">
      <summary>
            Bit conversion to 4 bits per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBitConversion.Convert_8Bit">
      <summary>
            Bit conversion to 8 bits per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBitConversion.Convert_16Bit">
      <summary>
            Bit conversion to 16 bits per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBitConversion.Convert_24Bit">
      <summary>
            Bit conversion to 24 bits per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBitConversion.Convert_32Bit">
      <summary>
            Bit conversion to 32 bits per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBitConversion.Convert_32BitArgb">
      <summary>
            Bit conversion to 32 bits Argb per pixel.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageColorConversion">
      <summary>
            Image color conversion
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageColorConversion.Convert_1BPP">
      <summary>
            Color conversion to 1 bit per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageColorConversion.Convert_4BPP">
      <summary>
            Color conversion to 4 bit per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageColorConversion.Convert_8BPP">
      <summary>
            Color conversion to 8 bit per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageColorConversion.Convert_16BPP">
      <summary>
            Color conversion to 16 bit per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageColorConversion.Convert_24BPP">
      <summary>
            Color conversion to 24 bit per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageColorConversion.Convert_32BPP">
      <summary>
            Color conversion to 32 bit per pixel.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageDisplayQuality">
      <summary>
            Image display quality.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDisplayQuality.Default">
      <summary>
            Default image display quality.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDisplayQuality.Low">
      <summary>
            Low image display quality.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDisplayQuality.High">
      <summary>
            High image display quality.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDisplayQuality.Bilinear">
      <summary>
            Bilinear image display quality.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDisplayQuality.Bicubic">
      <summary>
            Bicubic image display quality.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDisplayQuality.NearestNeighbor">
      <summary>
            NearestNeighbor image display quality.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDisplayQuality.HighQualityBilinear">
      <summary>
            HighQualityBilinear image display quality.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDisplayQuality.HighQualityBicubic">
      <summary>
            HighQualityBicubic image display quality.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageSavePageOptions">
      <summary>
            Image Save Page Options
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSavePageOptions.Page">
      <summary>
            A specific page.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSavePageOptions.Range">
      <summary>
            A range of pages.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSavePageOptions.All">
      <summary>
            All pages.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageDPISize">
      <summary>
            Image dpi size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDPISize.NONE">
      <summary>
            None dpi image size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDPISize.DPI_72">
      <summary>
            72 dpi image size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDPISize.DPI_96">
      <summary>
            96 dpi image size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDPISize.DPI_100">
      <summary>
            100 dpi image size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDPISize.DPI_150">
      <summary>
            150 dpi image size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDPISize.DPI_200">
      <summary>
            200 dpi image size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDPISize.DPI_300">
      <summary>
            300 dpi image size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDPISize.DPI_600">
      <summary>
            600 dpi image size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDPISize.DPI_1200">
      <summary>
            1200 dpi image size.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageFit">
      <summary>
            Display image fit.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFit.None">
      <summary>
            None fit image display.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFit.BestFit">
      <summary>
            Best fit image display.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFit.FitToWidth">
      <summary>
            Fit to width image display.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFit.FitToHeight">
      <summary>
            Fit to height image display.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFit.OriginalSize">
      <summary>
            Original size image display.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFit.ParentWidth">
      <summary>
            Fit to parent width image display (WPF or Silverlight use only).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFit.ParentHeight">
      <summary>
            Fit to parent height image display (WPF or Silverlight use only).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFit.Auto">
      <summary>
            Best fit image auto display.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICSelectionType">
      <summary>
            Selection type enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICSelectionType.None">
      <summary>
            No selection.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICSelectionType.Selection">
      <summary>
            No function selection.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICSelectionType.ZoomSelection">
      <summary>
            Zoom selection.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICSelectionType.ClearSelection">
      <summary>
            Clear selection.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICSelectionType.CropSelection">
      <summary>
            Crop selection.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICSelectionType.HandPan">
      <summary>
            Hand pan selection.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICSelectionType.MagnifyingGlass">
      <summary>
            Magnifying glass selection.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICSelectionType.AnnotationSelection">
      <summary>
            Annotation selection.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICSelectionType.TextSelection">
      <summary>
            Text selection.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICSelectionType.OCRSelection">
      <summary>
            OCR selection.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageOCRPageType">
      <summary>
            Image OCR page type enumerations.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageType.AllPages">
      <summary>
            All pages OCR.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageType.SelectedPage">
      <summary>
            Selected page OCR.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageType.PageSelection">
      <summary>
            Page selection OCR.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageType.ImageZoneOCR">
      <summary>
            Image Zone OCR.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImagePrintOptions">
      <summary>
            Image print options.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePrintOptions.ActualSize">
      <summary>
            Actual size print options.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePrintOptions.FitToPage">
      <summary>
            Fit to page print options.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImagePrintPageOptions">
      <summary>
            Image print page options.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePrintPageOptions.Page">
      <summary>
            A specific page.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePrintPageOptions.Range">
      <summary>
            A range of pages.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePrintPageOptions.All">
      <summary>
            All pages.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePrintPageOptions.Selected">
      <summary>
            Selected page.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImagePrintOrientation">
      <summary>
            Image print orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePrintOrientation.Automatic">
      <summary>
            Automatic print orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePrintOrientation.Normal">
      <summary>
            Normal print orientation.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageSaveOutputType">
      <summary>
            Image save output type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSaveOutputType.FileSystem">
      <summary>
            File system output type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSaveOutputType.ByteArray">
      <summary>
            Byte array output type
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSaveOutputType.MemoryStream">
      <summary>
            Memory stream output type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageBitFormat">
      <summary>
            Image bit conversion bits per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBitFormat.PixelFormat_1Bit">
      <summary>
            Bit conversion to 1 bit per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBitFormat.PixelFormat_4Bit">
      <summary>
            Bit conversion to 4 bits per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBitFormat.PixelFormat_8Bit">
      <summary>
            Bit conversion to 8 bits per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBitFormat.PixelFormat_16Bit">
      <summary>
            Bit conversion to 16 bits per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBitFormat.PixelFormat_24Bit">
      <summary>
            Bit conversion to 24 bits per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBitFormat.PixelFormat_32Bit">
      <summary>
            Bit conversion to 32 bits per pixel.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageColorDepth">
      <summary>
            Image color depth.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageColorDepth.ColorDepth_1BPP">
      <summary>
            Color conversion to 1 bit per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageColorDepth.ColorDepth_4BPP">
      <summary>
            Color conversion to 4 bit per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageColorDepth.ColorDepth_8BPP">
      <summary>
            Color conversion to 8 bit per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageColorDepth.ColorDepth_16BPP">
      <summary>
            Color conversion to 16 bit per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageColorDepth.ColorDepth_24BPP">
      <summary>
            Color conversion to 24 bit per pixel.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageColorDepth.ColorDepth_32BPP">
      <summary>
            Color conversion to 32 bit per pixel.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICColorBlendType">
      <summary>
            Color blend type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICColorBlendType.Add">
      <summary>
            Add blend type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICColorBlendType.Subtract">
      <summary>
            Subtract blend type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICColorBlendType.Average">
      <summary>
            Average blend type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICColorBlendType.DescendingOrder">
      <summary>
            Descending Order blend type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICColorBlendType.AscendingOrder">
      <summary>
            Ascending Order blend type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICMorphologyType">
      <summary>
            Morphology type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICMorphologyType.Dilation">
      <summary>
            Dilation morphology type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICMorphologyType.Erosion">
      <summary>
            Erosion morphology type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageFilterType">
      <summary>
            Image Filter type Options.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Invert">
      <summary>
            Invert filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.GrayScale">
      <summary>
            GrayScale filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Brightness">
      <summary>
            Brightness filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Contrast">
      <summary>
            Contrast filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Gamma">
      <summary>
            Gamma filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Color">
      <summary>
            Color filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Smooth">
      <summary>
            Smooth filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.GaussianBlur">
      <summary>
            GaussianBlur filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.MeanRemoval">
      <summary>
            MeanRemoval filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Sharpen">
      <summary>
            Sharpen filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.EmbossLaplacian">
      <summary>
            EmbossLaplacian filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.EdgeDetectQuick">
      <summary>
            EdgeDetectQuick filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.EdgeDetectConvolution">
      <summary>
            EdgeDetectConvolution filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.EdgeDetectHorizontal">
      <summary>
            EdgeDetectHorizontal filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.EdgeDetectVertical">
      <summary>
            EdgeDetectVertical filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.EdgeDetectHomogeneity">
      <summary>
            EdgeDetectHomogeneity filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.EdgeDetectDifference">
      <summary>
            EdgeDetectDifference filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.EdgeEnhance">
      <summary>
            EdgeEnhance filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.OffsetFilterAbs">
      <summary>
            OffsetFilterAbs filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.OffsetFilter">
      <summary>
            OffsetFilter filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.OffsetFilterAntiAlias">
      <summary>
            OffsetFilterAntiAlias filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Flip">
      <summary>
            Flip filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.RandomJitter">
      <summary>
            RandomJitter filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Swirl">
      <summary>
            Swirl filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Sphere">
      <summary>
            Sphere filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.TimeWarp">
      <summary>
            TimeWarp filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Moire">
      <summary>
            Moire filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Water">
      <summary>
            Water filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Pixelate">
      <summary>
            Pixelate filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Median">
      <summary>
            Median filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.BlackAndWhite">
      <summary>
            Black and White filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.BorderRemoval">
      <summary>
            Border removal filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.AutoCrop">
      <summary>
            Auto crop image filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Deskew">
      <summary>
            Deskew filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.CharImprovement">
      <summary>
            Char improvement filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.FloydSteinbergDithering">
      <summary>
            Floyd Steinberg Dithering filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.OrderedDithering">
      <summary>
            Ordered Dithering filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.BayerDithering">
      <summary>
            Bayer Dithering filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Despeckle">
      <summary>
            Despeckle filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.AutoThreshold">
      <summary>
            Automatic threshold.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Cartoon">
      <summary>
            Cartoon filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Crop">
      <summary>
            Crop filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.OpenMorphology">
      <summary>
            Open Morphology filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.CloseMorphology">
      <summary>
            Close Morphology filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.DilateAndErode">
      <summary>
            Dilate and Erode filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.HolePunchRemoval">
      <summary>
            Hole punch removal filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.OilPaint">
      <summary>
            Oil paint filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFilterType.Rotation">
      <summary>
            Rotation filter.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageDrawingType">
      <summary>
            Image drawing type Options.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDrawingType.DrawLine">
      <summary>
            Draw line.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDrawingType.DrawRectangle">
      <summary>
            Draw rectangle.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageDataAccessType">
      <summary>
            Image database access types.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDataAccessType.MSSQL">
      <summary>
            Microsoft SQL Server.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDataAccessType.MySQL">
      <summary>
            MySQL Server.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageDataAccessType.SQLite">
      <summary>
            SQLite server.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.PDFPermissionType">
      <summary>
            PDF permission types enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.PDFPermissionType.Default">
      <summary>
            No permissions type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.PDFPermissionType.AllowModifyContents">
      <summary>
            Allow modify contents permission type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.PDFPermissionType.AllowCopy">
      <summary>
            Allow copy permission type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.PDFPermissionType.AllowPrinting">
      <summary>
            Allow printing permission type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.PDFPermissionType.AllowModalLowCopy">
      <summary>
            Allow modal low copy permission type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.PDFPermissionType.AllowModifyAnnotations">
      <summary>
            Allow modify annotations permission type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.PDFPermissionType.AllowFillIn">
      <summary>
            Allow fill in permission type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.PDFPermissionType.AllowScreenReaders">
      <summary>
            Allow screen readers permission type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.PDFPermissionType.AllowAssembly">
      <summary>
            Allow assembly permission type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.PDFPermissionType.AllowDegradedPrinting">
      <summary>
            Allow degraded printing permission type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageRotationTypes">
      <summary>
            Image rotation types.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageRotationTypes.None">
      <summary>
            None image rotation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageRotationTypes.Left">
      <summary>
            Left image rotation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageRotationTypes.Right">
      <summary>
            Right image rotation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageRotationTypes.Flip">
      <summary>
            Flip image rotation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageRotationTypes.Mirror">
      <summary>
            Mirror image rotation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageRotationTypes.Auto">
      <summary>
            Auto image rotation.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageBlockList">
      <summary>
            Image Components image block list class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockList.Count">
      <summary>
            Gets the block items count.
            </summary>
      <returns>The block items count.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockList.Item(System.Int32)">
      <summary>
            Gets block item index.
            </summary>
      <param name="Index">Index position.</param>
      <returns>block item object.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockList.ICImageBlockItems">
      <summary>
            Get/Set ICImageBlockItem collection.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockList.IsOCRSource">
      <summary>
            Get/Set Is source from OCR.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockList.PageIndex">
      <summary>
            Get/Set Page index position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockList.ID">
      <summary>
            Get/Set Block list ID.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageBlockList.Add(ImageComponents.Core.Imaging.ICImageBlockItem)">
      <summary>
            Add block item.
            </summary>
      <param name="BlockItem">Block item.</param>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageBlockList.AddRange(ImageComponents.Core.Imaging.ICImageBlockList)">
      <summary>
            Add range items.
            </summary>
      <param name="BlockList">Block list collection.</param>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageBlockList.Clear">
      <summary>
            Clear block list items.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageBlockList.GetEnumerator">
      <summary>
            Get collection enumerator.
            </summary>
      <returns>IEnumerator.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageBlockItem">
      <summary>
            Image Components image block item class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockItem.X">
      <summary>
            Get/Set Block X position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockItem.Y">
      <summary>
            Get/Set Block Y position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockItem.Width">
      <summary>
            Get/Set Block width size.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockItem.Height">
      <summary>
            Get/Set Block height size.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockItem.Top">
      <summary>
            Get/Set Block top position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockItem.Left">
      <summary>
            Get/Set Block left position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockItem.Right">
      <summary>
            Get/Set Block right position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockItem.Bottom">
      <summary>
            Get/Set Block bottom position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockItem.Tag">
      <summary>
            Get/Set Block item tag.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageBlockItem.ImageParagraphList">
      <summary>
            Get/Set Image paragraph collection.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageParagraphList">
      <summary>
            Image Components image paragraph list class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphList.Count">
      <summary>
            Gets the paragraph items count.
            </summary>
      <returns>The paragraph items count.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphList.Item(System.Int32)">
      <summary>
            Gets paragraph item index.
            </summary>
      <param name="Index">Index position.</param>
      <returns>paragraph item object.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphList.ICImageParagraphItems">
      <summary>
            Get/Set ICImageParagraphItem collection.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphList.IsOCRSource">
      <summary>
            Get/Set Is source from OCR.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphList.PageIndex">
      <summary>
            Get/Set Page index position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphList.ID">
      <summary>
            Get/Set Paragraph list ID.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageParagraphList.Add(ImageComponents.Core.Imaging.ICImageParagraphItem)">
      <summary>
            Add paragraph item.
            </summary>
      <param name="ParagraphItem">Paragraph item.</param>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageParagraphList.AddRange(ImageComponents.Core.Imaging.ICImageParagraphList)">
      <summary>
            Add range items.
            </summary>
      <param name="ParagraphList">Paragraph list collection.</param>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageParagraphList.Clear">
      <summary>
            Clear paragraph list items.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageParagraphList.GetEnumerator">
      <summary>
            Get collection enumerator.
            </summary>
      <returns>IEnumerator.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageParagraphItem">
      <summary>
            Image Components image paragraph item class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphItem.X">
      <summary>
            Get/Set Paragraph X position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphItem.Y">
      <summary>
            Get/Set Paragraph Y position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphItem.Width">
      <summary>
            Get/Set Paragraph width size.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphItem.Height">
      <summary>
            Get/Set Paragraph height size.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphItem.Top">
      <summary>
            Get/Set Paragraph top position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphItem.Left">
      <summary>
            Get/Set Paragraph left position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphItem.Right">
      <summary>
            Get/Set Paragraph right position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphItem.Bottom">
      <summary>
            Get/Set Paragraph bottom position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphItem.Tag">
      <summary>
            Get/Set Paragraph item tag.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageParagraphItem.ImageLineList">
      <summary>
            Get/Set Image line collection.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageLineList">
      <summary>
            Image Components image line list class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineList.Count">
      <summary>
            Gets the line items count.
            </summary>
      <returns>The line items count.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineList.Item(System.Int32)">
      <summary>
            Gets line item index.
            </summary>
      <param name="Index">Index position.</param>
      <returns>line item object.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineList.ICImageLineItems">
      <summary>
            Get/Set ICImageLineItem collection.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineList.IsOCRSource">
      <summary>
            Get/Set Is source from OCR.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineList.PageIndex">
      <summary>
            Get/Set Page index position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineList.ID">
      <summary>
            Get/Set Line list ID.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageLineList.Add(ImageComponents.Core.Imaging.ICImageLineItem)">
      <summary>
            Add line item.
            </summary>
      <param name="LineItem">Line item.</param>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageLineList.AddRange(ImageComponents.Core.Imaging.ICImageLineList)">
      <summary>
            Add range items.
            </summary>
      <param name="LineList">Line list collection.</param>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageLineList.Clear">
      <summary>
            Clear line list items.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageLineList.GetEnumerator">
      <summary>
            Get collection enumerator.
            </summary>
      <returns>IEnumerator.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageLineItem">
      <summary>
            Image Components image line item class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineItem.X">
      <summary>
            Get/Set Line X position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineItem.Y">
      <summary>
            Get/Set Line Y position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineItem.Width">
      <summary>
            Get/Set Line width size.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineItem.Height">
      <summary>
            Get/Set Line height size.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineItem.Top">
      <summary>
            Get/Set Line top position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineItem.Left">
      <summary>
            Get/Set Line left position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineItem.Right">
      <summary>
            Get/Set Line right position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineItem.Bottom">
      <summary>
            Get/Set Line bottom position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineItem.Tag">
      <summary>
            Get/Set Line item tag.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageLineItem.ImageWordList">
      <summary>
            Get/Set Image word collection.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageWordList">
      <summary>
            Image Components image word list class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordList.Count">
      <summary>
            Gets the word items count.
            </summary>
      <returns>The word items count.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordList.Item(System.Int32)">
      <summary>
            Gets word item index.
            </summary>
      <param name="Index">Index position.</param>
      <returns>Word item object.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordList.ICImageWordItems">
      <summary>
            Get/Set ICImageWordItem collection.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordList.ImageFormatedText">
      <summary>
            Get/Set Image formated text value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordList.ImageText">
      <summary>
            Get/Set Image text value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordList.IsOCRSource">
      <summary>
            Get/Set Is source from OCR.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordList.PageIndex">
      <summary>
            Get/Set Page index position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordList.ID">
      <summary>
            Get/Set Word list ID.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordList.FormatingType">
      <summary>
            Get/Set Formating output type.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordList.WordListImage">
      <summary>
            Get/Set Word list image.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageWordList.Add(ImageComponents.Core.Imaging.ICImageWordItem)">
      <summary>
            Add word item.
            </summary>
      <param name="WordItem">Word item.</param>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageWordList.AddRange(ImageComponents.Core.Imaging.ICImageWordList)">
      <summary>
            Add range items.
            </summary>
      <param name="WordList">Word list collection.</param>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageWordList.Clear">
      <summary>
            Clear word list items.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICImageWordList.GetEnumerator">
      <summary>
            Get collection enumerator.
            </summary>
      <returns>IEnumerator.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageWordItem">
      <summary>
            Image Components image word item class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.X">
      <summary>
            Get/Set Word X position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.Y">
      <summary>
            Get/Set Word Y position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.Width">
      <summary>
            Get/Set Word width size.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.Height">
      <summary>
            Get/Set Word height size.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.Top">
      <summary>
            Get/Set Word top position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.Left">
      <summary>
            Get/Set Word left position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.Right">
      <summary>
            Get/Set Word right position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.Bottom">
      <summary>
            Get/Set Word bottom position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.Word">
      <summary>
            Get/Set Word value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.FontSize">
      <summary>
            Get/Set font size.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.FontName">
      <summary>
            Get/Set font name.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.LineIndex">
      <summary>
            Get/Set line index position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.WordIndex">
      <summary>
            Get/Set word index position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.PageIndex">
      <summary>
            Get/Set Page index position.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.Confidence">
      <summary>
            Get/Set Word confidence.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.IsSelected">
      <summary>
            Get/Set Is Word selected.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICImageWordItem.Tag">
      <summary>
            Get/Set Word item tag.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICLineSegment">
      <summary>
            Image Components line segment class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICLineSegment.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICLineSegment.ID">
      <summary>
            Get/Set Line segment ID.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICLineSegment.X1">
      <summary>
            Get/Set Line segment X1 value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICLineSegment.X2">
      <summary>
            Get/Set Line segment X2 value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICLineSegment.Y1">
      <summary>
            Get/Set Line segment Y1 value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICLineSegment.Y2">
      <summary>
            Get/Set Line segment Y2 value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICLineSegment.LineWidth">
      <summary>
            Get/Set Line width value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICLineSegment.LineSize">
      <summary>
            Get/Set Line size value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICLineSegment.Angle">
      <summary>
            Get/Set Line angle value.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICFTPSettings">
      <summary>
            Image Components FTP settings class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICFTPSettings.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICFTPSettings.#ctor(System.Object)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICFTPSettings.FTPUrl">
      <summary>
            Gets or sets the FTP server uri.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICFTPSettings.FTPUserName">
      <summary>
            Gets or sets the FTP user name.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICFTPSettings.FTPPassword">
      <summary>
            Gets or sets the FTP password.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICFTPSettings.FTPDomain">
      <summary>
            Gets or sets the FTP domain.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICFTPSettings.FTPAnonymous">
      <summary>
            Gets or sets the anonymous authentication.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICFTPSettings.FTPTimeout">
      <summary>
            Gets or sets FTP connection timeout in milliseconds.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICRectangle">
      <summary>
            Image Components rectangle class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICRectangle.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICRectangle.#ctor(System.Object)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICRectangle.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="x">The X value.</param>
      <param name="y">The Y value.</param>
      <param name="width">The Width value.</param>
      <param name="height">The Height value.</param>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICRectangle.IsEmpty">
      <summary>
            Get Is rectangle empty.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICRectangle.X">
      <summary>
            Get/Set X value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICRectangle.Y">
      <summary>
            Get/Set Y value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICRectangle.Width">
      <summary>
            Get/Set Width value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICRectangle.Height">
      <summary>
            Get/Set Height value.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICRectangle.ToString">
      <summary>
            Object to string value.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICPoint">
      <summary>
            Image Components point class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPoint.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPoint.#ctor(System.Object)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPoint.#ctor(System.Single,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="x">The X value.</param>
      <param name="y">The Y value.</param>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPoint.X">
      <summary>
            Get/Set X value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPoint.Y">
      <summary>
            Get/Set Y value.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPoint.ToPoint">
      <summary>
            Convert to System.Drawing.Point object.
            </summary>
      <returns>System.Drawing.Point object.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPoint.Tag">
      <summary>
            Get/Set Tag object.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPoint.ToString">
      <summary>
            Object to string value.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICComparableImage">
      <summary>
            Image Components comparable image class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICComparableImage.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICComparableImage.#ctor(System.Object)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICComparableImage.#ctor(System.Byte[],System.String)">
      <summary>
             Constructor.
             </summary>
      <param name="ImageSource">Processing status type.</param>
      <param name="ImageID">Processing max value.</param>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICComparableImage.ImageSource">
      <summary>
            Get/Set Image source value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICComparableImage.ImageFingerPrint">
      <summary>
            Get/Set Image finger print value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICComparableImage.ImageID">
      <summary>
            Get/Set Image ID value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICComparableImage.ImageZone">
      <summary>
            Get/Set Image Zone value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICComparableImage.IsVisualCompare">
      <summary>
            Get/Set Is visual compare.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICComparableImage.AcceptedPercent">
      <summary>
            Get/Set Accepted percent value.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICComparableImage.LoadDefinition(System.String)">
      <summary>
            Save comparable definition.
            </summary>
      <param name="value">The comparable value to load.</param>
      <returns>
      </returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICComparableImage.SaveDefinition">
      <summary>
            Save comparable definition.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICSimilarityImages">
      <summary>
            Image Components similarity images class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSimilarityImages.SourceID">
      <summary>
            Get Source image ID.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSimilarityImages.DestinationID">
      <summary>
            Get Destination image.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSimilarityImages.Similarity">
      <summary>
            Get Similarity value percentage.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICSimilarityImages.ToString">
      <summary>
            Object to string value.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.IDataAccess">
      <summary>
            Image Components Data Access Interface.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.IDataAccess.ConnectionString">
      <summary>
            Get/Set Connection string.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.IDataAccess.GetValueScript">
      <summary>
            Get/Set Get database value script.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.IDataAccess.SetValueScript">
      <summary>
            Get/Set Set database value script.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.IDataAccess.DatabaseType">
      <summary>
            Get database type.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.IDataAccess.DataAccessException">
      <summary>
            Get Set Data Access Exception.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.IDataAccess.TestConnection">
      <summary>
            Test data access connection.
            </summary>
      <returns>The connection success or failure.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.IDataAccess.ExecuteGet">
      <summary>
            Execute the get value script.
            </summary>
      <returns>The scalar value from the database.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.IDataAccess.ExecuteSet(System.Byte[])">
      <summary>
             Execute the set value script.
             </summary>
      <param name="ImageData">Image raw data.</param>
      <returns>The success or failure of the command.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICMSSQLDataAccess">
      <summary>
            Image Components MSSQL Data Access Interface.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICMSSQLDataAccess.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICMSSQLDataAccess.#ctor(System.Object)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICMSSQLDataAccess.ConnectionString">
      <summary>
            Get/Set Connection string.
            Server={0}; Database={1}; Uid={2};Pwd={3};
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICMSSQLDataAccess.GetValueScript">
      <summary>
            Get/Set Get database value script.
            SELECT {0} FROM {1} WHERE {2}
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICMSSQLDataAccess.SetValueScript">
      <summary>
            Get/Set database value script.
            UPDATE {0} SET {1} WHERE {2}
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICMSSQLDataAccess.DataAccessException">
      <summary>
            Get Data Access Exception.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICMSSQLDataAccess.DatabaseType">
      <summary>
            Get database type.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICMSSQLDataAccess.TestConnection">
      <summary>
            Test data access connection.
            </summary>
      <returns>The connection success or failure.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICMSSQLDataAccess.ExecuteGet">
      <summary>
            Execute the get value script.
            </summary>
      <returns>The scalar value from the database.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICMSSQLDataAccess.ExecuteSet(System.Byte[])">
      <summary>
             Execute the set value script.
             </summary>
      <param name="ImageData">Image raw data.</param>
      <returns>The success or failure of the command.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICMySQLDataAccess">
      <summary>
            Image Components MySQL Data Access Interface.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICMySQLDataAccess.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICMySQLDataAccess.#ctor(System.Object)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICMySQLDataAccess.ConnectionString">
      <summary>
            Get/Set Connection string.
            Server={0}; Database={1}; Uid={2};Pwd={3};"
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICMySQLDataAccess.GetValueScript">
      <summary>
            Get/Set Get database value script.
            SELECT {0} FROM {1} WHERE {2}
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICMySQLDataAccess.SetValueScript">
      <summary>
            Get/Set database value script.
            UPDATE {0} SET {1} WHERE {2}
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICMySQLDataAccess.DataAccessException">
      <summary>
            Get Data Access Exception.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICMySQLDataAccess.DatabaseType">
      <summary>
            Get database type.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICMySQLDataAccess.TestConnection">
      <summary>
            Test data access connection.
            </summary>
      <returns>The connection success or failure.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICMySQLDataAccess.ExecuteGet">
      <summary>
            Execute the get value script.
            </summary>
      <returns>The scalar value from the database.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICMySQLDataAccess.ExecuteSet(System.Byte[])">
      <summary>
             Execute the set value script.
             </summary>
      <param name="ImageData">Image raw data.</param>
      <returns>The success or failure of the command.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICSQLiteDataAccess">
      <summary>
            Image Components SQLite Data Access Interface.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICSQLiteDataAccess.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICSQLiteDataAccess.#ctor(System.Object)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSQLiteDataAccess.ConnectionString">
      <summary>
            Get/Set Connection string.
            Data Source={0}; Pwd={1};
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSQLiteDataAccess.GetValueScript">
      <summary>
            Get/Set Get database value script.
            SELECT {0} FROM {1} WHERE {2}
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSQLiteDataAccess.SetValueScript">
      <summary>
            Get/Set database value script.
            UPDATE {0} SET {1} WHERE {2}
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSQLiteDataAccess.DataAccessException">
      <summary>
            Get Data Access Exception.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICSQLiteDataAccess.DatabaseType">
      <summary>
            Get database type.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICSQLiteDataAccess.TestConnection">
      <summary>
            Test data access connection.
            </summary>
      <returns>The connection success or failure.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICSQLiteDataAccess.ExecuteGet">
      <summary>
            Execute the get value script.
            </summary>
      <returns>The scalar value from the database.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICSQLiteDataAccess.ExecuteSet(System.Byte[])">
      <summary>
             Execute the set value script.
             </summary>
      <param name="ImageData">Image raw data.</param>
      <returns>The success or failure of the command.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICDatabaseSettings">
      <summary>
            Image Components Database settings class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICDatabaseSettings.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICDatabaseSettings.#ctor(System.Object)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICDatabaseSettings.ServerType">
      <summary>
            Gets or sets the Database server type.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICDatabaseSettings.Server">
      <summary>
            Gets or sets the Database server name.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICDatabaseSettings.Database">
      <summary>
            Gets or sets the Database name.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICDatabaseSettings.Username">
      <summary>
            Gets or sets the Database user name.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICDatabaseSettings.Password">
      <summary>
            Gets or sets the Database password.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICDatabaseSettings.GetValueScript">
      <summary>
            Gets or sets the database value script.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICDatabaseSettings.SetValueScript">
      <summary>
            Gets or sets the Database value script.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICPDFSecurity">
      <summary>
            Image Components PDF security class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPDFSecurity.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.ICPDFSecurity.#ctor(System.String,ImageComponents.Core.Imaging.PDFPermissionType)">
      <summary>
            Constructor.
            </summary>
      <param name="pdfPassword">The PDF owner password.</param>
      <param name="pdfPermissions">The PDF permissions.</param>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPDFSecurity.PDFPassword">
      <summary>
            Get/Set PDF Document Password value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPDFSecurity.DocumentOpenPassword">
      <summary>
            Get/Set Open PDF document with password.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPDFSecurity.PDFPermissions">
      <summary>
            Get/Set PDF Permissions value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPDFSecurity.Use128BitStrength">
      <summary>
            Get/Set Use 128 Bit Strength value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.ICPDFSecurity.EnforceSecurity">
      <summary>
            Get/Set Enforce security value.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICDeviceDriverType">
      <summary>
            ImgScan driver type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICDeviceDriverType.Twain">
      <summary>
            ImgScan twain driver.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICDeviceDriverType.WIA">
      <summary>
            ImgScan WIA driver.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICDeviceDriverType.DirectShow">
      <summary>
            Direct Show driver.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageAcquireMode">
      <summary>
            Image acquire mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageAcquireMode.Auto">
      <summary>
            Auto acquire mode (Depends on the loaded image type and selected page).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageAcquireMode.Single">
      <summary>
            Single acquire mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageAcquireMode.Append">
      <summary>
            Image page append mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageAcquireMode.Insert">
      <summary>
            Image page insert mode.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImagePageSeparationType">
      <summary>
            Image page separation enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePageSeparationType.None">
      <summary>
            None image page separation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePageSeparationType.BlankPage">
      <summary>
            Blank image page separation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePageSeparationType.Barcode">
      <summary>
            Barcode image page separation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePageSeparationType.PageCount">
      <summary>
            Image page count separation.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImagePageRotationType">
      <summary>
            Image page rotation enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePageRotationType.None">
      <summary>
            None image page rotation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePageRotationType.Rot90">
      <summary>
            90 degrees image page rotation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePageRotationType.Rot180">
      <summary>
            180 degrees image page rotation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImagePageRotationType.Rot270">
      <summary>
            270 degrees image page rotation.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageBinarizationFilterType">
      <summary>
            Apply binarization filter type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBinarizationFilterType.None">
      <summary>
            None binarization filter type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBinarizationFilterType.FloydSteinbergDithering">
      <summary>
            Floyd Steinberg Dithering binarization filter type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBinarizationFilterType.BayerDithering">
      <summary>
            Bayer Dithering binarization filter type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageBinarizationFilterType.OrderedDithering">
      <summary>
            Ordered Dithering binarization filter type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAPABILITIES">
      <summary>
            Twain capabilities enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.NONE">
      <summary>
            None capability.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_XFERCOUNT">
      <summary>
            The application is willing to accept this number of images.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_COMPRESSION">
      <summary>
            Allows the application and Source to identify which compression schemes they have in common
            for Buffered Memory and File transfers.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_PIXELTYPE">
      <summary>
            The type of pixel data that a Source is capable of acquiring (for example, black and white, gray, RGB, etc.).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_UNITS">
      <summary>
            Unless a quantity is dimensionless or uses a specified unit of measure, ICAP_UNITS determines
            the unit of measure for all quantities.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_XFERMECH">
      <summary>
            Allows the application and Source to identify which transfer mechanisms the source supports.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_AUTHOR">
      <summary>
            The name or other identifying information about the Author of the image. It may include a
            copyright string.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_CAPTION">
      <summary>
            A general note about the acquired image.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_FEEDERENABLED">
      <summary>
            If TRUE, Source must acquire data from the document feeder acquire area and other feeder
            capabilities can be used. If FALSE, Source must acquire data from the non-feeder acquire area and
            no other feeder capabilities can be used.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_FEEDERLOADED">
      <summary>
            Reflect whether there are documents loaded in the Source’s feeder.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_TIMEDATE">
      <summary>
            The date and time the image was acquired.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_SUPPORTEDCAPS">
      <summary>
            Returns a list of all the capabilities for which the Source will answer inquiries. Does not indicate
            which capabilities the Source will allow to be set by the application. Some capabilities can only be
            set if certain setup work has been done so the Source cannot globally answer which capabilities
            are “set-able.”
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_EXTENDEDCAPS">
      <summary>
            Allows the application and Source to negotiate capabilities to be used in States 5 and 6.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_AUTOFEED">
      <summary>
            If TRUE, the Source will automatically feed the next page from the document feeder after the
            number of frames negotiated for capture from each page are acquired. CAP_FEEDERENABLED
            must be TRUE to use this capability.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_CLEARPAGE">
      <summary>
            If TRUE, the Source will eject the current page being acquired from and will leave the feeder
            acquire area empty.
            If CAP_AUTOFEED is TRUE, a fresh page will be advanced.
            CAP_FEEDERENABLED must equal TRUE to use this capability.
            This capability must have been negotiated as an extended capability to be used in States 5 and 6.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_FEEDPAGE">
      <summary>
            If TRUE, the Source will eject the current page and advance the next page in the document feeder
            into the feeder acquire area.
            If CAP_AUTOFEED is TRUE, the same action just described will occur and CAP_AUTOFEED will
            remain active.
            CAP_FEEDERENABLED must equal TRUE to use this capability.
            This capability must have been negotiated as an extended capability to be used in States 5 and 6.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_REWINDPAGE">
      <summary>
            If TRUE, the Source will return the current page to the input side of the document feeder and feed
            the last page from the output side of the feeder back into the acquisition area.
            If CAP_AUTOFEED is TRUE, automatic feeding will continue after all negotiated frames from this
            page are acquired.
            CAP_FEEDERENABLED must equal TRUE to use this capability.
            This capability must have been negotiated as an extended capability to be used in States 5 and 6.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_INDICATORS">
      <summary>
            If TRUE, the Source displays a progress indicator during acquisition and transfer, regardless of
            whether the Source's user interface is active. If FALSE, the progress indicator is suppressed if the
            Source's user interface is inactive.
            The Source displays device-specific instructions and error messages if either the user interface or
            progress indicator is turned on. In this case it returns TWCC_OPERATIONERROR to alert the
            application that it handled the error, and communicated the problem to the user.
            If both the user interface and progress indicator are turned off, then the Source never displays any
            message to the user, even if TWCC_OPERATIONERROR is returned. Messages to the user are under
            the sole control of the Application.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_SUPPORTEDCAPSEXT">
      <summary>
            Supported extended capabilities.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_PAPERDETECTABLE">
      <summary>
            This capability determines whether the device has a paper sensor that can detect documents on
            the ADF or Flatbed.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_UICONTROLLABLE">
      <summary>
            If TRUE, indicates that this Source supports acquisition with the UI disabled; i.e.,
            TW_USERINTERFACE’s ShowUI field can be set to FALSE. If FALSE, indicates that this Source can
            only support acquisition with the UI enabled.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_DEVICEONLINE">
      <summary>
            If TRUE, the physical hardware (e.g., scanner, digital camera, image database, etc.) that represents
            the image source is attached, powered on, and communicating.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_AUTOSCAN">
      <summary>
            This capability is intended to boost the performance of a Source. The fundamental assumption
            behind AutoScan is that the device is able to capture the number of images indicated by the value
            of CAP_XFERCOUNT without waiting for the Application to request the image transfers. This is
            only possible if the device has internal buffers capable of caching the images it captures.
            The default behavior is undefined, because some high volume devices are incapable of anything
            but CAP_AUTOSCAN being equal to TRUE. However, if a Source supports FALSE, it should use it
            as the mandatory default, since this best describes the behavior of pre-1.8 TWAIN Applications.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_THUMBNAILSENABLED">
      <summary>
            Allows an application to request the delivery of thumbnail representations for the set of images
            that are to be delivered.
            Setting CAP_THUMBNAILSENABLED to TRUE turns on thumbnail mode. Images transferred
            thereafter will be sent at thumbnail size (exact thumbnail size is determined by the Data Source).
            Setting this capability to FALSE turns thumbnail mode off and returns full size images.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_DUPLEX">
      <summary>
            This indicates whether the scanner supports duplex. If so, it further indicates whether one-path or
            two-path duplex is supported.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_DUPLEXENABLED">
      <summary>
            The user can set the duplex option to be TRUE or FALSE. If TRUE, the scanner scans both sides of a
            paper; otherwise, the scanner will scan only one side of the image.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_ENABLEDSUIONLY">
      <summary>
            Allows an application to query a source to see if it implements the new user interface settings
            dialog. If a source reports that it has the capability CAP_ENABLEDSUIONLY, then it must
            implement the operation triplet DG_CONTROL/ DAT_USERINTERFACE/ MSG_ENABLEDSUIONLY
            to display the source user interface without acquiring an image.
            If TRUE, the source will support the DG_CONTROL/ DAT_USERINTERFACE /
            MSG_ENABLEDSUIONLY message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_CUSTOMDSDATA">
      <summary>
            Allows the application to query the data source to see if it supports the new operation triplets
            DG_CONTROL/ DAT_CUSTOMDSDATA / MSG_GET and DG_CONTROL/ DAT_CUSTOMDSDATA /
            MSG_SET.
            If TRUE, the source will support the DG_CONTROL/ DAT_CUSTOMDSDATA/MSG_GET message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_ENDORSER">
      <summary>
            Allows the application to specify the starting endorser / imprinter number. All other endorser/
            imprinter properties should be handled through the data source’s user interface.
            The user can set the starting number for the endorser.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_JOBCONTROL">
      <summary>
            Allows multiple jobs in batch mode. The application can decide how the job can be processed,
            according to the flags listed below.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_ALARMS">
      <summary>
            Turns specific audible alarms on and off.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_ALARMVOLUME">
      <summary>
            The volume of a device’s audible alarm. Note that this control affects the volume of all alarms; no
            specific volume control for individual types of alarms is provided.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_AUTOMATICCAPTURE">
      <summary>
            The number of images to automatically capture. This does not refer to the number of images to be
            sent to the Application, use CAP_XFERCOUNT for that.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_TIMEBEFOREFIRSTCAPTURE">
      <summary>
            For automatic capture, this value selects the number of milliseconds before the first picture is to be
            taken, or the first image is to be scanned.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_TIMEBETWEENCAPTURES">
      <summary>
            For automatic capture, this value selects the milliseconds to wait between pictures taken, or
            images scanned.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_CLEARBUFFERS">
      <summary>
            MSG_GET reports the presence of data in the scanner’s buffers. MSG_SET with a value of
            TWCB_CLEAR immediately clears the buffers.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_MAXBATCHBUFFERS">
      <summary>
            Describes the number of pages that the scanner can buffer when CAP_AUTOSCAN is enabled.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_DEVICETIMEDATE">
      <summary>
            The date and time of the device’s clock.
            Managed in the form “YYYY/MM/DD HH:mm:SS:sss” where YYYY is the year, MM is the
            numerical month, DD is the numerical day, HH is the hour, mm is the minute, SS is the second,
            and sss is the millisecond.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_POWERSUPPLY">
      <summary>
            MSG_GET reports the kinds of power available to the device. MSG_GETCURRENT reports the
            current power supply in use.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_CAMERAPREVIEWUI">
      <summary>
            This capability queries the Source for UI support for preview mode. If TRUE, the Source supports preview UI.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_DEVICEEVENT">
      <summary>
            MSG_SET selects which events the Application wants the Source to report. MSG_GET and
            MSG_GETCURRENT gets the current setting. MSG_RESET resets the capability to the empty array
            (no events set).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_SERIALNUMBER">
      <summary>
            A string containing the serial number of the currently selected device in the Source. Multiple
            devices may all report the same serial number.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_PRINTER">
      <summary>
            MSG_GET returns the current list of available printer devices, along with the one currently being
            used for negotiation. MSG_SET selects the current device for negotiation, and optionally
            constrains the list. MSG_RESET restores all the available devices (useful after MSG_SET has been
            used to constrain the list).
            Top/Bottom refer to duplex devices, and indicate if the printer is writing on the top or the bottom
            of the sheet of paper. Simplex devices use the top settings.
            Before/After indicates whether printing occurs before or after the sheet of paper has been
            scanned.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_PRINTERENABLED">
      <summary>
            Turns the current CAP_PRINTER device on or off.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_PRINTERINDEX">
      <summary>
            The User can set the starting number for the current CAP_PRINTER device.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_PRINTERMODE">
      <summary>
            Specifies the appropriate current CAP_PRINTER device mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_PRINTERSTRING">
      <summary>
            Specifies the string(s) that are to be used in the string component when the current CAP_PRINTER
            device is enabled.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_PRINTERSUFFIX">
      <summary>
            Specifies the string that shall be used as the current CAP_PRINTER device’s suffix.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_LANGUAGE">
      <summary>
            Allows Application and Source to identify which languages they have in common for the
            exchange of string data, and to select the language of the internal UI.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_FEEDERALIGNMENT">
      <summary>
            Helps the Application determine any special actions it may need to take when negotiating frames
            with the Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_FEEDERORDER">
      <summary>
            Determine if it should reorganize the stream of images received from a Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_REACQUIREALLOWED">
      <summary>
            Indicates whether the physical hardware (e.g. scanner, digital camera) is capable of acquiring
            multiple images of the same page without changes to the physical registration of that page.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_BATTERYMINUTES">
      <summary>
            The minutes of battery power remaining to the device.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_BATTERYPERCENTAGE">
      <summary>
            When used with MSG_GET, return the percentage of battery power level on camera. If -1 is
            returned, it indicates that the battery is not present.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_CAMERASIDE">
      <summary>
            TWAIN models a duplex scanner as conceptually having two 'cameras' - a 'top' camera that
            captures the front of each page, and a 'bottom' camera that captures the back. Some devices allow
            these two logical cameras to operate with different settings for certain capabilities.
            CAP_CAMERASIDE provides a simple way to address the cameras individually: The value of
            CAP_CAMERASIDE determines whether subsequent capability negotiation is directed to one
            camera or the other, or to both.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_SEGMENTED">
      <summary>
            Describes the segmentation setting for captured images. Image segmentation occurs when either
            the device, the Source or the Application breaks up an image into a stream of image components
            (text, pictures, graphics) that must be assembled by the application to reconstruct the original
            document. Applications must use the DAT_EXTIMAGEINFO / TWEI_SEGMENTNUMBER field to
            identify pieces of an image that are associated with each other through segmentation.
            Manual segmentation is an advanced way of setting the Source to transfer image components
            with different parameters from the same page. Not all Sources support this feature.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_CAMERAENABLED">
      <summary>
            This feature depends on “camera addressing”, which is the ability to address elements in the
            device responsible for the color space or location. TWAIN offers DAT_FILESYSTEM and
            CAP_CAMERASIDE to do this.
            When set to TRUE the device will deliver images from the current camera. The Current Camera
            can be selected with either CAP_CAMERASIDE or DAT_FILESYSTEM. With CAP_CAMERASIDE it
            is possible to enable bottom (rear) only scanning, or have different settings for top and bottom.
            With DAT_FILESYSTEM it is possible to enter a Single Document Multiple Images (SDMI) mode
            in addition to enabling different settings for top and bottom.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_CAMERAORDER">
      <summary>
            This capability selects the order of output for Single Document Multiple Image (SDMI) mode
            based on an array of pixel types; it does not constrain the allowed pixel types.
            For example, if the scanner is set up to deliver color and bitonal documents on the top (front)
            camera, then an array of {TWPT_RGB, TWPT_BW} will deliver first the color image, then the bitonal
            image, while an array of {TWPT_BW, TWPT_RGB} will deliver first the bitonal image, then the color
            image.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_MICRENABLED">
      <summary>
            Get this capability to determine if the Source supports check scanning. If set to TRUE check
            scanning is enabled, if set to FALSE check scanning is disabled.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_FEEDERPREP">
      <summary>
            Improve the movement of paper through a scanner ADF.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_FEEDERPOCKET">
      <summary>
            Report what pockets are available to receive paper as it exits from the device.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_AUTOMATICSENSEMEDIUM">
      <summary>
            Configures a Source to check for paper in the Automatic Document Feeder, and if it finds any,
            then automatically capture all of its images from the Feeder. If the Feeder is empty when
            acquisition starts, then all images are automatically captured from the Flatbed.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_CUSTOMINTERFACEGUID">
      <summary>
            Uniquely identifies an interface for a Data Source, so that an Application can properly interpret its
            custom content.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_SUPPORTEDCAPSSEGMENTUNIQUE">
      <summary>
            For Sources that allow unique values to be set for things like the top and bottom or for each
            segment on a page.
            Returns a list of all the capabilities for which the Source allows to have unique values.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_SUPPORTEDDATS">
      <summary>
            Returns a list of all the Data Argument Types (DAT_xxx) for which the Source will answer
            inquiries. This list does not indicate which DATs the Source will allow to be set by the application.
            Some DATs can only be set if certain setup work has been done so the Source cannot globally
            answer which DATs are “set-able.”
            HIWORD of the value is DG of DAT. LOWORD of the value is the DAT itself.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_DOUBLEFEEDDETECTION">
      <summary>
            Enables or disables double feed detection.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_DOUBLEFEEDDETECTIONLENGTH">
      <summary>
            When CAP_DOUBLEFEEDDETECTION includes TWDF_BYLENGTH, it allows an Application to set
            the minimum length for detecting double feed documents. A value of zero always means “off”.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_DOUBLEFEEDDETECTIONSENSITIVITY">
      <summary>
            When CAP_DOUBLEFEEDDETECTION includes TWDF_ULTRASONIC, allows an Application to set
            how sensitive the double feed detection is.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_DOUBLEFEEDDETECTIONRESPONSE">
      <summary>
            When CAP_DOUBLEFEEDDETECTION is set to anything but Disabled, it allows an Application to
            set how the source will respond to detecting a double feed.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_PAPERHANDLING">
      <summary>
            Use this capability to control paper handling. This capability may affect scanning speed.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_INDICATORSMODE">
      <summary>
            Specify what messages can be displayed if ICAP_INDICATORS is TRUE.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_PRINTERVERTICALOFFSET">
      <summary>
            Specifies a Y-Offset in ICAP_UNITS units for the current CAP_PRINTER device.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.CAP_POWERSAVETIME">
      <summary>
            When used with MSG_SET, set the camera power down timer in seconds. When used with
            MSG_GET, return the current setting of the power down time.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_AUTOBRIGHT">
      <summary>
            TRUE enables and FALSE disables the Source’s Auto-brightness function (if any).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_BRIGHTNESS">
      <summary>
            The brightness values available within the Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_CONTRAST">
      <summary>
            The contrast values available within the Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_CUSTHALFTONE">
      <summary>
            Specifies the square-cell halftone (dithering) matrix the Source should use to halftone the image.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_EXPOSURETIME">
      <summary>
            Specifies the exposure time used to capture the image, in seconds.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_FILTER">
      <summary>
            Describes the color characteristic of the subtractive filter applied to the image data. Multiple
            filters may be applied to a single acquisition.
            If the Source supports DAT_FILTER as well, then it will apply the filter set by the last SET
            operation invoked by the Application. Setting/Resetting ICAP_FILTER will clear the filter
            associated with DAT_FILTER. Setting/Resetting DAT_FILTER will clear the filter associated with
            ICAP_FILTER.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_FLASHUSED">
      <summary>
            For devices that support flash. MSG_SET selects the flash to be used (if any). MSG_GET reports the
            current setting. This capability replaces ICAP_FLASHUSED, which is only able to negotiate the
            flash being on or off.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_GAMMA">
      <summary>
            Gamma correction value for the image data.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_HAFTTONES">
      <summary>
            A list of names of the halftone patterns available within the Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_HIGHLIGHT">
      <summary>
            Specifies which value in an image should be interpreted as the lightest “highlight.” All values
            “lighter” than this value will be clipped to this value. Whether lighter values are smaller or larger
            can be determined by examining the Current value of ICAP_PIXELFLAVOR.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_IMAGEFILEFORMAT">
      <summary>
            Informs the application which file formats the Source can generate (MSG_GET). Tells the Source
            which file formats the application can handle (MSG_SET).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_LAMPSTATE">
      <summary>
            TRUE means the lamp is currently, or should be set to ON. Sources may not support MSG_SET operations.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_LIGHTSOURCE">
      <summary>
            Describes the general color characteristic of the light source used to acquire the image.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_ORIENTATION">
      <summary>
            Defines which edge of the “paper” the image’s “top” is aligned with. This information is used to
            adjust the frames to match the scanning orientation of the paper. For instance, if an
            ICAP_SUPPORTEDSIZE of TWSS_ISOA4 has been negotiated, and ICAP_ORIENTATION is set to
            TWOR_LANDSCAPE, then the Source must rotate the frame it downloads to the scanner to reflect
            the orientation of the paper.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_PHYSICALWIDTH">
      <summary>
            The maximum physical width (X-axis) the Source can acquire (measured in units of ICAP_UNITS).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_PHYSICALHEIGHT">
      <summary>
            The maximum physical height (Y-axis) the Source can acquire (measured in units of ICAP_UNITS).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_SHADOW">
      <summary>
            Specifies which value in an image should be interpreted as the darkest “shadow.” All values
            “darker” than this value will be clipped to this value.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_FRAMES">
      <summary>
            The list of frames the Source will acquire on each page.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_XNATIVERESOLUTION">
      <summary>
            The native optical resolution along the X-axis of the device being controlled by the Source. Most
            devices will respond with a single value (TW_ONEVALUE).
            This is NOT a list of all resolutions that can be generated by the device. Rather, this is the
            resolution of the device’s optics. Measured in units of pixels per unit as defined by ICAP_UNITS
            (pixels per TWUN_PIXELS yields dimensionless data).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_YNATIVERESOLUTION">
      <summary>
            The native optical resolution along the Y-axis of the device being controlled by the Source.
            Measured in units of pixels per unit as defined by ICAP_UNITS (pixels per TWUN_PIXELS yields
            dimensionless data).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_XRESOLUTION">
      <summary>
            All the X-axis resolutions the Source can provide.
            Measured in units of pixels per unit as defined by ICAP_UNITS (pixels per TWUN_PIXELS yields
            dimensionless data). That is, when the units are TWUN_PIXELS, both ICAP_XRESOLUTION and
            ICAP_YRESOLUTION shall report 1 pixel/pixel. Some data sources like to report the actual
            number of pixels that the device reports, but that response is more appropriate in
            ICAP_PHYSICALHEIGHT and ICAP_PHYSICALWIDTH.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_YRESOLUTION">
      <summary>
            All the Y-axis resolutions the Source can provide.
            Measured in units of pixels per unit as defined by ICAP_UNITS (pixels per TWUN_PIXELS yields
            dimensionless data). That is, when the units are TWUN_PIXELS, both ICAP_XRESOLUTION and
            ICAP_YRESOLUTION shall report 1 pixel/pixel. Some data sources like to report the actual
            number of pixels that the device reports, but that response is more appropriate in
            ICAP_PHYSICALHEIGHT and ICAP_PHYSICALWIDTH.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_MAXFRAMES">
      <summary>
            The maximum number of frames the Source can provide or the application can accept per page.
            This is a bounding capability only. It does not establish current or future behavior.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_TILES">
      <summary>
            This is used with buffered memory transfers. If TRUE, Source can provide application with tiled image data.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_BITORDER">
      <summary>
            Specifies how the bytes in an image are filled by the Source. TWBO_MSBFIRST indicates that the
            leftmost bit in the byte (usually bit 7) is the byte’s Most Significant Bit.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_CCITTKFACTOR">
      <summary>
            Used for CCITT Group 3 2-dimensional compression. The ‘K’ factor indicates how often the new
            compression baseline should be re-established. A value of 2 or 4 is common in facsimile
            communication. A value of zero in this field will indicate an infinite K factor—the baseline is only
            calculated at the beginning of the transfer.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_LIGHTPATH">
      <summary>
            Describes whether the image was captured transmissively or reflectively.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_PIXELFLAVOR">
      <summary>
            Sense of the pixel whose numeric value is zero (minimum data value).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_PLANARCHUNKY">
      <summary>
            Allows the application and Source to identify which color data formats are available. There are
            two options, “planar” and “chunky.”
            For example, planar RGB data is transferred with the entire red plane of data first, followed by the
            entire green plane, followed by the entire blue plane (typical for three-pass scanners). “Chunky”
            mode repetitively interlaces a pixel from each plane until all the data is transferred (R-G-B-R-GB…)
            (typical for one-pass scanners).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_ROTATION">
      <summary>
            How the Source can/should rotate the scanned image data prior to transfer. This doesn’t use
            ICAP_UNITS. It is always measured in degrees. Any applied value is additive with any rotation
            specified in ICAP_ORIENTATION.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_SUPPORTEDSIZES">
      <summary>
            For devices that support fixed frame sizes. Defined sizes match typical page sizes. This specifies
            the size(s) the Source can/should use to acquire image data.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_THRESHOLD">
      <summary>
            Specifies the dividing line between black and white. This is the value the Source will use to
            threshold, if needed, when ICAP_PIXELTYPE = TWPT_BW.
            The value is normalized so there are no units of measure associated with this ICAP.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_XSCALING">
      <summary>
            All the X-axis scaling values available. A value of ‘1.0’ is equivalent to 100% scaling. Do not use
            values less than or equal to zero.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_YSCALING">
      <summary>
            All the Y-axis scaling values available. A value of ‘1.0’ is equivalent to 100% scaling. Do not use
            values less than or equal to zero.
            There are no units inherent with this data as it is normalized to 1.0 being “unscaled.”
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_BITORDERCODES">
      <summary>
            Used for CCITT data compression only. Indicates the bit order representation of the stored
            compressed codes.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_PIXELFLAVORCODES">
      <summary>
            Used only for CCITT data compression. Specifies whether the compressed codes’ pixel “sense”
            will be inverted from the Current value of ICAP_PIXELFLAVOR prior to transfer.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_JPEGPIXELTYPE">
      <summary>
            Allows the application and Source to agree upon a common set of color descriptors that are made
            available by the Source. This ICAP is only useful for JPEG-compressed buffered memory image
            transfers.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_TIMEFILL">
      <summary>
            Used only with CCITT data compression. Specifies the minimum number of words of
            compressed codes (compressed data) to be transmitted per line.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_BITDEPTH">
      <summary>
            Specifies the pixel bit depths for the Current value of ICAP_PIXELTYPE.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_BITDEPTHREDUCTION">
      <summary>
            Specifies the Reduction Method the Source should use to reduce the bit depth of the data. Most
            commonly used with ICAP_PIXELTYPE = TWPT_BW to reduce gray data to black and white.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_UNDEFINEDIMAGESIZE">
      <summary>
            If TRUE the Source will issue a MSG_XFERREADY before starting the scan.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_IMAGEDATASET">
      <summary>
            Gets or sets the image indices that will be delivered during the standard image transfer done in
            States 6 and 7. Indices are assumed to start at 1, so a TW_ONEVALUE container sets an implied
            range from 1 to the number specified. TW_RANGE returns are useful for those cases where the
            images are contiguous (5 .. 36). TW_ARRAY returns should be used were index values are
            discontinuous (as could be the case where the user previously set such a data set).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_EXTIMAGEINFO">
      <summary>
            Allows the application to query the data source to see if it supports the operation triplet
            DG_IMAGE / DAT_EXTIMAGEINFO / MSG_GET. Support is only available if the capability is
            supported and the value TRUE is allowed.
            When set to TRUE, the source supports the DG_IMAGE / DAT_EXTIMAGEINFO / MSG_GET
            message, and data will be returned by this call for any supported TWEI_ items.
            When set to FALSE, the application is indicating that it will make no calls to DG_IMAGE /
            DAT_EXTIMAGEINFO/ MSG_GET. FALSE is the default.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_MINIMUMHEIGHT">
      <summary>
            Allows the source to define the minimum height (Y-axis) that the source can acquire.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_MINIMUMWIDTH">
      <summary>
            Allows the source to define the minimum width (X-axis) that the source can acquire.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_AUTODISCARDBLANKPAGES">
      <summary>
            Use this capability to have the Source discard blank images. The Application never sees these
            images during the scanning session.
            TWBP_DISABLE – this must be the default state for the Source. It indicates that all images will be
            delivered to the Application, none of them will be discarded.
            TWBP_AUTO – if this is used, then the Source will decide if an image is blank or not and discard as
            appropriate.
            If the specified value is a positive number in the range 0 to 231–1, then this capability will use it as
            the byte size cutoff point to identify which images are to be discarded. If the size of the image is
            less than or equal to this value, then it will be discarded. If the size of the image is greater than
            this value, then it will be kept so that it can be transferred to the Application.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_FLIPROTATION">
      <summary>
            Flip rotation is used to properly orient images that flip orientation every other image.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_BARCODEDETECTIONENABLED">
      <summary>
            Turns bar code detection on and off.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_SUPPORTEDBARCODETYPES">
      <summary>
            Provides a list of bar code types that can be detected by the current Data Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_BARCODEMAXSEARCHPRIORITIES">
      <summary>
            The maximum number of supported search priorities.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_BARCODESEARCHPRIORITIES">
      <summary>
            A prioritized list of bar code types dictating the order in which bar codes will be sought.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_BARCODESEARCHMODE">
      <summary>
            Restricts bar code searching to certain orientations, or prioritizes one orientation over the other.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_BARCODEMAXRETRIES">
      <summary>
            Restricts the number of times a search will be retried if none are found on each page.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_BARCODETIMEOUT">
      <summary>
            Restricts the total time spent on searching for a bar code on each page.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_ZOOMFACTOR">
      <summary>
            When used with MSG_GET, return all camera supported lens zooming range.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_PATCHCODEDETECTIONENABLED">
      <summary>
            Turns patch code detection on and off.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_SUPPORTEDPATCHCODETYPES">
      <summary>
            A list of patch code types that may be detected by the current Data Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_PATCHCODEMAXSEARCHPRIORITIES">
      <summary>
            The maximum number of supported search priorities.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_PATCHCODESEARCHPRIORITIES">
      <summary>
            A prioritized list of patch code types dictating the order in which patch codes will be sought.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_PATCHCODESEARCHMODE">
      <summary>
            Restricts patch code searching to certain orientations, or prioritizes one orientation over the other.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_PATCHCODEMAXRETRIES">
      <summary>
            Restricts the number of times a search will be retried if none are found on each page.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_PATCHCODETIMEOUT">
      <summary>
            Restricts the total time spent on searching for a patch code on each page.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_FLASHUSED2">
      <summary>
            For devices that support flash. MSG_SET selects the flash to be used (if any). MSG_GET reports the
            current setting. This capability replaces ICAP_FLASHUSED, which is only able to negotiate the
            flash being on or off.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_IMAGEFILTER">
      <summary>
            For devices that support image enhancement filtering. This capability selects the algorithm used
            to improve the quality of the image.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_NOISEFILTER">
      <summary>
            For devices that support noise filtering. This capability selects the algorithm used to remove noise.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_OVERSCAN">
      <summary>
            Overscan is used to scan outside of the boundaries described by ICAP_FRAMES, and is used to
            help acquire image data that may be lost because of skewing.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_AUTOMATICBORDERDETECTION">
      <summary>
            Turns automatic border detection on and off.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_AUTOMATICDESKEW">
      <summary>
            Turns automatic deskew correction on and off.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_AUTOMATICROTATE">
      <summary>
            When TRUE this capability depends on intelligent features within the Source to automatically
            rotate the image to the correct position.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_JPEGQUALITY">
      <summary>
            Use this capability as a shortcut to select JPEG quantization tables that tradeoff quality versus
            compressed image size. Used in concert with DAT_JPEGCOMPRSSION it is possible for an
            Application to obtain the tables that are appropriate for varying percentages of quality within a
            given Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_FEEDERTYPE">
      <summary>
            Allows the Application to set scan parameters depending upon the type of feeder.
            If the Source has a general type of the feeder only, default scan parameters can depend upon the
            type of scan (general document or photo). In this case, negotiating this capability will allow the
            Source adjusting the settings accordingly. It is advised, therefore, that this capability be
            negotiated prior to the capabilities related to specific Source settings (like ICAP_*RESOLUTION,
            ICAP_PIXELTYPE, etc.) but after the other feeder-related capabilities (CAP_FEEDERENABLED,
            CAP_FEEDERLOADED).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_ICCPROFILE">
      <summary>
            Informs the application if the source has an ICC profile and can embed or link it in the current
            ICAP_IMAGEFILEFORMAT. Tells the source if the application would like an ICC profile
            embedded or linked into the image file the source will write.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_AUTOSIZE">
      <summary>
            Force the output image dimensions to match either the current value of ICAP_SUPPORTEDSIZES
            or any of its current allowed values.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_AUTOMATICCROPUSESFRAME">
      <summary>
            Set TRUE if DAT_IMAGELAYOUT, ICAP_SUPPORTEDSIZES or ICAP_FRAMES reduces the amount
            of data captured from the device, potentially improving the performance of the driver, even if any
            automatic detection capability like ICAP_AUTOMATICBORDERDECTION is set TRUE.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_AUTOMATICLENGTHDETECTION">
      <summary>
            Controls the automatic detection of the length of a document, this is intended for use with an
            Automatic Document Feeder.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_AUTOMATICCOLORENABLED">
      <summary>
            The Source automatically detects the pixel type of the image and returns either a color image or a
            non-color image specified by ICAP_AUTOMATICCOLORNONCOLORPIXELTYPE.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_AUTOMATICCOLORNONCOLORPIXELTYPE">
      <summary>
            Specifies the non-color pixel type to use when automatic color is enabled.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_COLORMANAGEMENTENABLED">
      <summary>
            Disables the Source’s color and gamma tables for color and grayscale images, resulting in output
            that that could be termed “raw”.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_IMAGEMERGE">
      <summary>
            Merges the front and rear image of a document in one of four orientations: front on the top, front
            on the bottom, front on the left or front on the right.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_IMAGEMERGEHEIGHTTHRESHOLD">
      <summary>
            Specifies a Y-Offset in ICAP_UNITS units. Front and rear images less than or equal to this value
            are merged according to the settings of ICAP_IMAGEMERGE. If either the front or the rear image is
            greater than this value, they are not merged.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_SUPPORTEDEXTIMAGEINFO">
      <summary>
            Lists all of the information that the Source is capable of returning from a call to DAT_EXTIMAGEINFO.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_FILMTYPE">
      <summary>
            When ICAP_LIGHTPATH is set to TWLP_TRANSMISSIVE it allows an Application to set what kind
            of film is being scanned.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_MIRROR">
      <summary>
            How the Source can/should mirror the scanned image data prior to transfer. Operation is
            performed in conjunction with ICAP_ORIENTATION and ICAP_ROTATION.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ICAP_JPEGSUBSAMPLING">
      <summary>
            Use this capability and ICAP_JPEGQUALITY as a shortcut to select JPEG quantization. Used in
            concert with DAT_JPEGCOMPRSSION it is possible for an Application to obtain the tables that are
            appropriate for varying percentages of quality within a given Source. It has meaning for color
            images only.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ACAP_AUDIOFILEFORMAT">
      <summary>
            Audio file format capability.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPABILITIES.ACAP_XFERMECH">
      <summary>
            Allows the Application and Source to identify which audio transfer mechanisms they have in common.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_JOBCONTROL">
      <summary>
            Allows multiple jobs in batch mode. The application can decide how the job can be processed,
            according to the flags listed below.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_JOBCONTROL.TWJC_NONE">
      <summary>
            No job control.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_JOBCONTROL.TWJC_JSIC">
      <summary>
            Detect and include job separator and continue scanning.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_JOBCONTROL.TWJC_JSIS">
      <summary>
            Detect and include job separator and stop scanning.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_JOBCONTROL.TWJC_JSXC">
      <summary>
            Detect and exclude job separator and continue scanning.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_JOBCONTROL.TWJC_JSXS">
      <summary>
            Detect and exclude job separator and stop scanning.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_ALARMS">
      <summary>
            Turns specific audible alarms on and off.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_ALARMS.TWAL_ALARM">
      <summary>
            Is a catchall for alarms not explicitly listed. It is also used where a device only
            provides control over a single, multi-use alarm. For instance, if a device beeps for both jams and
            bar-codes, but doesn’t allow independent control of the alarms, then it should report
            TWAL_ALARM to cover them, and not TWAL_BARCODE, TWAL_JAM.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_ALARMS.TWAL_FEEDERERROR">
      <summary>
            Covers paper handling errors such as jams, double-feeds, skewing and the
            like; conditions that most likely stop scanning.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_ALARMS.TWAL_FEEDERWARNING">
      <summary>
            Covers non-fatal events, such as feeder empty.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_ALARMS.TWAL_BARCODE">
      <summary>
            Cover paper handling errors.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_ALARMS.TWAL_DOUBLEFEED">
      <summary>
            Cover paper handling errors.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_ALARMS.TWAL_JAM">
      <summary>
            Cover paper handling errors.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_ALARMS.TWAL_PATCHCODE">
      <summary>
            Generate alarms when an image with this kind of data is recognized.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_ALARMS.TWAL_POWER">
      <summary>
            Generates alarms for any changes in power to the device.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_ALARMS.TWAL_SKEW">
      <summary>
            Cover paper handling errors.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_CAMERASIDE">
      <summary>
            Sets the top and bottom values of cameras in a scanning device.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_CAMERASIDE.TWCS_BOTH">
      <summary>
            Both cameras.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_CAMERASIDE.TWCS_TOP">
      <summary>
            Top camera.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_CAMERASIDE.TWCS_BOTTOM">
      <summary>
            Bottom camera.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_CLEARBUFFERS">
      <summary>
            MSG_GET reports presence of data in scanner’s buffers;
            MSG_SET clears the buffers.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_CLEARBUFFERS.TWCB_AUTO">
      <summary>
            Auto buffer clear.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_CLEARBUFFERS.TWCB_CLEAR">
      <summary>
            Buffer clear.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_CLEARBUFFERS.TWCB_NOCLEAR">
      <summary>
            No clear buffer.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT">
      <summary>
            MSG_SET selects which events the Application wants the Source to report. MSG_GET and
            MSG_GETCURRENT gets the current setting. MSG_RESET resets the capability to the empty array
            (no events set).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_CUSTOMEVENTS">
      <summary>
            Baseline for events specific to a given Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_CHECKAUTOMATICCAPTURE">
      <summary>
            The automatic capture settings on the device have been changed by the user.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_CHECKBATTERY">
      <summary>
            The status of the battery has changed.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_CHECKDEVICEONLINE">
      <summary>
            The device has been turned off and on.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_CHECKFLASH">
      <summary>
            The flash setting on the device has been changed by the user.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_CHECKPOWERSUPPLY">
      <summary>
            The power supply has been changed (for instance, the user may have
            just connected AC to a device that was running on battery power).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_CHECKRESOLUTION">
      <summary>
            The x/y resolution setting on the device has been changed by the user.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_DEVICEADDED">
      <summary>
            The user has added a device (for instance a memory card in a digital camera).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_DEVICEOFFLINE">
      <summary>
            A device has become unavailable, but has not been removed.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_DEVICEREADY">
      <summary>
            The device is ready to capture an image.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_DEVICEREMOVED">
      <summary>
            The user has removed a device.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_IMAGECAPTURED">
      <summary>
            The user has captured an image to the device’s internal storage.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_IMAGEDELETED">
      <summary>
            The user has removed an image from the device’s internal storage.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_PAPERDOUBLEFEED">
      <summary>
            Two or more sheets of paper have been fed together.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_PAPERJAM">
      <summary>
            The device’s document feeder has jammed.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_LAMPFAILURE">
      <summary>
            The device’s light source has failed.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_POWERSAVE">
      <summary>
            The device has powered down to save energy.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DEVICEEVENT.TWDE_POWERSAVENOTIFY">
      <summary>
            The device is about to power down to save energy.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_FEEDERALIGNMENT">
      <summary>
            Helps the Application determine any special actions it may need to take when negotiating frames
            with the Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERALIGNMENT.TWFA_NONE">
      <summary>
            The alignment is free-floating. Applications should assume that the origin for
            frames is on the left.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERALIGNMENT.TWFA_LEFT">
      <summary>
            The alignment is to the left.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERALIGNMENT.TWFA_CENTER">
      <summary>
            The alignment is centered. This means that the paper will be fed in the middle
            of the ICAP_PHYSICALWIDTH of the device. If this is set, then the Application should
            calculate any frames with a left offset.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERALIGNMENT.TWFA_RIGHT">
      <summary>
            The alignment is to the right. If this is set, then the Application should calculate
            any frames with a left offset.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_FEEDERORDER">
      <summary>
            Determine if it should reorganize the stream of images received from a Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERORDER.TWFO_FIRSTPAGEFIRST">
      <summary>
            The feeder starts with the top of the first page.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERORDER.TWFO_LASTPAGEFIRST">
      <summary>
            The feeder starts with the top of the last page.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET">
      <summary>
            Report what pockets are available to receive paper as it exits from the device.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKETERROR">
      <summary>
            Pocket error.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET1">
      <summary>
            Pocket 1.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET2">
      <summary>
            Pocket 2.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET3">
      <summary>
            Pocket 3.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET4">
      <summary>
            Pocket 4.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET5">
      <summary>
            Pocket 5.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET6">
      <summary>
            Pocket 6.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET7">
      <summary>
            Pocket 7.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET8">
      <summary>
            Pocket 8.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET9">
      <summary>
            Pocket 9.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET10">
      <summary>
            Pocket 10.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET11">
      <summary>
            Pocket 11.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET12">
      <summary>
            Pocket 12.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET13">
      <summary>
            Pocket 13.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET14">
      <summary>
            Pocket 14.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET15">
      <summary>
            Pocket 15.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_FEEDERPOCKET.TWFP_POCKET16">
      <summary>
            Pocket 16.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_POWERSUPPLY">
      <summary>
            MSG_GET reports the kinds of power available to the device. MSG_GETCURRENT reports the
            current power supply in use.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_POWERSUPPLY.TWPS_EXTERNAL">
      <summary>
            External power supply.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_POWERSUPPLY.TWPS_BATTERY">
      <summary>
            Battery power supply.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_PRINTER">
      <summary>
            MSG_GET returns the current list of available printer devices, along with the one currently being
            used for negotiation. MSG_SET selects the current device for negotiation, and optionally
            constrains the list. MSG_RESET restores all the available devices (useful after MSG_SET has been
            used to constrain the list).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PRINTER.TWPR_IMPRINTERTOPBEFORE">
      <summary>
            Imprinter top before.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PRINTER.TWPR_IMPRINTERTOPAFTER">
      <summary>
            Imprinter top after.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PRINTER.TWPR_IMPRINTERBOTTOMBEFORE">
      <summary>
            Imprinter bottom before.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PRINTER.TWPR_IMPRINTERBOTTOMAFTER">
      <summary>
            Imprinter bottom after.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PRINTER.TWPR_ENDORSERTOPBEFORE">
      <summary>
            Endorser top before.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PRINTER.TWPR_ENDORSERTOPAFTER">
      <summary>
            Endorser top after.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PRINTER.TWPR_ENDORSERBOTTOMBEFORE">
      <summary>
            Endorser bottom before.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PRINTER.TWPR_ENDORSERBOTTOMAFTER">
      <summary>
            Endorser bottom after.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_PRINTERMODE">
      <summary>
            Specifies the appropriate current CAP_PRINTER device mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PRINTERMODE.TWPM_SINGLESTRING">
      <summary>
            Specifies that the printed text will consist of a single string.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PRINTERMODE.TWPM_MULTISTRING">
      <summary>
            Specifies that the printed text will consist of an enumerated list of
            strings to be printed in order.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PRINTERMODE.TWPM_COMPOUNDSTRING">
      <summary>
            Specifies that the printed string will consist of a compound of a
            String followed by a value followed by a suffix string.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_SEGMENTED">
      <summary>
            Describes the segmentation setting for captured images.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_SEGMENTED.TWSG_NONE">
      <summary>
            None segmentation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_SEGMENTED.TWSG_AUTO">
      <summary>
            Auto segmentation.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_DUPLEX">
      <summary>
            This indicates whether the scanner supports duplex. If so, it further indicates whether one-path or
            two-path duplex is supported.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DUPLEX.NONE">
      <summary>
            None duplex.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DUPLEX.ONEPASSDUPLEX">
      <summary>
            One pass duplex.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DUPLEX.TWOPASSDUPLEX">
      <summary>
            Two pass duplex.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_DOUBLEFEEDDETECTION">
      <summary>
            Enables or disables double feed detection.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DOUBLEFEEDDETECTION.TWDF_ULTRASONIC">
      <summary>
            Ultra sonic double feed detection.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DOUBLEFEEDDETECTION.TWDF_BYLENGTH">
      <summary>
            By length double feed detection.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DOUBLEFEEDDETECTION.TWDF_INFRARED">
      <summary>
            Infra redc double feed detection.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_DOUBLEFEEDDETECTIONRESPONSE">
      <summary>
            When CAP_DOUBLEFEEDDETECTION is set to anything but Disabled, it allows an Application to
            set how the source will respond to detecting a double feed.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DOUBLEFEEDDETECTIONRESPONSE.TWDP_STOP">
      <summary>
            When a multi-feed is detected the driver must end the scanner session,
            returning TWCC_PAPERDOUBLEFEED for the an DAT_IMAGE*XFER call that applied to the bad
            image.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DOUBLEFEEDDETECTIONRESPONSE.TWDP_STOPANDWAIT">
      <summary>
            The driver/device will manage the multi-feed; the application is not
            notified; after the problem is fixed by the operator, image capture is continued as if no multifeed
            occurred.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DOUBLEFEEDDETECTIONRESPONSE.TWDP_SOUND">
      <summary>
            The driver/device will generate an audible alert when a multi-feed is detected
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DOUBLEFEEDDETECTIONRESPONSE.TWDP_DONOTIMPRINT">
      <summary>
            the device will not print on multi-fed documents. All combinations
            are valid, excluding TWDP_STOP and TWDP_STOPANDWAIT as only one of those can appear at
            a time. If the driver is asked for both, it may pick one and return TWRC_CHECKSTATUS.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_DOUBLEFEEDDETECTIONSENSITIVITY">
      <summary>
            When CAP_DOUBLEFEEDDETECTION includes TWDF_ULTRASONIC, allows an Application to set
            how sensitive the double feed detection is.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DOUBLEFEEDDETECTIONSENSITIVITY.TWDUS_LOW">
      <summary>
            Low double feed sensitivity.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DOUBLEFEEDDETECTIONSENSITIVITY.TWUS_MEDIUM">
      <summary>
            Medium double feed sensitivity.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DOUBLEFEEDDETECTIONSENSITIVITY.TWUS_HIGH">
      <summary>
            High double feed sensitivity.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_DOUBLEFEEDDETECTIONSENSITIVITY.TWDP_DONOTIMPRINT">
      <summary>
            Do not imprint double feed sensitivity.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_INDICATORSMODE">
      <summary>
            Specify what messages can be displayed if ICAP_INDICATORS is TRUE.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_INDICATORSMODE.TWCI_INFO">
      <summary>
            Info message mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_INDICATORSMODE.TWCI_WARNING">
      <summary>
            Warning message mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_INDICATORSMODE.TWCI_ERROR">
      <summary>
            Error message mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_INDICATORSMODE.TWCI_WARMUP">
      <summary>
            Warm up message mode.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAP_PAPERHANDLING">
      <summary>
            Use this capability to control paper handling. This capability may affect scanning speed.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PAPERHANDLING.TWPH_NORMAL">
      <summary>
            Normal papper handling.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PAPERHANDLING.TWPH_FRAGILE">
      <summary>
            Fragile papper handling.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PAPERHANDLING.TWPH_THICK">
      <summary>
            Thick papper handling.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PAPERHANDLING.TWPH_TRIFOLD">
      <summary>
            Trifold papper handling.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAP_PAPERHANDLING.TWPH_PHOTOGRAPH">
      <summary>
            Photograph papper handling.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_FEEDERTYPE">
      <summary>
            Allows the Application to set scan parameters depending upon the type of feeder.
            If the Source has a general type of the feeder only, default scan parameters can depend upon the
            type of scan (general document or photo). In this case, negotiating this capability will allow the
            Source adjusting the settings accordingly. It is advised, therefore, that this capability be
            negotiated prior to the capabilities related to specific Source settings (like ICAP_*RESOLUTION,
            ICAP_PIXELTYPE, etc.) but after the other feeder-related capabilities (CAP_FEEDERENABLED,
            CAP_FEEDERLOADED).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FEEDERTYPE.TWFE_GENERAL">
      <summary>
            General feeder type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FEEDERTYPE.TWFE_PHOTO">
      <summary>
            Photo feeder type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_FILTER">
      <summary>
            Describes the color characteristic of the subtractive filter applied to the image data. Multiple
            filters may be applied to a single acquisition.
            If the Source supports DAT_FILTER as well, then it will apply the filter set by the last SET
            operation invoked by the Application. Setting/Resetting ICAP_FILTER will clear the filter
            associated with DAT_FILTER. Setting/Resetting DAT_FILTER will clear the filter associated with
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FILTER.TWFT_RED">
      <summary>
            Filter red color.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FILTER.TWFT_GREEN">
      <summary>
            Filter green color.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FILTER.TWFT_BLUE">
      <summary>
            Filter blue color.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FILTER.TWFT_NONE">
      <summary>
            Filter none color.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FILTER.TWFT_WHITE">
      <summary>
            Filter white color.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FILTER.TWFT_CYAN">
      <summary>
            Filter cyan color.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FILTER.TWFT_MAGENTA">
      <summary>
            Filter magenta color.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FILTER.TWFT_YELLOW">
      <summary>
            Filter yellow color.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FILTER.TWFT_BLACK">
      <summary>
            Filter black color.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_LIGHTPATH">
      <summary>
            Describes whether the image was captured transmissively or reflectively.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_LIGHTPATH.TWLP_REFLECTIVE">
      <summary>
            Reflectively image capture.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_LIGHTPATH.TWLP_TRANSMISSIVE">
      <summary>
             Transmissively image capture.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_LIGHTSOURCE">
      <summary>
            Describes the general color characteristic of the light source used to acquire the image.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_LIGHTSOURCE.TWLS_RED">
      <summary>
            Red color light source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_LIGHTSOURCE.TWLS_GREEN">
      <summary>
            Green color light source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_LIGHTSOURCE.TWLS_BLUE">
      <summary>
            Blue color light source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_LIGHTSOURCE.TWLS_NONE">
      <summary>
            None color light source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_LIGHTSOURCE.TWLS_WHITE">
      <summary>
            White color light source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_LIGHTSOURCE.TWLS_UV">
      <summary>
            Ultra violet color light source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_LIGHTSOURCE.TWLS_IR">
      <summary>
            Infra red color light source.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_PLANARCHUNKY">
      <summary>
            Allows the application and Source to identify which color data formats are available.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PLANARCHUNKY.TWPC_CHUNKY">
      <summary>
            Chunky color data.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PLANARCHUNKY.TWPC_PLANAR">
      <summary>
            Planar color data.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_PIXELFLAVOR">
      <summary>
            Sense of the pixel whose numeric value is zero (minimum data value).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELFLAVOR.CHOCOLATE">
      <summary>
            This pixel represents the darkest data value that can be generated by the
            device (the darkest available optical value may measure greater than 0).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELFLAVOR.VANILLA">
      <summary>
            This pixel represents the lightest data value that can be generated by the
            device (the lightest available optical value may measure greater than 0).
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_BITDEPTHREDUCTION">
      <summary>
            Specifies the Reduction Method the Source should use to reduce the bit depth of the data. Most
            commonly used with ICAP_PIXELTYPE = TWPT_BW to reduce gray data to black and white.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_BITDEPTHREDUCTION.TWBR_THRESHOLD">
      <summary>
            Threshold reduction method.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_BITDEPTHREDUCTION.TWBR_HALFTONE">
      <summary>
            Halftone reduction method.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_BITDEPTHREDUCTION.TWBR_CUSTHALFTONE">
      <summary>
            Custom Halftone reduction method.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_BITDEPTHREDUCTION.TWBR_DIFFUSION">
      <summary>
            Diffusion reduction method.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES">
      <summary>
            Provides a list of bar code types that can be detected by the current Data Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_3OF9">
      <summary>
            Code 39 bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_2OF5INTERLEAVED">
      <summary>
            2of5 Interleaved bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_2OF5NONINTERLEAVED">
      <summary>
            2of5 non interleaved bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_CODE93">
      <summary>
            Code 93 bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_CODE128">
      <summary>
            Code 128 bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_UCC128">
      <summary>
            UCC 128 bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_CODABAR">
      <summary>
            Codabar bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_UPCA">
      <summary>
            UPCA bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_UPCE">
      <summary>
            UPCE bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_EAN8">
      <summary>
            EAN8 bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_EAN13">
      <summary>
            EAN13 bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_POSTNET">
      <summary>
            POSTNET bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_PDF417">
      <summary>
            PDF417 bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_2OF5INDUSTRIAL">
      <summary>
            2of5 industrial bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_2OF5MATRIX">
      <summary>
            2of5 Matrix bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_2OF5DATALOGIC">
      <summary>
            2of5 Datalogic bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_2OF5IATA">
      <summary>
            2of5 IATA bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_3OF9FULLASCII">
      <summary>
            3of9 Full ASCII bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_CODABARWITHSTARTSTOP">
      <summary>
            Codabar with start stop bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_MAXICODE">
      <summary>
            MAXICODE bacode type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDBARCODETYPES.TWBT_QRCODE">
      <summary>
            QRCODE bacode type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_AUTODISCARDBLANKPAGES">
      <summary>
            Use this capability to have the Source discard blank images. 
            The Application never sees these images during the scanning session.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_AUTODISCARDBLANKPAGES.DISABLE">
      <summary>
            Disable auto discard blank pages.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_AUTODISCARDBLANKPAGES.AUTO">
      <summary>
            Enable auto discard blank pages.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_AUTOSIZE">
      <summary>
            Force the output image dimensions to match either the current value of ICAP_SUPPORTEDSIZES
            or any of its current allowed values.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_AUTOSIZE.NONE">
      <summary>
            Auto size disabled.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_AUTOSIZE.AUTO">
      <summary>
            Auto size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_AUTOSIZE.CURRENT">
      <summary>
            Current size
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TW_PALETTE8">
      <summary>
             Palette types for TW_PALETTE8.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TW_PALETTE8.TWPA_RGB">
      <summary>
            RGB palette type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TW_PALETTE8.TWPA_GRAY">
      <summary>
            GRAY palette type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TW_PALETTE8.TWPA_CMY">
      <summary>
            CMY palette type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_BITORDER">
      <summary>
            Specifies how the bytes in an image are filled by the Source. TWBO_MSBFIRST indicates that the
             leftmost bit in the byte (usually bit 7) is the byte’s Most Significant Bit.
             </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_BITORDER.TWBO_LSBFIRST">
      <summary>
            Left most significant bit first.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_BITORDER.TWBO_MSBFIRST">
      <summary>
            Most significant bit first.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_ICCPROFILE">
      <summary>
            Informs the application if the source has an ICC profile and can embed or link it in the current
            ICAP_IMAGEFILEFORMAT. Tells the source if the application would like an ICC profile
            embedded or linked into the image file the source will write.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_ICCPROFILE.TWIC_NONE">
      <summary>
            None profile.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_ICCPROFILE.TWIC_LINK">
      <summary>
            Link profile.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_ICCPROFILE.TWIC_EMBED">
      <summary>
            Embed profile.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_BARCODESEARCHMODE">
      <summary>
            Restricts bar code searching to certain orientations, or prioritizes one orientation over the other.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_BARCODESEARCHMODE.TWBD_HORZ">
      <summary>
            Horizontal search.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_BARCODESEARCHMODE.TWBD_VERT">
      <summary>
            Vertical search.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_BARCODESEARCHMODE.TWBD_HORZVERT">
      <summary>
            Horizontal and vertical search.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_BARCODESEARCHMODE.TWBD_VERTHORZ">
      <summary>
            Vertical and horizontal search.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_FLASHUSED2">
      <summary>
            For devices that support a flash, MSG_SET selects the flash to be
            used; MSG_GET reports the current setting.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FLASHUSED2.TWFL_NONE">
      <summary>
            None flash.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FLASHUSED2.TWFL_OFF">
      <summary>
            Flash off.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FLASHUSED2.TWFL_ON">
      <summary>
            Flash on.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FLASHUSED2.TWFL_AUTO">
      <summary>
            Flash auto.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FLASHUSED2.TWFL_REDEYE">
      <summary>
            Flash red eye.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_FILMTYPE">
      <summary>
            When ICAP_LIGHTPATH is set to TWLP_TRANSMISSIVE it allows an Application to set what kind
            of film is being scanned.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FILMTYPE.TWFT_POSITIVE">
      <summary>
            Positive film type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FILMTYPE.TWBD_NEGATIVE">
      <summary>
            Negative film type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEMERGE">
      <summary>
            Merges the front and rear image of a document in one of four
            orientations: front on the top.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEMERGE.TWIM_NONE">
      <summary>
            None image merge.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEMERGE.TWIM_FRONTONTOP">
      <summary>
            Front on top image merge.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEMERGE.TWIM_FRONTTOBOTTOM">
      <summary>
            Front on bottom image merge.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEMERGE.TWIM_FRONTTOLEFT">
      <summary>
            Front on left image merge.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEMERGE.TWIM_FRONTTORIGHT">
      <summary>
            Front on right image merge.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILTER">
      <summary>
            For devices that support image enhancement filtering. This capability selects the algorithm used
            to improve the quality of the image.
            </summary>/* ICAP_IMAGEFILTER values (IF_ means image filter) */
        </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILTER.TWIF_NONE">
      <summary>
            None image filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILTER.TWIF_AUTO">
      <summary>
            Auto image filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILTER.TWIF_LOWPASS">
      <summary>
            Good for halftone images.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILTER.TWIF_BANDPASS">
      <summary>
            Good for improving text.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILTER.TWIF_HIGHPASS">
      <summary>
            Good for improving fine lines.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILTER.TWIF_TEXT">
      <summary>
            Good for improving text.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILTER.TWIF_FINELINE">
      <summary>
            Good for improving fine lines.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_NOISEFILTER">
      <summary>
            For devices that support noise filtering. This capability selects the algorithm used to remove noise.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_NOISEFILTER.TWNF_NONE">
      <summary>
            None noise filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_NOISEFILTER.TWNF_AUTO">
      <summary>
            Auto noise filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_NOISEFILTER.TWNF_LONEPIXEL">
      <summary>
            Lone pixel noise filter.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_NOISEFILTER.TWNF_MAJORITYRULE">
      <summary>
            Majority rule noise filter.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_OVERSCAN">
      <summary>
            Overscan is used to scan outside of the boundaries described by ICAP_FRAMES, and is used to
            help acquire image data that may be lost because of skewing.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_OVERSCAN.TWOV_NONE">
      <summary>
            None overscan.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_OVERSCAN.TWOV_AUTO">
      <summary>
            Auto overscan.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_OVERSCAN.TWOV_TOPBOTTOM">
      <summary>
            Top bottom overscan.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_OVERSCAN.TWOV_LEFTRIGHT">
      <summary>
            Left right overscan.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_OVERSCAN.TWOV_ALL">
      <summary>
            All overscan.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_FLIPROTATION">
      <summary>
            Flip rotation is used to properly orient images that flip orientation every other image.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FLIPROTATION.BOOK">
      <summary>
            Book flip rotation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_FLIPROTATION.FANFOLD">
      <summary>
            Fan fold flip rotation.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT">
      <summary>
            Informs the application which file formats the Source can generate (MSG_GET). Tells the Source
            which file formats the application can handle (MSG_SET).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.TIFF">
      <summary>
            Used for document imaging. Native Linux format.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.PICT">
      <summary>
            Native Macintosh format
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.BMP">
      <summary>
            Native Microsoft format
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.XBM">
      <summary>
            Used for document imaging
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.JFIF">
      <summary>
            Wrapper for JPEG images
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.FPX">
      <summary>
            FlashPix, used with digital cameras
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.TIFFMULTI">
      <summary>
            Multi-page TIFF files
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.PNG">
      <summary>
            An image format standard intended for use on the web, replaces GIF
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.SPIFF">
      <summary>
            A standard from JPEG, intended to replace JFIF, also supports JBIG
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.EXIF">
      <summary>
            File format for use with digital cameras.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.PDF">
      <summary>
            A file format from Adobe.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.JP2">
      <summary>
            A file format from the Joint Photographic Experts Group ISO/IEC 15444-1
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.JPX">
      <summary>
            A file format from the Joint Photographic Experts Group ISO/IEC 15444-2
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.DEJAVU">
      <summary>
            A file format from LizardTech
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.PDFA">
      <summary>
            A file format from Adobe PDF/A, Version 1
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_IMAGEFILEFORMAT.PDFA2">
      <summary>
            A file format from Adobe PDF/A, Version 2
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_ORIENTATION">
      <summary>
            Defines which edge of the “paper” the image’s “top” is aligned with. This information is used to
            adjust the frames to match the scanning orientation of the paper.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_ORIENTATION.ROT0">
      <summary>
            0 degree's orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_ORIENTATION.ROT90">
      <summary>
            90 degree's orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_ORIENTATION.ROT180">
      <summary>
            180 degree's orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_ORIENTATION.ROT270">
      <summary>
            270 degree's orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_ORIENTATION.PORTRAIT">
      <summary>
            0 degree's orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_ORIENTATION.LANDSCAPE">
      <summary>
            270 degree's orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_ORIENTATION.AUTO">
      <summary>
            Auto orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_ORIENTATION.AUTOTEXT">
      <summary>
            Auto text orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_ORIENTATION.AUTOPICTURE">
      <summary>
            Auto picture orientation.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES">
      <summary>
            For devices that support fixed frame sizes. Defined sizes match typical page sizes. This specifies
            the size(s) the Source can/should use to acquire image data.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.NONE">
      <summary>
            None supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.A4LETTER">
      <summary>
            A4 letter supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.B5LETTER">
      <summary>
            B5 letter supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.USLETTER">
      <summary>
            US letter supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.USLEGAL">
      <summary>
            US legal supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.A5">
      <summary>
            A5 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.B4">
      <summary>
            B4 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.B6">
      <summary>
            B6 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.USLEDGER">
      <summary>
            US ledger supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.USEXECUTIVE">
      <summary>
            US executive supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.A3">
      <summary>
            A3 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.B3">
      <summary>
            B3 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.A6">
      <summary>
            A6 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.C4">
      <summary>
            C4 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.C5">
      <summary>
            C5 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.C6">
      <summary>
            C6 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES._4A0">
      <summary>
            4A0 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES._2A0">
      <summary>
            2A0 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.A0">
      <summary>
            A0 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.A1">
      <summary>
            A1 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.A2">
      <summary>
            A2 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.A4">
      <summary>
            A4 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.A7">
      <summary>
            A7 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.A8">
      <summary>
            A8 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.A9">
      <summary>
            A9 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.A10">
      <summary>
            A10 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.ISOB0">
      <summary>
            ISOB0 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.ISOB1">
      <summary>
            ISOB1 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.ISOB2">
      <summary>
            ISOB2 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.ISOB3">
      <summary>
            ISOB3 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.ISOB4">
      <summary>
            ISOB4 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.ISOB5">
      <summary>
            ISOB5 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.ISOB6">
      <summary>
            ISOB6 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.ISOB7">
      <summary>
            ISOB7 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.ISOB8">
      <summary>
            ISOB8 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.ISOB9">
      <summary>
            ISOB9 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.ISOB10">
      <summary>
            ISOB10 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.JISB0">
      <summary>
            JISOB0 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.JISB1">
      <summary>
            JISOB1 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.JISB2">
      <summary>
            JISOB2 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.JISB3">
      <summary>
            JISOB3 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.JISB4">
      <summary>
            JISOB4 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.JISB5">
      <summary>
            JISOB5 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.JISB6">
      <summary>
            JISOB6 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.JISB7">
      <summary>
            JISOB7 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.JISB8">
      <summary>
            JISOB8 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.JISB9">
      <summary>
            JISOB9 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.JISB10">
      <summary>
            JISOB10 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.C0">
      <summary>
            C0 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.C1">
      <summary>
            C1 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.C2">
      <summary>
            C2 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.C3">
      <summary>
            C3 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.C7">
      <summary>
            C7 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.C8">
      <summary>
            C8 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.C9">
      <summary>
            C9 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.C10">
      <summary>
            C10 supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.USSTATEMENT">
      <summary>
            US statement supported size.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_SUPPORTEDSIZES.BUSINESSCARD">
      <summary>
            Business card supported size.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_PIXELTYPE">
      <summary>
            The type of pixel data that a Source is capable of acquiring (for example, black and white, gray, RGB, etc.).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELTYPE.BW">
      <summary>
            Black and white pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELTYPE.GRAY">
      <summary>
            Gray pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELTYPE.RGB">
      <summary>
            RGB pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELTYPE.PALETTE">
      <summary>
            Pallete pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELTYPE.CMY">
      <summary>
            CMY pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELTYPE.CMYK">
      <summary>
            CMYK pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELTYPE.YUV">
      <summary>
            YUV pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELTYPE.YUVK">
      <summary>
            YUVK pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELTYPE.CIEXYZ">
      <summary>
            CIEXYZ pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELTYPE.LAB">
      <summary>
            LAB pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELTYPE.SRGB">
      <summary>
            SRGB pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELTYPE.SCRGB">
      <summary>
            SCRGB pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PIXELTYPE.INFRARED">
      <summary>
            Infrared pixel type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_JPEGPIXELTYPE">
      <summary>
            Allows the application and Source to agree upon a common set of color descriptors that are made
            available by the Source. This ICAP is only useful for JPEG-compressed buffered memory image
            transfers.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGPIXELTYPE.BW">
      <summary>
            Black and white JPG pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGPIXELTYPE.GRAY">
      <summary>
            Gray JPG pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGPIXELTYPE.RGB">
      <summary>
            RGB JPG pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGPIXELTYPE.PALETTE">
      <summary>
            Pallete JPG pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGPIXELTYPE.CMY">
      <summary>
            CMY JPG pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGPIXELTYPE.CMYK">
      <summary>
            CMYK JPG pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGPIXELTYPE.YUV">
      <summary>
            YUV JPG pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGPIXELTYPE.YUVK">
      <summary>
            YUVK JPG pixel type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGPIXELTYPE.CIEXYZ">
      <summary>
            CIEXYZ JPG pixel type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_JPEGSUBSAMPLING">
      <summary>
            Use this capability and ICAP_JPEGQUALITY as a shortcut to select JPEG quantization. Used in
            concert with DAT_JPEGCOMPRSSION it is possible for an Application to obtain the tables that are
            appropriate for varying percentages of quality within a given Source. It has meaning for color
            images only.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGSUBSAMPLING.TWJS_444YCBCR">
      <summary>
            444YCBCR JPEG sub sampling.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGSUBSAMPLING.TWJS_444RGB">
      <summary>
            444RGB JPEG sub sampling.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGSUBSAMPLING.TWJS_422">
      <summary>
            422 JPEG sub sampling.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGSUBSAMPLING.TWJS_421">
      <summary>
            421 JPEG sub sampling.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGSUBSAMPLING.TWJS_411">
      <summary>
            411 JPEG sub sampling.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGSUBSAMPLING.TWJS_420">
      <summary>
            420 JPEG sub sampling.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGSUBSAMPLING.TWJS_410">
      <summary>
            410 JPEG sub sampling.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGSUBSAMPLING.TWJS_311">
      <summary>
            311 JPEG sub sampling.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_MIRROR">
      <summary>
            How the Source can/should mirror the scanned image data prior to transfer. Operation is
            performed in conjunction with ICAP_ORIENTATION and ICAP_ROTATION.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_MIRROR.TWNF_NONE">
      <summary>
            None mirror type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_MIRROR.TWNF_VERTICAL">
      <summary>
            Vertical mirror type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_MIRROR.TWNF_HORIZONTAL">
      <summary>
            Horizontal mirror type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_PATCHCODESEARCHMODE">
      <summary>
            Restricts patch code searching to certain orientations, or prioritizes one orientation over the other.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PATCHCODESEARCHMODE.TWBD_HORZ">
      <summary>
            Horizontal search mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PATCHCODESEARCHMODE.TWBD_VERT">
      <summary>
            Vertical search mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PATCHCODESEARCHMODE.TWBD_HORZVERT">
      <summary>
            Horizontal and vertical search mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_PATCHCODESEARCHMODE.TWBD_VERTHORZ">
      <summary>
            Vertical and horizontal search mode.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_JPEGQUALITY">
      <summary>
            Use this capability as a shortcut to select JPEG quantization tables that tradeoff quality versus
            compressed image size. Used in concert with DAT_JPEGCOMPRSSION it is possible for an
            Application to obtain the tables that are appropriate for varying percentages of quality within a
            given Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGQUALITY.TWJQ_UNKNOWN">
      <summary>
            Unknown JPEG quality.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGQUALITY.TWJQ_LOW">
      <summary>
            Low JPEG quality.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGQUALITY.TWJQ_MEDIUM">
      <summary>
            Medium JPEG quality.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_JPEGQUALITY.TWJQ_HIGH">
      <summary>
            High JPEG quality.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION">
      <summary>
            Allows the application and Source to identify which compression schemes they have in common
            for Buffered Memory and File transfers.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.NONE">
      <summary>
            None compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.PACKBITS">
      <summary>
            Packbits compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.GROUP31D">
      <summary>
            Group 3 1D compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.GROUP31DEOL">
      <summary>
            Group 3 1D EOL compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.GROUP32D">
      <summary>
            Group 3 2D compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.GROUP4">
      <summary>
            Group 4 compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.JPEG">
      <summary>
            JPEG compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.LZW">
      <summary>
            LZW compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.JBIG">
      <summary>
            JBIG compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.PNG">
      <summary>
            PNG compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.RLE4">
      <summary>
            RLE4 compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.RLE8">
      <summary>
            RLE8 compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.BITFIELDS">
      <summary>
            BITFIELDS compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.ZIP">
      <summary>
            ZIP compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_COMPRESSION.JPEG2000">
      <summary>
            JPEG 2000 compression.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_XFERMECH">
      <summary>
            Allows the application and Source to identify which transfer mechanisms the source supports.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_XFERMECH.NATIVE">
      <summary>
            Native transfer mechanism.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_XFERMECH.FILE">
      <summary>
            File transfer mechanism.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_XFERMECH.MEMORY">
      <summary>
            Memory transfer mechanism.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_XFERMECH.FILE2">
      <summary>
            File transfer mechanism for Mac.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_XFERMECH.MEMFILE">
      <summary>
            Memory file transfer mechanism.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ICAP_UNITS">
      <summary>
            Unless a quantity is dimensionless or uses a specified unit of measure, ICAP_UNITS determines
            the unit of measure for all quantities.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_UNITS.INCHES">
      <summary>
            Inches unit.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_UNITS.CENTIMETERS">
      <summary>
            Centimeters unit.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_UNITS.PICAS">
      <summary>
            Picas unit.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_UNITS.POINTS">
      <summary>
            Points unit.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_UNITS.TWIPS">
      <summary>
            TWIPS unit.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_UNITS.PIXELS">
      <summary>
            Pixels unit.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.ICAP_UNITS.MILLIMETERS">
      <summary>
            Millimiters unit.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TWEI_DESKEWSTATUS">
      <summary>
            Returns the status of the deskew operation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_DESKEWSTATUS.TWDSK_SUCCESS">
      <summary>
            Image successfully deskewed.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_DESKEWSTATUS.TWDSK_REPORTONLY">
      <summary>
            Deskew information only.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_DESKEWSTATUS.TWDSK_FAIL">
      <summary>
            Deskew failed.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_DESKEWSTATUS.TWDSK_DISABLED">
      <summary>
            Deskew engine not enabled.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TWEI_BARCODEROTATION">
      <summary>
            The bar code’s orientation on the scanned image is described in
            reference to a Western-style interpretation of the image.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_BARCODEROTATION.TWBCOR_ROT0">
      <summary>
            Normal reading orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_BARCODEROTATION.TWBCOR_ROT90">
      <summary>
            Rotated 90 degrees clockwise.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_BARCODEROTATION.TWBCOR_ROT180">
      <summary>
            Rotated 180 degrees clockwise.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_BARCODEROTATION.TWBCOR_ROT270">
      <summary>
            Rotated 270 degrees clockwise.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_BARCODEROTATION.TWBCOR_ROTX">
      <summary>
            The orientation is not known.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TWEI_PATCHCODE">
      <summary>
            The patch code detected.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_PATCHCODE.TWPCH_PATCH1">
      <summary>
            Patch code ´0.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_PATCHCODE.TWPCH_PATCH2">
      <summary>
            Patch code 1.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_PATCHCODE.TWPCH_PATCH3">
      <summary>
            Patch code 2.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_PATCHCODE.TWPCH_PATCH4">
      <summary>
            Patch code 3.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_PATCHCODE.TWPCH_PATCH6">
      <summary>
            Patch code 4.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI_PATCHCODE.TWPCH_PATCHT">
      <summary>
            Patch code 5.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.COUNTRY">
      <summary>
            Countries.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.AFGHANISTAN">
      <summary>
            AFGHANISTAN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ALGERIA">
      <summary>
            ALGERIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.AMERICANSAMOA">
      <summary>
            AMERICAN SAMOA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ANDORRA">
      <summary>
            ANDORRA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ANGOLA">
      <summary>
            ANGOLA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ANGUILLA">
      <summary>
            ANGUILLA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ANTIGUA">
      <summary>
            ANTIGUA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ARGENTINA">
      <summary>
            ARGENTINA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ARUBA">
      <summary>
            ARUBA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ASCENSIONI">
      <summary>
            ASCENSIONI country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.AUSTRALIA">
      <summary>
            AUSTRALIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.AUSTRIA">
      <summary>
            AUSTRIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BAHAMAS">
      <summary>
            BAHAMAS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BAHRAIN">
      <summary>
            BAHRAIN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BANGLADESH">
      <summary>
            BANGLADESH country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BARBADOS">
      <summary>
            BARBADOS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BELGIUM">
      <summary>
            BELGIUM country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BELIZE">
      <summary>
            BELIZE country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BENIN">
      <summary>
            BENIN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BERMUDA">
      <summary>
            BERMUDA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BHUTAN">
      <summary>
            BHUTAN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BOLIVIA">
      <summary>
            BOLIVIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BOTSWANA">
      <summary>
            BOTSWANA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BRITAIN">
      <summary>
            BRITAIN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BRITVIRGINIS">
      <summary>
            BRITVIRGINIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BRAZIL">
      <summary>
            BRAZIL country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BRUNEI">
      <summary>
            BRUNEI country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BULGARIA">
      <summary>
            BULGARIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BURKINAFASO">
      <summary>
            BURKINAFASO country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BURMA">
      <summary>
            BURMA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BURUNDI">
      <summary>
            BURUNDI country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CAMAROON">
      <summary>
            CAMAROON country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CANADA">
      <summary>
            CANADA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CAPEVERDEIS">
      <summary>
            CAPEVERDEIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CAYMANIS">
      <summary>
            CAYMANIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CENTRALAFREP">
      <summary>
            CENTRALAFREP country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CHAD">
      <summary>
            CHAD country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CHILE">
      <summary>
            CHILE country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CHINA">
      <summary>
            CHINA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CHRISTMASIS">
      <summary>
            CHRISTMASIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.COCOSIS">
      <summary>
            COCOSIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.COLOMBIA">
      <summary>
            COLOMBIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.COMOROS">
      <summary>
            COMOROS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CONGO">
      <summary>
            CONGO country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.COOKIS">
      <summary>
            COOKIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.COSTARICA">
      <summary>
            COSTARICA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CUBA">
      <summary>
            CUBA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CYPRUS">
      <summary>
            CYPRUS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CZECHOSLOVAKIA">
      <summary>
            CZECHOSLOVAKIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.DENMARK">
      <summary>
            DENMARK country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.DJIBOUTI">
      <summary>
            DJIBOUTI country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.DOMINICA">
      <summary>
            DOMINICA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.DOMINCANREP">
      <summary>
            DOMINCANREP country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.EASTERIS">
      <summary>
            EASTERIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ECUADOR">
      <summary>
            ECUADOR country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.EGYPT">
      <summary>
            EGYPT country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ELSALVADOR">
      <summary>
            ELSALVADOR country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.EQGUINEA">
      <summary>
            EQGUINEA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ETHIOPIA">
      <summary>
            ETHIOPIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.FALKLANDIS">
      <summary>
            FALKLANDIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.FAEROEIS">
      <summary>
            FAEROEIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.FIJIISLANDS">
      <summary>
            FIJIISLANDS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.FINLAND">
      <summary>
            FINLAND country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.FRANCE">
      <summary>
            FRANCE country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.FRANTILLES">
      <summary>
            FRANTILLES country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.FRGUIANA">
      <summary>
            FRGUIANA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.FRPOLYNEISA">
      <summary>
            FRPOLYNEISA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.FUTANAIS">
      <summary>
            FUTANAIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GABON">
      <summary>
            GABON country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GAMBIA">
      <summary>
            GAMBIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GERMANY">
      <summary>
            GERMANY country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GHANA">
      <summary>
            GHANA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GIBRALTER">
      <summary>
            GIBRALTER country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GREECE">
      <summary>
            GREECE country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GREENLAND">
      <summary>
            GREENLAND country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GRENADA">
      <summary>
            GRENADA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GRENEDINES">
      <summary>
            GRENEDINES country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GUADELOUPE">
      <summary>
            GUADELOUPE country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GUAM">
      <summary>
            GUAM country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GUANTANAMOBAY">
      <summary>
            GUANTANAMOBAY country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GUATEMALA">
      <summary>
            GUATEMALA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GUINEA">
      <summary>
            GUINEA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GUINEABISSAU">
      <summary>
            GUINEABISSAU country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GUYANA">
      <summary>
            GUYANA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.HAITI">
      <summary>
            HAITI country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.HONDURAS">
      <summary>
            HONDURAS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.HONGKONG">
      <summary>
            HONG KONG country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.HUNGARY">
      <summary>
            HUNGARY country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ICELAND">
      <summary>
            ICELAND country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.INDIA">
      <summary>
            INDIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.INDONESIA">
      <summary>
            INDONESIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.IRAN">
      <summary>
            IRAN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.IRAQ">
      <summary>
            IRAQ country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.IRELAND">
      <summary>
            IRELAND country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ISRAEL">
      <summary>
            ISRAEL country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ITALY">
      <summary>
            ITALY country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.IVORYCOAST">
      <summary>
            IVORYCOAST country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.JAMAICA">
      <summary>
            JAMAICA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.JAPAN">
      <summary>
            JAPAN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.JORDAN">
      <summary>
            JORDAN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.KENYA">
      <summary>
            KENYA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.KIRIBATI">
      <summary>
            KIRIBATI country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.KOREA">
      <summary>
            KOREA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.KUWAIT">
      <summary>
            KUWAIT country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.LAOS">
      <summary>
            LAOS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.LEBANON">
      <summary>
            LEBANON country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.LIBERIA">
      <summary>
            LIBERIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.LIBYA">
      <summary>
            LIBYA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.LIECHTENSTEIN">
      <summary>
            LIECHTENSTEIN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.LUXENBOURG">
      <summary>
            LUXENBOURG country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MACAO">
      <summary>
            MACAO country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MADAGASCAR">
      <summary>
            MADAGASCAR country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MALAWI">
      <summary>
            MALAWI country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MALAYSIA">
      <summary>
            MALAYSIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MALDIVES">
      <summary>
            MALDIVES country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MALI">
      <summary>
            MALI country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MALTA">
      <summary>
            MALTA  country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MARSHALLIS">
      <summary>
            MARSHALLIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MAURITANIA">
      <summary>
            MAURITANIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MAURITIUS">
      <summary>
            MAURITIUS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MEXICO">
      <summary>
            MEXICO country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MICRONESIA">
      <summary>
            MICRONESIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MIQUELON">
      <summary>
            MIQUELON country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MONACO">
      <summary>
            MONACO country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MONGOLIA">
      <summary>
            MONGOLIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MONTSERRAT">
      <summary>
            MONTSERRAT country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MOROCCO">
      <summary>
            MOROCCO country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MOZAMBIQUE">
      <summary>
            MOZAMBIQUE country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NAMIBIA">
      <summary>
            NAMIBIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NAURU">
      <summary>
            NAURU country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NEPAL">
      <summary>
            NEPAL country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NETHERLANDS">
      <summary>
            NETHERLANDS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NETHANTILLES">
      <summary>
            NETHANTILLES country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NEVIS">
      <summary>
            NEVIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NEWCALEDONIA">
      <summary>
            NEWCALEDONIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NEWZEALAND">
      <summary>
            NEWZEALAND country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NICARAGUA">
      <summary>
            NICARAGUA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NIGER">
      <summary>
            NIGER country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NIGERIA">
      <summary>
            NIGERIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NIUE">
      <summary>
            NIUE country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NORFOLKI">
      <summary>
            NORFOLKI country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NORWAY">
      <summary>
            NORWAY country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.OMAN">
      <summary>
            OMAN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.PAKISTAN">
      <summary>
            PAKISTAN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.PALAU">
      <summary>
            PALAU country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.PANAMA">
      <summary>
            PANAMA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.PARAGUAY">
      <summary>
            PARAGUAY country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.PERU">
      <summary>
            PERU country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.PHILLIPPINES">
      <summary>
            PHILLIPPINES country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.PITCAIRNIS">
      <summary>
            PITCAIRNIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.PNEWGUINEA">
      <summary>
            PNEWGUINEA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.POLAND">
      <summary>
            POLAND country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.PORTUGAL">
      <summary>
            PORTUGAL country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.QATAR">
      <summary>
            QATAR country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.REUNIONI">
      <summary>
            REUNIONI country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ROMANIA">
      <summary>
            ROMANIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.RWANDA">
      <summary>
            RWANDA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SAIPAN">
      <summary>
            SAIPAN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SANMARINO">
      <summary>
            SANMARINO country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SAOTOME">
      <summary>
            SAOTOME country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SAUDIARABIA">
      <summary>
            SAUDIARABIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SENEGAL">
      <summary>
            SENEGAL country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SEYCHELLESIS">
      <summary>
            SEYCHELLESIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SIERRALEONE">
      <summary>
            SIERRALEONE country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SINGAPORE">
      <summary>
            SINGAPORE country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SOLOMONIS">
      <summary>
            SOLOMONIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SOMALI">
      <summary>
            SOMALI country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SOUTHAFRICA">
      <summary>
            SOUTHAFRICA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SPAIN">
      <summary>
            SPAIN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SRILANKA">
      <summary>
            SRILANKA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.STHELENA">
      <summary>
            STHELENA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.STKITTS">
      <summary>
            STKITTS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.STLUCIA">
      <summary>
            STLUCIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.STPIERRE">
      <summary>
            STPIERRE country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.STVINCENT">
      <summary>
            STVINCENT country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SUDAN">
      <summary>
            SUDAN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SURINAME">
      <summary>
            SURINAME country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SWAZILAND">
      <summary>
            SWAZILAND country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SWEDEN">
      <summary>
            SWEDEN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SWITZERLAND">
      <summary>
            SWITZERLAND country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SYRIA">
      <summary>
            SYRIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.TAIWAN">
      <summary>
            TAIWAN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.TANZANIA">
      <summary>
            TANZANIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.THAILAND">
      <summary>
            THAILAND country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.TOBAGO">
      <summary>
            TOBAGO country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.TOGO">
      <summary>
            TOGO country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.TONGAIS">
      <summary>
            TONGAIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.TRINIDAD">
      <summary>
            TRINIDAD country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.TUNISIA">
      <summary>
            TUNISIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.TURKEY">
      <summary>
            TURKEY country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.TURKSCAICOS">
      <summary>
            TURKSCAICOS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.TUVALU">
      <summary>
            TUVALU country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.UGANDA">
      <summary>
            UGANDA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.USSR">
      <summary>
            USSR country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.UAEMIRATES">
      <summary>
            UA EMIRATES country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.UNITEDKINGDOM">
      <summary>
            UNITED KINGDOM country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.USA">
      <summary>
            USA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.URUGUAY">
      <summary>
            URUGUAY country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.VANUATU">
      <summary>
            VANUATU country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.VATICANCITY">
      <summary>
            VATICANCITY country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.VENEZUELA">
      <summary>
            VENEZUELA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.WAKE">
      <summary>
            WAKE country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.WALLISIS">
      <summary>
            WALLISIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.WESTERNSAHARA">
      <summary>
            WESTERNSAHARA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.WESTERNSAMOA">
      <summary>
            WESTERNSAMOA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.YEMEN">
      <summary>
            YEMEN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.YUGOSLAVIA">
      <summary>
            YUGOSLAVIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ZAIRE">
      <summary>
            ZAIRE country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ZAMBIA">
      <summary>
            ZAMBIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ZIMBABWE">
      <summary>
            ZIMBABWE country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ALBANIA">
      <summary>
            ALBANIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ARMENIA">
      <summary>
            ARMENIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.AZERBAIJAN">
      <summary>
            AZERBAIJAN country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BELARUS">
      <summary>
            BELARUS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.BOSNIAHERZGO">
      <summary>
            BOSNIA HERZGO country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CAMBODIA">
      <summary>
            CAMBODIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CROATIA">
      <summary>
            CROATIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.CZECHREPUBLIC">
      <summary>
            CZECH REPUBLIC country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.DIEGOGARCIA">
      <summary>
            DIEGO GARCIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ERITREA">
      <summary>
            ERITREA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.ESTONIA">
      <summary>
            ESTONIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.GEORGIA">
      <summary>
            GEORGIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.LATVIA">
      <summary>
            LATVIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.LESOTHO">
      <summary>
            LESOTHO country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.LITHUANIA">
      <summary>
            LITHUANIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MACEDONIA">
      <summary>
            MACEDONIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MAYOTTEIS">
      <summary>
            MAYOTTEIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MOLDOVA">
      <summary>
            MOLDOVA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.MYANMAR">
      <summary>
            MYANMAR country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.NORTHKOREA">
      <summary>
            NORTH KOREA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.PUERTORICO">
      <summary>
            PUERTO RICO country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.RUSSIA">
      <summary>
            RUSSIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SERBIA">
      <summary>
            SERBIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SLOVAKIA">
      <summary>
            SLOVAKIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SLOVENIA">
      <summary>
            SLOVENIA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.SOUTHKOREA">
      <summary>
            SOUTH KOREA country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.UKRAINE">
      <summary>
            UKRAINE country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.USVIRGINIS">
      <summary>
            US VIRGINIS country.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.COUNTRY.VIETNAM">
      <summary>
            VIETNAM country.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.LANGUAGE">
      <summary>
            Allows Application and Source to identify which languages they have in common for the
            exchange of string data, and to select the language of the internal UI.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.DAN">
      <summary>
            Danish language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.DUT">
      <summary>
            Dutch language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ENG">
      <summary>
            International English language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.FCF">
      <summary>
            French Canadian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.FIN">
      <summary>
            Finnish language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.FRN">
      <summary>
            French language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.GER">
      <summary>
            German language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ICE">
      <summary>
            Icelandic language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ITN">
      <summary>
            Italian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.NOR">
      <summary>
            Norwegian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.POR">
      <summary>
            Portuguese language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.SPA">
      <summary>
            Spanish language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.SWE">
      <summary>
            Swedish language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.USA">
      <summary>
            U.S. English language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.USERLOCALE">
      <summary>
            User local language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.AFRIKAANS">
      <summary>
            User afrikaans language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ALBANIA">
      <summary>
            User albania language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC">
      <summary>
            User arabic language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_ALGERIA">
      <summary>
            User arabic algeria language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_BAHRAIN">
      <summary>
            User arabic bahrain language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_EGYPT">
      <summary>
            User arabic egypt language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_IRAQ">
      <summary>
            User arabic iraq language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_JORDAN">
      <summary>
            User arabic jordan language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_KUWAIT">
      <summary>
            User arabic kuwait language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_LEBANON">
      <summary>
            User arabic lebanon language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_LIBYA">
      <summary>
            User arabic libya language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_MOROCCO">
      <summary>
            User arabic morocco language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_OMAN">
      <summary>
            User arabic oman language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_QATAR">
      <summary>
            User arabic qatar language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_SAUDIARABIA">
      <summary>
            User arabic saudiarabia language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_SYRIA">
      <summary>
            User arabic syria language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_TUNISIA">
      <summary>
            User arabic tunisia language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_UAE">
      <summary>
            United Arabic Emirates 
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ARABIC_YEMEN">
      <summary>
            User arabic yemen language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.BASQUE">
      <summary>
            User basque language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.BYELORUSSIAN">
      <summary>
            User byelorussian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.BULGARIAN">
      <summary>
            User bulgarian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.CATALAN">
      <summary>
            User catalan language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.CHINESE">
      <summary>
            User chinese language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.CHINESE_HONGKONG">
      <summary>
            User chinese hongkong language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.CHINESE_PRC">
      <summary>
            People's Republic of China
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.CHINESE_SINGAPORE">
      <summary>
            User chinese singapore language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.CHINESE_SIMPLIFIED">
      <summary>
            User chinese simplified language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.CHINESE_TAIWAN">
      <summary>
            User chinese taiwan language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.CHINESE_TRADITIONAL">
      <summary>
            User chinese traditional language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.CROATIA">
      <summary>
            User croatia language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.CZECH">
      <summary>
            User czech language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.DANISH">
      <summary>
            User danish language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.DUTCH">
      <summary>
            User dutch language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.DUTCH_BELGIAN">
      <summary>
            User dutch belgian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ENGLISH">
      <summary>
            User english language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ENGLISH_AUSTRALIAN">
      <summary>
            User english australian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ENGLISH_CANADIAN">
      <summary>
            User english canadian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ENGLISH_IRELAND">
      <summary>
            User english ireland language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ENGLISH_NEWZEALAND">
      <summary>
            User english newzealand language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ENGLISH_SOUTHAFRICA">
      <summary>
            User english southafrica language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ENGLISH_UK">
      <summary>
            User english uk language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ENGLISH_USA">
      <summary>
            User english usa language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ESTONIAN">
      <summary>
            User estonian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.FAEROESE">
      <summary>
            User faeroese language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.FARSI">
      <summary>
            User farsi language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.FINNISH">
      <summary>
            User finnish language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.FRENCH">
      <summary>
            User french language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.FRENCH_BELGIAN">
      <summary>
            User french belgian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.FRENCH_CANADIAN">
      <summary>
            User french canadian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.FRENCH_LUXEMBOURG">
      <summary>
            User french luxembourg language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.FRENCH_SWISS">
      <summary>
            User french swiss language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.GERMAN">
      <summary>
            User german language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.GERMAN_AUSTRIAN">
      <summary>
            User german austrian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.GERMAN_LUXEMBOURG">
      <summary>
            User german luxembourg language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.GERMAN_LIECHTENSTEIN">
      <summary>
            User german liechtenstein language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.GERMAN_SWISS">
      <summary>
            User german swiss language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.GREEK">
      <summary>
            User greek language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.HEBREW">
      <summary>
            User hebrew language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.HUNGARIAN">
      <summary>
            User hungarian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ICELANDIC">
      <summary>
            User icelandic language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.INDONESIAN">
      <summary>
            User indonesian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ITALIAN">
      <summary>
            User italian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ITALIAN_SWISS">
      <summary>
            User italian swiss language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.JAPANESE">
      <summary>
            User japanese language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.KOREAN">
      <summary>
            User korean language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.KOREAN_JOHAB">
      <summary>
            User korean johab language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.LATVIAN">
      <summary>
            User latvian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.LITHUANIAN">
      <summary>
            User lithuanian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.NORWEGIAN">
      <summary>
            User norwegian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.NORWEGIAN_BOKMAL">
      <summary>
            User norwegian bokmal language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.NORWEGIAN_NYNORSK">
      <summary>
            User norwegian nynorsk language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.POLISH">
      <summary>
            User polish language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.PORTUGUESE">
      <summary>
            User portuguese language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.PORTUGUESE_BRAZIL">
      <summary>
            User portuguese brazil language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ROMANIAN">
      <summary>
            User romanian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.RUSSIAN">
      <summary>
            User russian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.SERBIAN_LATIN">
      <summary>
            User serbian latin language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.SLOVAK">
      <summary>
            User slovak language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.SLOVENIAN">
      <summary>
            User slovenian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.SPANISH">
      <summary>
            User spanish language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.SPANISH_MEXICAN">
      <summary>
            User spanish mexican language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.SPANISH_MODERN">
      <summary>
            User spanish modern language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.SWEDISH">
      <summary>
            User swedish language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.THAI">
      <summary>
            User thai language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.TURKISH">
      <summary>
            User turkish language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.UKRANIAN">
      <summary>
            User ukranian language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ASSAMESE">
      <summary>
            User assamese language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.BENGALI">
      <summary>
            User bengali language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.BIHARI">
      <summary>
            User bihari language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.BODO">
      <summary>
            User bodo language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.DOGRI">
      <summary>
            User dogri language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.GUJARATI">
      <summary>
            User gujarati language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.HARYANVI">
      <summary>
            User haryanvi language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.HINDI">
      <summary>
            User hindi language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.KANNADA">
      <summary>
            User kannada language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.KASHMIRI">
      <summary>
            User kashmiri language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.MALAYALAM">
      <summary>
            User malayalam language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.MARATHI">
      <summary>
            User marathi language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.MARWARI">
      <summary>
            User marwari language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.MEGHALAYAN">
      <summary>
            User meghalayan language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.MIZO">
      <summary>
            User mizo language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.NAGA">
      <summary>
            User naga language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.ORISSI">
      <summary>
            User orissi language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.PUNJABI">
      <summary>
            User punjabi language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.PUSHTU">
      <summary>
            User pushtu language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.SERBIAN_CYRILLIC">
      <summary>
            User serbian cyrillic language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.SIKKIMI">
      <summary>
            User sikkimi language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.SWEDISH_FINLAND">
      <summary>
            User swedish finland language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.TAMIL">
      <summary>
            User tamil language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.TELUGU">
      <summary>
            User telugu language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.TRIPURI">
      <summary>
            User tripuri language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.URDU">
      <summary>
            User urdu language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.LANGUAGE.VIETNAMESE">
      <summary>
            User vietnamese language.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TWMF">
      <summary>
            Flags used in TW_MEMORY structure.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWMF.APPOWNS">
      <summary>
            APPOWNS memory flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWMF.DSMOWNS">
      <summary>
            DSMOWNS memory flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWMF.DSOWNS">
      <summary>
            DSOWNS memory flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWMF.POINTER">
      <summary>
            POINTER memory flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWMF.HANDLE">
      <summary>
            HANDLE memory flag.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TWON">
      <summary>
            Container type for Capability Container structures.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWON.ARRAY">
      <summary>
            Array container type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWON.ENUMERATION">
      <summary>
            Enumeration container type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWON.ONEVALUE">
      <summary>
            One value container type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWON.RANGE">
      <summary>
            Range container type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWON.DONTCARE">
      <summary>
            Don't care container type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TWTY">
      <summary>
            Item type for Capability Container structures.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.INT8">
      <summary>
            Int8 item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.INT16">
      <summary>
            Int16 item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.INT32">
      <summary>
            Int32 item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.UINT8">
      <summary>
            UInt8 item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.UINT16">
      <summary>
            UInt16 item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.UINT32">
      <summary>
            UInt32 item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.BOOL">
      <summary>
            Bool item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.FIX32">
      <summary>
            Fix32 item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.FRAME">
      <summary>
            Frame item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.STR32">
      <summary>
            String 32 item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.STR64">
      <summary>
            String 64 item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.STR128">
      <summary>
            String 128 item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.STR255">
      <summary>
            String 255 item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.STR1024">
      <summary>
            String 1024 item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.STR512">
      <summary>
            String 512 item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.UNI512">
      <summary>
            String unicode 512 item type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWTY.HANDLE">
      <summary>
            Handle item type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TWFY">
      <summary>
            File system Types.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWFY.CAMERA">
      <summary>
            Camera file system type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWFY.CAMERATOP">
      <summary>
            Camera top file system type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWFY.CAMERABOTTOM">
      <summary>
            Camera bottom file system type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWFY.CAMERAPREVIEW">
      <summary>
            Camera preview system type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWFY.DOMAIN">
      <summary>
            Domain file system type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWFY.HOST">
      <summary>
            Host file system type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWFY.DIRECTORY">
      <summary>
            Directory file system type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWFY.IMAGE">
      <summary>
            Image file system type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWFY.UNKNOWN">
      <summary>
            Unknown file system type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.MSG">
      <summary>
            A Message, or MSG, is used to communicate between TWAIN elements what action is to be taken
            upon a particular piece of data, or for a data-less operation, what action to perform.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.NULL">
      <summary>
            Null message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.GET">
      <summary>
            Get message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.GETCURRENT">
      <summary>
            Get current message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.GETDEFAULT">
      <summary>
            Get default message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.GETFIRST">
      <summary>
            Get first message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.GETNEXT">
      <summary>
            Get next message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.SET">
      <summary>
            Set message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.RESET">
      <summary>
            Reset message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.QUERYSUPPORT">
      <summary>
            Query support message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.XFERREADY">
      <summary>
            Transfer ready message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.CLOSEDSREQ">
      <summary>
            Close data source request message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.CLOSEDSOK">
      <summary>
            Close data source OK message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.DEVICEEVENT">
      <summary>
            Device event message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.CHECKSTATUS">
      <summary>
            Check status message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.OPENDSM">
      <summary>
            Open data source manager message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.CLOSEDSM">
      <summary>
            Close data source manager message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.OPENDS">
      <summary>
            Open data source message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.CLOSEDS">
      <summary>
            Close data source message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.USERSELECT">
      <summary>
            User select message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.DISABLEDS">
      <summary>
            Disable data source message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.ENABLEDS">
      <summary>
            Enable data source message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.ENABLEDSUIONLY">
      <summary>
            Enable data source UI only message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.PROCESSEVENT">
      <summary>
            Process event message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.ENDXFER">
      <summary>
            End transfer message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.STOPFEEDER">
      <summary>
            Stop feeder message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.CHANGEDIRECTORY">
      <summary>
            Change directory message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.CREATEDIRECTORY">
      <summary>
            Create directory message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.DELETE">
      <summary>
            Delete message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.FORMATMEDIA">
      <summary>
            Format media message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.GETCLOSE">
      <summary>
            Get close message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.GETFIRSTFILE">
      <summary>
            Get first file message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.GETINFO">
      <summary>
            Get info message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.GETNEXTFILE">
      <summary>
            Get next file message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.RENAME">
      <summary>
            Rename message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.COPY">
      <summary>
            Copy message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.AUTOMATICCAPTUREDIRECTORY">
      <summary>
            Automatic capture directory message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.PASSTHRU">
      <summary>
            Pass thru message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.REGISTER_CALLBACK">
      <summary>
            Register call back message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.MSG.RESETALL">
      <summary>
            Reset all message.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CAPMSG">
      <summary>
            A Message, or MSG, is used to communicate between TWAIN elements what action is to be taken
            upon a particular piece of data, or for a data-less operation, what action to perform.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPMSG.GET">
      <summary>
            Get message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPMSG.GETCURRENT">
      <summary>
            Get current message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPMSG.GETDEFAULT">
      <summary>
            Get default message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPMSG.GETFIRST">
      <summary>
            Get first message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPMSG.GETNEXT">
      <summary>
            Get next message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPMSG.SET">
      <summary>
            Set message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPMSG.RESET">
      <summary>
            Reset message.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.CAPMSG.QUERYSUPPORT">
      <summary>
            Query support message.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TWCC">
      <summary>
            Twain condition codes.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.SUCCESS">
      <summary>
            Operation worked.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.BUMMER">
      <summary>
            General failure. Unload Source immediately.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.LOWMEMORY">
      <summary>
            Not enough memory to complete operation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.NODS">
      <summary>
            Source Manager unable to find the specified Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.MAXCONNECTIONS">
      <summary>
            Source is connected to maximum supported number of
            applications.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.OPERATIONERROR">
      <summary>
            Source or Source Manager reported an error to the user
            and handled the error; no application action required.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.BADCAP">
      <summary>
            Capability not supported by Source or operation (get,
            set) is not supported on capability, or capability had
            dependencies on other capabilities and cannot be
            operated upon at this time
            (Obsolete, see TWCC_CAPUNSUPPORTED,
            TWCC_CAPBADOPERATION, and TWCC_CAPSEQERROR).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.BADPROTOCOL">
      <summary>
            Unrecognized operation triplet.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.BADVALUE">
      <summary>
            Data parameter out of supported range.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.SEQERROR">
      <summary>
            Illegal operation for current Source Manager or Source state.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.BADDEST">
      <summary>
            Unknown destination in DSM_Entry.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.CAPUNSUPPORTED">
      <summary>
            Capability not supported by Source.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.CAPBADOPERATION">
      <summary>
            Operation (i.e., Get or Set) not supported on capability.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.CAPSEQERROR">
      <summary>
            Capability has dependencies on other capabilities and
            cannot be operated upon at this time.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.DENIED">
      <summary>
            File System operation is denied (file is protected).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.FILEEXISTS">
      <summary>
            Operation failed because file already exists.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.FILENOTFOUND">
      <summary>
            File not found.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.NOTEMPTY">
      <summary>
            Operation failed because directory is not empty.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.PAPERJAM">
      <summary>
            Transfer failed because of a feeder error, this can be
            returned by any of the DAT_IMAGE*XFER operations.
            When received the current TWAIN state remains
            unchanged.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.PAPERDOUBLEFEED">
      <summary>
            Transfer failed because of a feeder error, this can be
            returned by any of the DAT_IMAGE*XFER operations.
            When received the current TWAIN state remains
            unchanged.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.FILEWRITEERROR">
      <summary>
            Intended for DAT_IMAGEFILEXFER and DAT_FILESYSTEM, the
            specified file or directory could not be written, usually indicating a
            disk full condition, though it may also indicate a file or directory
            that the user has no permission to write.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.CHECKDEVICEONLINE">
      <summary>
            Check the device status using CAP_DEVICEONLINE, this
            condition code can be returned by any TWAIN operation
            in state 4 or higher, or from the state 3 DG_CONTROL /
            DAT_IDENTITY / MSG_OPENDS. The state remains
            unchanged. If in state 4 the Application can poll with
            CAP_DEVICELINE until the value returns TRUE.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.INTERLOCK">
      <summary>
            Operation failed because the cover or door is open.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.DAMAGEDCORNER">
      <summary>
            Operation failed because the document has a damaged
            corner.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.FOCUSERROR">
      <summary>
            Operation failed because of a focusing error during
            document capture.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.DOCTOOLIGHT">
      <summary>
            Operation failed because the document is too light.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.DOCTOODARK">
      <summary>
            Operation failed because the document is too dark.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWCC.NOMEDIA">
      <summary>
            Source has nothing to capture for a transfer. Can be
            returned by DG_CONTROL / DAT_USERINTERFACE /
            MSG_ENABLEDS, by any of the DAT_IMAGE*XFER
            operations, by DAT_IMAGEINFO or
            DAT_EXTIMAGEINFO.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TWRC">
      <summary>
            Twain return codes
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWRC.SUCCESS">
      <summary>
            Success result code.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWRC.FAILURE">
      <summary>
            Failure result code.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWRC.CHECKSTATUS">
      <summary>
            Ce«heck status result code.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWRC.CANCEL">
      <summary>
            Cancel result code.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWRC.DSEVENT">
      <summary>
            Data source event result code.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWRC.NOTDSEVENT">
      <summary>
            Not data source event result code.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWRC.XFERDONE">
      <summary>
            Transfer done result code.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWRC.ENDOFLIST">
      <summary>
            End of list result code.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWRC.INFONOTSUPPORTED">
      <summary>
            Info not supported result code.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWRC.DATANOTAVAILABLE">
      <summary>
            Data not available result code.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWRC.BUSY">
      <summary>
            Busy result code.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWRC.SCANNERLOCKED">
      <summary>
            Scanner locked result code.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TWQC">
      <summary>
            Bit patterns: for query the operation that are supported by the data source on a capability
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWQC.GET">
      <summary>
            GET query operation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWQC.SET">
      <summary>
            SET query operation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWQC.GETDEFAULT">
      <summary>
            GETDEFAULT query operation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWQC.GETCURRENT">
      <summary>
            GETCURRENT query operation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWQC.RESET">
      <summary>
            RESET query operation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWQC.SETCONSTRAINT">
      <summary>
            SETCONSTRAINT query operation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWQC.CONSTRAINABLE">
      <summary>
            CONSTRAINABLE query operation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWQC.GETHELP">
      <summary>
            GETHELP query operation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWQC.GETLABEL">
      <summary>
            GETLABEL query operation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWQC.GETLABELENUM">
      <summary>
            GETLABELENUM query operation.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TWEI">
      <summary>
            Extended Image Info Attributes.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.BARCODEX">
      <summary>
            BARCODEX extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.BARCODEY">
      <summary>
            BARCODEY extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.BARCODETEXT">
      <summary>
            BARCODETEXT extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.BARCODETYPE">
      <summary>
            BARCODETYPE extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADETOP">
      <summary>
            DESHADETOP extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADELEFT">
      <summary>
            DESHADELEFT extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADEHEIGHT">
      <summary>
            DESHADEHEIGHT extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADEWIDTH">
      <summary>
            DESHADEWIDTH extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADESIZE">
      <summary>
            DESHADESIZE extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.SPECKLESREMOVED">
      <summary>
            SPECKLESREMOVED extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.HORZLINEXCOORD">
      <summary>
            HORZLINEXCOORD extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.HORZLINEYCOORD">
      <summary>
            HORZLINEYCOORD extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.HORZLINELENGTH">
      <summary>
            HORZLINELENGTH extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.HORZLINETHICKNESS">
      <summary>
            HORZLINETHICKNESS extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.VERTLINEXCOORD">
      <summary>
            VERTLINEXCOORD extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.VERTLINEYCOORD">
      <summary>
            VERTLINEYCOORD extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.VERTLINELENGTH">
      <summary>
            VERTLINELENGTH extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.VERTLINETHICKNESS">
      <summary>
            VERTLINETHICKNESS extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.PATCHCODE">
      <summary>
            PATCHCODE extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.ENDORSEDTEXT">
      <summary>
            ENDORSEDTEXT extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.FORMCONFIDENCE">
      <summary>
            FORMCONFIDENCE extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.FORMTEMPLATEMATCH">
      <summary>
            FORMTEMPLATEMATCH extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.FORMTEMPLATEPAGEMATCH">
      <summary>
            FORMTEMPLATEPAGEMATCH extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.FORMHORZDOCOFFSET">
      <summary>
            FORMHORZDOCOFFSET extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.FORMVERTDOCOFFSET">
      <summary>
            FORMVERTDOCOFFSET extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.BARCODECOUNT">
      <summary>
            BARCODECOUNT extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.BARCODECONFIDENCE">
      <summary>
            BARCODECONFIDENCE extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.BARCODEROTATION">
      <summary>
            BARCODEROTATION extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.BARCODETEXTLENGTH">
      <summary>
            BARCODETEXTLENGTH extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADECOUNT">
      <summary>
            DESHADECOUNT extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADEBLACKCOUNTOLD">
      <summary>
            DESHADEBLACKCOUNTOLD extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADEBLACKCOUNTNEW">
      <summary>
            DESHADEBLACKCOUNTNEW extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADEBLACKRLMIN">
      <summary>
            DESHADEBLACKRLMIN extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADEBLACKRLMAX">
      <summary>
            DESHADEBLACKRLMAX extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADEWHITECOUNTOLD">
      <summary>
            DESHADEWHITECOUNTOLD extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADEWHITECOUNTNEW">
      <summary>
            DESHADEWHITECOUNTNEW extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADEWHITERLMIN">
      <summary>
            DESHADEWHITERLMIN extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADEWHITERLAVE">
      <summary>
            DESHADEWHITERLAVE extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESHADEWHITERLMAX">
      <summary>
            DESHADEWHITERLMAX extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.BLACKSPECKLESREMOVED">
      <summary>
            BLACKSPECKLESREMOVED extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.WHITESPECKLESREMOVED">
      <summary>
            WHITESPECKLESREMOVED extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.HORZLINECOUNT">
      <summary>
            HORZLINECOUNT extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.VERTLINECOUNT">
      <summary>
            VERTLINECOUNT extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DESKEWSTATUS">
      <summary>
            DESKEWSTATUS extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.SKEWORIGINALANGLE">
      <summary>
            SKEWORIGINALANGLE extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.SKEWFINALANGLE">
      <summary>
            SKEWFINALANGLE extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.SKEWCONFIDENCE">
      <summary>
            SKEWCONFIDENCE extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.SKEWWINDOWX1">
      <summary>
            SKEWWINDOWX1 extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.SKEWWINDOWY1">
      <summary>
            SKEWWINDOWY1 extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.SKEWWINDOWX2">
      <summary>
            SKEWWINDOWX2 extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.SKEWWINDOWY2">
      <summary>
            SKEWWINDOWY2 extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.SKEWWINDOWX3">
      <summary>
            SKEWWINDOWX3 extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.SKEWWINDOWY3">
      <summary>
            SKEWWINDOWY3 extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.SKEWWINDOWX4">
      <summary>
            SKEWWINDOWX4 extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.SKEWWINDOWY4">
      <summary>
            SKEWWINDOWY4 extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.BOOKNAME">
      <summary>
            BOOKNAME extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.CHAPTERNUMBER">
      <summary>
            CHAPTERNUMBER extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.DOCUMENTNUMBER">
      <summary>
            DOCUMENTNUMBER extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.PAGENUMBER">
      <summary>
            PAGENUMBER extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.CAMERA">
      <summary>
            CAMERA extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.FRAMENUMBER">
      <summary>
            FRAMENUMBER extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.FRAME">
      <summary>
            FRAME extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.PIXELFLAVOR">
      <summary>
            PIXELFLAVOR extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.ICCPROFILE">
      <summary>
            ICCPROFILE extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.LASTSEGMENT">
      <summary>
            LASTSEGMENT extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.SEGMENTNUMBER">
      <summary>
            SEGMENTNUMBER extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.MAGDATA">
      <summary>
            MAGDATA extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.MAGTYPE">
      <summary>
            MAGTYPE extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.PAGESIDE">
      <summary>
            PAGESIDE extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.FILESYSTEMSOURCE">
      <summary>
            FILESYSTEMSOURCE extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.IMAGEMERGED">
      <summary>
            IMAGEMERGED extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.MAGDATALENGTH">
      <summary>
            MAGDATALENGTH extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.PAPERCOUNT">
      <summary>
            PAPERCOUNT extended image info.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWEI.PRINTERTEXT">
      <summary>
            PRINTERTEXT extended image info.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.DAT">
      <summary>
            Data argument types.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.NULL">
      <summary>
            Null data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.CAPABILITY">
      <summary>
            Capability data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.EVENT">
      <summary>
            Event data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.IDENTITY">
      <summary>
            Identity data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.PARENT">
      <summary>
            Parent data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.PENDINGXFERS">
      <summary>
            Pending transfers data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.SETUPMEMXFER">
      <summary>
            Setup memory transfer data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.SETUPFILEXFER">
      <summary>
            Setup file transfer data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.STATUS">
      <summary>
            Status data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.USERINTERFACE">
      <summary>
            User interface data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.XFERGROUP">
      <summary>
            Transfer group data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.TWUNKIDENTITY">
      <summary>
            Twunk identity data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.CUSTOMDSDATA">
      <summary>
            Custom DS data data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.DEVICEEVENT">
      <summary>
            Device event data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.FILESYSTEM">
      <summary>
            File system data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.PASSTHRU">
      <summary>
            Pass thru data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.IMAGEINFO">
      <summary>
            Image info data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.IMAGELAYOUT">
      <summary>
            Image layout data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.IMAGEMEMXFER">
      <summary>
            Image memory transfer data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.IMAGENATIVEXFER">
      <summary>
            Image native transfer data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.IMAGEFILEXFER">
      <summary>
            Image file transfer data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.CIECOLOR">
      <summary>
            CIE color data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.GRAYRESPONSE">
      <summary>
            Gray response data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.RGBRESPONSE">
      <summary>
            RGB response data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.JPEGCOMPRESSION">
      <summary>
            JPEG compression data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.PALETTE8">
      <summary>
            Palette 8 data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.EXTIMAGEINFO">
      <summary>
            Extended image info data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.AUDIOFILEXFER">
      <summary>
            Audio file transfer data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.AUDIOINFO">
      <summary>
            Audio info data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.AUDIONATIVEXFER">
      <summary>
            Audio native transfer data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.SETUPFILEXFER2">
      <summary>
            Setup file transfer 2 data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.ICCPROFILE">
      <summary>
            ICC profile data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.IMAGEMEMFILEXFER">
      <summary>
            Image memory file transfer data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.CALLBACK">
      <summary>
            Callback data argument type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DAT.ENTRYPOINT">
      <summary>
            Entry point data argument type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.DG">
      <summary>
            Data groups.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DG.CONTROL">
      <summary>
            Control data group.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DG.IMAGE">
      <summary>
            Image data group.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DG.AUDIO">
      <summary>
            Audio data group.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DG.MASK">
      <summary>
            Mask data group.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DG.DSM2">
      <summary>
            DSM2 data group.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DG.APP2">
      <summary>
            APP2 data group.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.DG.DS2">
      <summary>
            DS2 data group.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TWSTATE">
      <summary>
            The TWAIN State...
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWSTATE.S1">
      <summary>
            Nothing loaded or open
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWSTATE.S2">
      <summary>
            DSM loaded
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWSTATE.S3">
      <summary>
            DSM open
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWSTATE.S4">
      <summary>
            Data Source open, programmatic mode (no GUI)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWSTATE.S5">
      <summary>
            GUI up or waiting to transfer first image
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWSTATE.S6">
      <summary>
            Ready to start transferring image
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.Twain.TWSTATE.S7">
      <summary>
            Transferring image or transfer done
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CapAttrib">
      <summary>
            Image Components Capabilities Attributes class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.Twain.CapAttrib.#ctor(System.Boolean,ImageComponents.Core.Imaging.Twain.TWON,ImageComponents.Core.Imaging.Twain.TWTY,System.Type)">
      <summary>
            Constructor.
            </summary>
      <param name="readOnly">Is capability attribution read only.</param>
      <param name="containerType">Capability container type.</param>
      <param name="valueType">Capability value type.</param>
      <param name="enumType">Capability enumeration object type.</param>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.CapAttrib.ReadOnly">
      <summary>
            Get/Set Read only.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.CapAttrib.ContainerType">
      <summary>
            Get/Set Container type.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.CapAttrib.ValueType">
      <summary>
            Get/Set Value type.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.CapAttrib.EnumType">
      <summary>
            Get/Set Enum type.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.Twain.CapAttrib.GetCapabilityValue(ImageComponents.Core.Imaging.Twain.CAPABILITIES)">
      <summary>
            Get capability value.
            </summary>
      <param name="value">Capability value.</param>
      <returns>Capability attribute.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TWCapabilities">
      <summary>
            Twain Device Capabilities class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.Twain.TWCapabilities.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWCapabilities.IsAutoDeskewEnabled">
      <summary>
            Turns automatic deskew correction on and off.
            </summary>
      <value>Sets the value indicating whether [automatic deskew].</value>
      <returns>Gets the value indicating whether [automatic deskew].</returns>
      <remarks>Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWCapabilities.IsAutoBorderDetectionEnabled">
      <summary>
            Turns automatic border detection on and off.
            </summary>
      <value>Sets the value indicating whether [automatic border detection].</value>
      <returns>Gets the value indicating whether [automatic border detection].</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWCapabilities.IsAutoRotationEnabled">
      <summary>
            When TRUE this capability depends on intelligent features within the Source to automatically
            rotate the image to the correct position.
            </summary>
      <value>Sets the value indicating whether [automatic rotate].</value>
      <returns>Gets the value indicating whether [automatic rotate].</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWCapabilities.IsDuplexEnabled">
      <summary>
            The user can set the duplex option to be TRUE or FALSE. If TRUE, the scanner scans both sides of a
            paper; otherwise, the scanner will scan only one side of the image.
            </summary>
      <value>Sets the value indicating whether [duplex enabled].</value>
      <returns>Gets the value indicating whether [duplex enabled].</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWCapabilities.DuplexTypeValue">
      <summary>
            [READ ONLY] This indicates whether the scanner supports duplex. If so, it further indicates whether one-path or two-path duplex is supported.
            </summary>
      <returns>Indicates whether the scanner supports duplex.</returns>
      <remarks>This is a read only capability.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWCapabilities.IsFeederEnabled">
      <summary>
            If TRUE, Source must acquire data from the document feeder acquire area and other feeder
            capabilities can be used. If FALSE, Source must acquire data from the non-feeder acquire area and
            no other feeder capabilities can be used.
            </summary>
      <value>Sets the use of document feeder.</value>
      <returns>Gets the use of document feeder.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWCapabilities.IsAutoFeedEnabled">
      <summary>
            If TRUE, the Source will automatically feed the next page from the document feeder after the
            number of frames negotiated for capture from each page are acquired. CAP_FEEDERENABLED
            must be TRUE to use this capability.
            </summary>
      <value>Sets the use of auto feeder.</value>
      <returns>Gets the use of auto feeder.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWCapabilities.IsAutoScanEnabled">
      <summary>
            This capability is intended to boost the performance of a Source. The fundamental assumption
            behind AutoScan is that the device is able to capture the number of images indicated by the value
            of CAP_XFERCOUNT without waiting for the Application to request the image transfers. This is
            only possible if the device has internal buffers capable of caching the images it captures.
            </summary>
      <value>Sets the use of auto cache feeder.</value>
      <returns>Gets the use of auto cache feeder.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWCapabilities.AbortWhenNoPaperDetected">
      <summary>
            Gets or set the abort when no paper is detected.
            </summary>
      <value>Sets the abort when no paper is detected.</value>
      <returns>Gets the abort when no paper is detected.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWCapabilities.ShowProgressIndicator">
      <summary>
            If TRUE, the Source displays a progress indicator during acquisition and transfer, regardless of
            whether the Source's user interface is active. If FALSE, the progress indicator is suppressed if the
            Source's user interface is inactive.
            </summary>
      <value> Sets the show progress indicator value.</value>
      <returns>Gets the show progress indicator value.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWCapabilities.ImageXferCount">
      <summary>
            The application is willing to accept this number of images.
            </summary>
      <value>Sets the image transfer count.</value>
      <returns>Gets the image transfer count.</returns>
      <remarks> Set to -1 to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWCapabilities.CustomDSData">
      <summary>
            Allows the application to query the data source to see if it supports the new operation triplets.
            </summary>
      <returns>Gets the value of the custom data source data.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.ImageCapabilities">
      <summary>
            Twain Image capabilities class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.Twain.ImageCapabilities.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.ImageCapabilities.ICapabilitiesValues">
      <summary>
            Gets the device current image capabilities values.
            </summary>
      <returns>Gets the device current image capabilities values.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.ImageCapabilities.ImageXferMech">
      <summary>
            Allows the application and Source to identify which transfer mechanisms the source supports.
            </summary>
      <value>Sets the image transfer mechanism.</value>
      <returns>Gets the image transfer mechanism.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.ImageCapabilities.ImageFileFormatValue">
      <summary>
            Informs the application which file formats the Source can generate. Tells the Source
            which file formats the application can handle (MSG_SET).
            </summary>
      <value>Sets the image file format.</value>
      <returns>Gets the image file format.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.ImageCapabilities.PixelTypeValue">
      <summary>
            The type of pixel data that a Source is capable of acquiring (for example, black and white, gray, RGB, etc.).
            </summary>
      <value>Sets the pixel type value.</value>
      <returns>Gets the pixel type value.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.ImageCapabilities.PaperOrientationValue">
      <summary>
            Defines which edge of the “paper” the image’s “top” is aligned with. This information is used to
            adjust the frames to match the scanning orientation of the paper.
            </summary>
      <value>Sets the paper orientation value.</value>
      <returns>Gets the paper orientation value.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.ImageCapabilities.PaperSizeValue">
      <summary>
            For devices that support fixed frame sizes. Defined sizes match typical page sizes. This specifies
            the size(s) the Source can/should use to acquire image data.
            </summary>
      <value>Sets the paper size value.</value>
      <returns>Gets the paper size value.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.ImageCapabilities.XResolutionValue">
      <summary>
            Gets or sets all the X-axis resolutions the Source can provide.
            </summary>
      <value>Sets the X DPI resolution value.</value>
      <returns>Gets the X DPI resolution value.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.ImageCapabilities.YResolutionValue">
      <summary>
            Gets or sets all the Y-axis resolutions the Source can provide.
            </summary>
      <value>Sets the Y DPI resolution value.</value>
      <returns>Gets the Y DPI resolution value.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.ImageCapabilities.IsAutoBrightEnabled">
      <summary>
            TRUE enables and FALSE disables the Source’s Auto-brightness function (if any).
            </summary>
      <value> Sets the current auto brightness value.</value>
      <returns>Gets the current auto brightness value.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.ImageCapabilities.BrightnessValue">
      <summary>
            The brightness values available within the Source.
            </summary>
      <value> Sets the current brightness value.</value>
      <returns>Gets the current brightness value.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.ImageCapabilities.ContrastValue">
      <summary>
            The contrast values available within the Source.
            </summary>
      <value> Sets the current contrast value.</value>
      <returns>Gets the current contrast value.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.ImageCapabilities.IsAutoRemoveBlankPagesEnabled">
      <summary>
            Use this capability to have the Source discard blank images. The Application never sees these
            images during the scanning session.
            </summary>
      <value>Sets the use of auto remove blank pages.</value>
      <returns>Gets the use of auto remove blank pages.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.ImageCapabilities.UnitsValue">
      <summary>
            The unit of measure for all quantities.
            </summary>
      <value>Sets the unit of measure for all quantities.</value>
      <returns>Gets the unit of measure for all quantities.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.ImageCapabilities.AreaRegion">
      <summary>
            Gets or sets the area region settings value.
            </summary>
      <value> Sets the current area region value.</value>
      <returns>Gets the current area region value.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.TWImageCapabilitiesValues">
      <summary>
            Twain Image capabilities values class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.Twain.TWImageCapabilitiesValues.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWImageCapabilitiesValues.ImageXferMechs">
      <summary>
            Gets the image transfer mechanisms.
            </summary>
      <returns>Gets the image transfer mechanisms.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWImageCapabilitiesValues.ImageFileFormats">
      <summary>
            Gets the image file formats.
            </summary>
      <returns>Gets the image file formats.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWImageCapabilitiesValues.PaperSizes">
      <summary>
            Gets the paper sizes.
            </summary>
      <returns>Gets the paper sizes.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWImageCapabilitiesValues.PixelTypes">
      <summary>
            Gets the pixel types.
            </summary>
      <returns>Gets the paper sizes.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWImageCapabilitiesValues.PaperOrientations">
      <summary>
            Gets the paper orientations.
            </summary>
      <returns>Gets the paper orientations.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWImageCapabilitiesValues.XResolutions">
      <summary>
            Gets the X resolutions.
            </summary>
      <returns>Gets the X resolutions.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.TWImageCapabilitiesValues.YResolutions">
      <summary>
            Gets the Y resolutions.
            </summary>
      <returns>Gets the Y resolutions.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.AreaSettings">
      <summary>
            Scan area settings class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.Twain.AreaSettings.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.AreaSettings.Units">
      <summary>
            Gets the Units i-capability value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.AreaSettings.Top">
      <summary>
            Gets the top value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.AreaSettings.Left">
      <summary>
            Gets the left value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.AreaSettings.Bottom">
      <summary>
            Gets the bottom value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.AreaSettings.Right">
      <summary>
            Gets the right value.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CapabilityResult">
      <summary>
            Twain capability result class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.CapabilityResult.ConditionCode">
      <summary>
            Gets the condition code.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.CapabilityResult.ErrorCode">
      <summary>
            Gets the error code.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.Twain.CapabilityValues">
      <summary>
            Twain capability values class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.CapabilityValues.Capability">
      <summary>
            Gets or sets the Capability enumeration value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.CapabilityValues.CustomCapability">
      <summary>
            Gets or sets the Custom capability value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.CapabilityValues.Value">
      <summary>
            Gets or sets the capability value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.CapabilityValues.RawType">
      <summary>
            Gets or sets the capability container type.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.CapabilityValues.Type">
      <summary>
            Gets or sets the capability value type.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.Twain.CapabilityValues.Message">
      <summary>
            Gets or sets the capability request message.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.ScanTypes">
      <summary>
            Scan types enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ScanTypes.None">
      <summary>
            None scan type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ScanTypes.Color">
      <summary>
            Color scan type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ScanTypes.Grayscale">
      <summary>
            Grayscale scan type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ScanTypes.Text">
      <summary>
            Text scan type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.DeviceTypes">
      <summary>
            Device types enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DeviceTypes.UnspecifiedDeviceType">
      <summary>
            Unspecified device type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DeviceTypes.ScannerDeviceType">
      <summary>
            Scanner device type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DeviceTypes.CameraDeviceType">
      <summary>
            Camera device type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DeviceTypes.VideoDeviceType">
      <summary>
            Video device type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.ScanQualityTypes">
      <summary>
            Scan quality types enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ScanQualityTypes.None">
      <summary>
      </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ScanQualityTypes.MinimizeSize">
      <summary>
      </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ScanQualityTypes.MaximizeQuality">
      <summary>
      </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ScanQualityTypes.BestPreview">
      <summary>
      </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.DocumentSources">
      <summary>
            Describes the different types of DocumentSources available to scanners.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentSources.SingleSided">
      <summary>
            Represents a one-sided sheetfed scanner.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentSources.Flatbed">
      <summary>
            Represents a one-sided flatbed scanner.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentSources.DoubleSided">
      <summary>
            Represents a duplex sheet-fed scanner.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.WiaErrorCodes">
      <summary>
            WIA error code types.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.GeneralError">
      <summary> An unknown error has occurred with the Microsoft Windows Image Acquisition (WIA) device. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.PaperJam">
      <summary> Paper is jammed in the scanner's document feeder. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.PaperEmpty">
      <summary> The user requested a scan and there are no documents left in the document feeder. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.PaperProblem">
      <summary> An unspecified problem occurred with the scanner's document feeder. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.Offline">
      <summary> The WIA device is not online. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.Busy">
      <summary> The WIA device is busy. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.WarmingUp">
      <summary> The WIA device is warming up. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.UserIntervention">
      <summary> An unspecified error has occurred with the WIA device that requires user intervention. The user should ensure that the device is turned on, online, and any cables are properly connected. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.ItemDeleted">
      <summary> The WIA device was deleted. It can no longer be accessed. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.DeviceCommunication">
      <summary> An unspecified error occurred during an attempted communication with the WIA device. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.InvalidCommand">
      <summary> The device does not support this command. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.IncorrectHardwareSetting">
      <summary> There is an incorrect setting on the WIA device. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.DeviceLocked">
      <summary> The scanner head is locked. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.ExceptionInDriver">
      <summary> The device driver threw an exception. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.InvalidDriverResponse">
      <summary> The response from the driver is invalid. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.CoverOpen">
      <summary> The scanner's cover is opened. </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.LampOff">
      <summary> The scanner's lamp is off.  </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.Destination">
      <summary> Destination error.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.NetworkReservationFailed">
      <summary>
            Network reservation failed.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaErrorCodes.NoDeviceAvailable">
      <summary> No WIA device of the selected type is available. </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.AccessRights">
      <summary>
            WIA access rights enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.AccessRights.CanBeDeleted">
      <summary>
            This WIA item can be deleted.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.AccessRights.Read">
      <summary>Access to the item is read-only.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.AccessRights.Write">
      <summary>
            Access to the item is read/write.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.AccessRights.RD">
      <summary>
            AccessRights.Read | AccessRights.CanBeDeleted
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.AccessRights.RWD">
      <summary>
            AccessRights.Read | AccessRights.Write | AccessRights.CanBeDeleted
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.AutoDeskew">
      <summary>
            Automatic Deskew
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.AutoDeskew.On">
      <summary>Use automatic skew correction.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.AutoDeskew.Off">
      <summary>Do not use automatic skew correction.</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.Compression">
      <summary>
            Compression
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Compression.None">
      <summary>
            No compression
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Compression.BiRle4">
      <summary>
            RLE 4 compression
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Compression.BiRle8">
      <summary>
            RLE 8 compression
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Compression.G3">
      <summary>
            Group 3 compression
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Compression.G4">
      <summary>
            Group 4 compression
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Compression.Jpeg">
      <summary>
            JPEG compression
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Compression.Jbig">
      <summary>
            IS 11544 (ITU-T T.82) compression*
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Compression.Jpeg2k">
      <summary>
            JPEG 2000 compression*
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Compression.Png">
      <summary>
            W3C PNG compression*
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.ConnectionStatus">
      <summary>
            Connection Status
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ConnectionStatus.NotConnected">
      <summary>
            Not connected status.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ConnectionStatus.Connected">
      <summary>
            Connected status.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.CurrentIntent">
      <summary>
            Current Intent
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.CurrentIntent.None">
      <summary>
            Default value. No intent is specified.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.CurrentIntent.ImageTypeColor">
      <summary>
            The application intends to prepare the device for a color scan.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.CurrentIntent.ImageTypeGrayscale">
      <summary>
            The application intends to prepare the device for a grayscale scan.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.CurrentIntent.ImageTypeText">
      <summary>
            The application intends to prepare the device for scanning text.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.CurrentIntent.ImageTypeMask">
      <summary>
            This flag is a mask for all of the image-type flags.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.CurrentIntent.MinimizeSize">
      <summary>
            The application intends to prepare the device for scanning an image that results in a small scan.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.CurrentIntent.MaximizeQuality">
      <summary>
            The application intends to prepare the device for scanning a high-quality image.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.CurrentIntent.BestPreview">
      <summary>
            The application intends to prepare the device for scanning a preview.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.CurrentIntent.SizeMask">
      <summary>
            This flag is a mask for all of the size and quality flags.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.DataType">
      <summary>
            Data Type
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DataType.Threshold">
      <summary>
            The threshold is one bit per pixel of black-and-white data. Data over the current value of WIA_IPS_THRESHOLD is converted to white; data under this value is converted to black.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DataType.Dither">
      <summary>
            Scan data is dithered by using the currently selected dither pattern.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DataType.Grayscale">
      <summary>
            Scan data represents intensity. The palette is a fixed, equally spaced grayscale with a depth that the WIA_IPA_DEPTH property specifies.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DataType.Color">
      <summary>
            Scan data is red-green-blue (RGB).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DataType.ColorThreshold">
      <summary>
            Color threshold data.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DataType.ColorDither">
      <summary>
            The same as WIA_DATA_COLOR, except that the data is dithered by using the currently selected dither pattern.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DataType.RawRgb">
      <summary>
            Scan data is in the red-green-blue (RGB) colorspace. The full color format is described using the same WIA properties as in WIA_DATA_RAW_BGR. 
            WIA_IPA_RAW_BITS_PER_CHANNEL must be set to 3.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DataType.RawBgr">
      <summary>
            Scan data is in the BGR (blue-green-red) colorspace. 
            WIA_IPA_RAW_BITS_PER_CHANNEL must be set to 3.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DataType.RawYuv">
      <summary>
            Scan data is in the luminance-blue difference-red difference (YUV)  colorspace. The full color format is described by using the same WIA properties that are listed for WIA_DATA_RAW_BGR. 
            WIA_IPA_RAW_BITS_PER_CHANNEL must be set to 3.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DataType.RawYuvk">
      <summary>
            Scan data is in the luminance-blue difference-red difference-black (YUVK) colorspace. The full color format is described by using the same WIA properties that are listed for WIA_DATA_RAW_BGR.
            WIA_IPA_RAW_BITS_PER_CHANNEL must be set to 4.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DataType.RawCmy">
      <summary>
            Scan data is in the cyan-magenta-yellow (CMY) colorspace. The full color format is described by using the same WIA properties that are listed for WIA_DATA_RAW_BGR.
            WIA_IPA_RAW_BITS_PER_CHANNEL must be set to 3.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DataType.RawCmyk">
      <summary>
            Scan data is in the cyan-magenta-yellow-black (CMYK) colorspace. The full color format is described by using the same WIA properties that are listed for WIA_DATA_RAW_BGR.
            WIA_IPA_RAW_BITS_PER_CHANNEL must be set to 4.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities">
      <summary>
            Document Handling Capabilities
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities.Feed">
      <summary>The scanner has a document feeder installed.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities.Flat">
      <summary>The scanner has a flatbed platen.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities.Dup">
      <summary>The scanner has a duplexer.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities.DetectFlat">
      <summary>The scanner can detect a document on the flatbed platen.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities.DetectScan">
      <summary>The scanner can detect a document in the feeder only by scanning.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities.DetectFeed">
      <summary>The scanner can detect a document in the feeder.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities.DetectDup">
      <summary>The scanner can detect a duplex scan request from a user.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities.DetectFeedAvail">
      <summary>The scanner can detect when a document feeder is installed.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities.DetectDupAvail">
      <summary>The scanner can detect when a duplexer is installed.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities.FilmTpa">
      <summary>The scanner has a transparency or film scanning adapter.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities.DetectFilmTpa">
      <summary>The scanner can detect when the transparency or film scanning adapter is ready to scan.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities.Stor">
      <summary>The scanner is equipped with an internal storage device.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities.DetectStor">
      <summary>The scanner can detect when there is a document in the internal storage.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingCapabilities.AdvancedDup">
      <summary>The device supports advanced duplex scan configuration, independently on each document size.</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.DocumentHandlingSelect">
      <summary>
            Document Handling Select
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingSelect.Feeder">
      <summary>
            Scan by using the document feeder.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingSelect.Flatbed">
      <summary>
            Scan by using the flatbed.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingSelect.Duplex">
      <summary>
            Scan by using duplexer operations.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingSelect.FrontFirst">
      <summary>
            Scan the front of the document first. This value is valid only when DUPLEX is set.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingSelect.BackFirst">
      <summary>
            Scan the back of the document first. This value is valid only when DUPLEX is set.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingSelect.FrontOnly">
      <summary>
            Scan the front only.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingSelect.BackOnly">
      <summary>
            Scan the back only. This value is valid only when DUPLEX is set.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingSelect.NextPage">
      <summary>
            Scan the next page of the document.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingSelect.Prefeed">
      <summary>
            Enable pre-feed mode. Preposition the next document while scanning.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingSelect.AutoAdvance">
      <summary>
            Enable automatic feeding of the next document after a scan.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingSelect.AdvancedDuplex">
      <summary>
            Scan by using individual configuration settings for each child feeder item (WIA_CATEGORY_FEEDER_FRONT and WIA_CATEGORY_FEEDER_BACK). This flag cannot be set together with DUPLEX. A device that supports different scan settings for the front and back items should implement the optional ADF front and back items and it should support both DUPLEX and ADVANCED_DUPLEX.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.DocumentHandlingStatus">
      <summary>
            Document Handling Status
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingStatus.FeedReady">
      <summary>The document feeder has a page loaded and is ready for use.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingStatus.FlatReady">
      <summary>The flatbed is ready for use.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingStatus.DupReady">
      <summary>The duplexer is enabled and ready to use.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingStatus.FlatCoverUp">
      <summary>The flatbed cover is up.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingStatus.PathCoverUp">
      <summary>The paper path is covered and is preventing proper operation.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingStatus.PaperJam">
      <summary>A document is stuck in the document feeder.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingStatus.FilmTpaReady">
      <summary>A transparency adapter is installed and ready for use.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingStatus.StorageReady">
      <summary>A storage device is installed and ready for use.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingStatus.StorageFull">
      <summary>The storage is full; no upload operations are possible.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingStatus.MultipleFeed">
      <summary>A multiple feed occurred; this type of feed usually occurs with a PAPER_JAM value.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingStatus.DeviceAttention">
      <summary>There is an error that requires user intervention on the scanner.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.DocumentHandlingStatus.LampErr">
      <summary>The scanner has a problem with the lamp and is not ready.</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.FilmScanMode">
      <summary>
            Film Scan Mode
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.FilmScanMode.ColorSlide">
      <summary>The scan will be a color scan.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.FilmScanMode.ColorNegative">
      <summary>The scan will be a color scan of a negative.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.FilmScanMode.BwNegative">
      <summary>The scan will be black and white (grayscale) scan.</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.HardwareConfiguration">
      <summary>
            Hardware Configuration 
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.HardwareConfiguration.GenericWdmDevice">
      <summary>Generic WDM device</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.HardwareConfiguration.ScsiDevice">
      <summary>SCSI device</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.HardwareConfiguration.UsbDevice">
      <summary>USB device</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.HardwareConfiguration.SerialDevice">
      <summary>Serial device</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.HardwareConfiguration.ParallelDevice">
      <summary>Parallel device</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.HorizontalRegistration">
      <summary>
            Horizontal Bed Registration and Sheet Feeder Registration
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.HorizontalRegistration.LeftJustified">
      <summary>The document is positioned to the left with respect to the scanning head.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.HorizontalRegistration.Centered">
      <summary>The document is centered on the scanning head.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.HorizontalRegistration.RightJustified">
      <summary>The document is positioned to the right with respect to the scanning head.</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.Lamp">
      <summary>
            Lamp
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Lamp.On">
      <summary>The lamp is on.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Lamp.Off">
      <summary>The lamp is off.</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.MediaType">
      <summary>
            Media Type 
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.MediaType.Callback">
      <summary>Transfer an image to memory, in bands. This constant is obsolete for Windows�Vista and later operating systems.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.MediaType.MultipageFile">
      <summary>
            Transfer multiple images to a file.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.MediaType.MultipageCallback">
      <summary>
            Transfer multiple images to memory, in bands. This constant is obsolete for Windows�Vista and later operating systems.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.Mirror">
      <summary> 
            Mirror 
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Mirror.Mirrored">
      <summary>
            Mirrored value.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.OrientationAndRotation">
      <summary>
            Orientation and Rotation
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.OrientationAndRotation.Portrait">
      <summary>
            The driver will not rotate the image.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.OrientationAndRotation.Lanscape">
      <summary>
            The orientation is a 90-degree counterclockwise rotation, relative to the PORTRAIT orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.OrientationAndRotation.Rot180">
      <summary>
            The orientation is a 180-degree counterclockwise rotation, relative to the PORTRAIT orientation.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.OrientationAndRotation.Rot270">
      <summary>
            The orientation is a 270-degree counterclockwise rotation, relative to the PORTRAIT orientation.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.PageSize">
      <summary>
            Page Size
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.A4">
      <summary>
            8267 x 11692 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.Letter">
      <summary>
            8500 x 11000 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.Custom">
      <summary>
            Defined by the values of the WIA_IPS_PAGE_HEIGHT and WIA_IPS_PAGE_WIDTH properties.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.Uslegal">
      <summary>
            8500 x 14000(PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.Usledger">
      <summary>
            11000 x 17000 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.Usstatement">
      <summary>
            5500 x  8500 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.Businesscard">
      <summary>
            3543 x  2165 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoA0">
      <summary>
            33110 x 46811 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoA1">
      <summary>
            23385 x 33110 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoA2">
      <summary>
            16535 x 23385 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoA3">
      <summary>
            11692 x 16535 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoA5">
      <summary>
            5826 x  8267 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoA6">
      <summary>
            4133 x  5826 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoA7">
      <summary>
            2913 x  4133 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoA8">
      <summary>
            2047 x  2913 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoA9">
      <summary>
            1456 x  2047 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoA10">
      <summary>
            1023 x  1456 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoB0">
      <summary>
            39370 x 55669 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoB1">
      <summary>
            27834 x 39370 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoB2">
      <summary>
            19685 x 27834 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoB3">
      <summary>
            13897 x 19685 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoB4">
      <summary>
            9842 x 13897 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoB5">
      <summary>
            6929 x  9842 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoB6">
      <summary>
            4921 x  6929 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoB7">
      <summary>
            3464 x  4921 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoB8">
      <summary>
            2440 x  3464 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoB9">
      <summary>
            1732 x  2440 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoB10">
      <summary>
            1220 x  1732 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoC0">
      <summary>
            36102 x 51062 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoC1">
      <summary>
            25511 x 36102 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoC2">
      <summary>
            18031 x 25511 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoC3">
      <summary>
            12755 x 18031 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoC4">
      <summary>
            9015 x 12755 (unfolded) (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoC5">
      <summary>
            6377 x  9015 (folded once) (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoC6">
      <summary>
            4488 x  6377 (folded twice) (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoC7">
      <summary>
            3188 x  4488 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoC8">
      <summary>
            2244 x  3188 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoC9">
      <summary>
            1574 x  2244 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.IsoC10">
      <summary>
            1102 x  1574 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.JisB0">
      <summary>
            40551 x 57322 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.JisB1">
      <summary>
            28661 x 40551 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.JisB2">
      <summary>
            20275 x 28661 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.JisB3">
      <summary>
            14330 x 20275 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.JisB4">
      <summary>
            10118 x 14330 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.JisB5">
      <summary>
            7165 x 10118 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.JisB6">
      <summary>
            5039 x  7165 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.JisB7">
      <summary>
            3582 x  5039 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.JisB8">
      <summary>
            2519 x  3582 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.JisB9">
      <summary>
            1771 x  2519 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.JisB10">
      <summary>
            1259 x  1771 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.Jis2a">
      <summary>
            46811 x 66220 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.Jis4a">
      <summary>
            66220 x  93622 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.Din2b">
      <summary>
            55669 x 78740 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.Din4b">
      <summary>
            78740 x 111338 (PORTRAIT orientation).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.Auto">
      <summary>
            Used to configure automatic page size detection.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PageSize.CustomBase">
      <summary>
            Defined by the values of the WIA_IPS_PAGE_HEIGHT and WIA_IPS_PAGE_WIDTH properties. This value is used to define custom page sizes, instead of the single page that the WIA_PAGE_CUSTOM value enables.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.PhotometricInterpretation">
      <summary>
            Photometric Interpretation
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PhotometricInterpretation.White1">
      <summary>White is 1, and black is 0.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PhotometricInterpretation.White0">
      <summary>White is 0, and black is 1.</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.Planar">
      <summary>
            Planar
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Planar.PackedPixel">
      <summary>Image data is in packed-pixel format.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Planar.Planar">
      <summary>Image data is in planar format.</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.Preview">
      <summary> 
            Preview
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Preview.FinalScan">
      <summary>The application will perform a final scan.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Preview.PreviewScan">
      <summary>The application will perform a preview scan.</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.PreviewType">
      <summary>
            Preview Type
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PreviewType.AdvancedPreview">
      <summary>Live preview updates are supported.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.PreviewType.BasicPreview">
      <summary>Preview images can be updated only with a new preview scan.</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.SegmentationFilter">
      <summary>
            Segmentation Filter
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.SegmentationFilter.UseSegmentationFilter">
      <summary>
            The application should use the segmentation filter for multi-region scanning.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.SegmentationFilter.DontUseSegmentationFilter">
      <summary>
            The driver creates the child items itself for multi-region scanning. This situation typically occurs if a scanner uses fixed frames for multi-region scanning.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.ShowPreviewControl">
      <summary>
            Show preview control
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ShowPreviewControl.ShowPreviewControl">
      <summary>Do not show a preview control to the user, because this device cannot perform a preview.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ShowPreviewControl.DontShowPreviewControl">
      <summary>Show a preview control to the user, because this device can perform a preview.</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.SuppressPropertyPage">
      <summary>
            Suppress a property page
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.SuppressPropertyPage.ScannerItemGeneral">
      <summary>Suppress the general item property page for a scanner.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.SuppressPropertyPage.CameraItemGeneral">
      <summary>Suppress the general item property page for a camera.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.SuppressPropertyPage.DeviceGeneral">
      <summary>Suppress the general item property page for a device.</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.TransferCapabilities">
      <summary>
            Transfer Capabilities 
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.TransferCapabilities.ChildrenSingleScan">
      <summary>The device can transfer the parent and child items together or the device must make a separate scan for each item and each child item.</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.Transparency">
      <summary>
            Transparency Adapter Transparency Adapter Status
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Transparency.LightSourcePresentDetect">
      <summary>
            Light source present detect.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Transparency.LightSourcePresent">
      <summary>
            Light source present.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Transparency.LightSourceDetectReady">
      <summary>
            Light source detect ready.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.Transparency.LightSourceReady">
      <summary>
            Light source ready.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.TransparencyCapabilities">
      <summary>
            Transparency Adapter Capabilities
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.TransparencyCapabilities.DynamicFrameSupport">
      <summary>
            Dynamic frame support.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.TransparencyCapabilities.StaticFrameSupport">
      <summary>
            Static frame support.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.TransparencySelect">
      <summary> 
            Transparency Adapter Select
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.TransparencySelect.Select">
      <summary>
            Select value [CURRENTLY NOT USED].
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.TransparencySelect.Positive">
      <summary>
            Positive value.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.TransparencySelect.Negative">
      <summary>
            Negative value.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.VerticalRegistration">
      <summary> 
            Vertical Bed Registration
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.VerticalRegistration.TopJustified">
      <summary>The paper is top-aligned.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.VerticalRegistration.Centered">
      <summary>The paper is centered.</summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.VerticalRegistration.BottomJustified">
      <summary>The paper is bottom-aligned.</summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.WiaDeviceType">
      <summary>
            WIA device types enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaDeviceType.UnspecifiedDeviceType">
      <summary>
            Unspecified devic type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaDeviceType.ScannerDeviceType">
      <summary>
            Scanner device type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaDeviceType.CameraDeviceType">
      <summary>
            Camera device type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaDeviceType.VideoDeviceType">
      <summary>
            Videoevice type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.WiaItemFlag">
      <summary>
            WIA item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.RemovedItemFlag">
      <summary>
            Removed item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.FreeItemFlag">
      <summary>
            Free item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.ImageItemFlag">
      <summary>
            Image item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.FileItemFlag">
      <summary>
            File item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.FolderItemFlag">
      <summary>
            Folder item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.RootItemFlag">
      <summary>
            Root item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.AnalyzeItemFlag">
      <summary>
            Analyze item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.AudioItemFlag">
      <summary>
            Audio item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.DeviceItemFlag">
      <summary>
            Device item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.DeletedItemFlag">
      <summary>
            Deleted item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.DisconnectedItemFlag">
      <summary>
            Disconnected item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.HPanoramaItemFlag">
      <summary>
            HPanorama item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.VPanoramaItemFlag">
      <summary>
            VPanorama item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.BurstItemFlag">
      <summary>
            Burst item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.StorageItemFlag">
      <summary>
            Storage item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.TransferItemFlag">
      <summary>
            Transfer item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.GeneratedItemFlag">
      <summary>
            Generated item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.HasAttachmentsItemFlag">
      <summary>
            Has attachments item flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.WiaItemFlag.VideoItemFlag">
      <summary>
            Video item flag.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.ImageFormat">
      <summary> 
            Image format enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ImageFormat.wiaFormatBMP">
      <summary>
            BMP image format.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ImageFormat.wiaFormatGIF">
      <summary>
            GIF image format.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ImageFormat.wiaFormatJPEG">
      <summary>
            JPEG image format.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ImageFormat.wiaFormatPNG">
      <summary>
            PNG image format.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.WIA.ImageFormat.wiaFormatTIFF">
      <summary>
            TIFF image format.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.PageSizeAttrib">
      <summary>
            Image Components Page Size Attributes class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.WIA.PageSizeAttrib.#ctor(System.Single,System.Single)">
      <summary>
            Constructor.
            </summary>
      <param name="width">Page size attribution width value.</param>
      <param name="height">Page size attribution height value.</param>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.PageSizeAttrib.Width">
      <summary>
            Get/Set Width value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.PageSizeAttrib.Height">
      <summary>
            Get/Set Height value.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.WIA.PageSizeAttrib.GetPageSizeValue(ImageComponents.Core.Imaging.WIA.PageSize)">
      <summary>
            Get page size value.
            </summary>
      <param name="value">Page size value.</param>
      <returns>Capability attribute.</returns>
    </member>
    <member name="M:ImageComponents.Core.Imaging.WIA.PageSizeAttrib.GetPageInchesSizeValue(ImageComponents.Core.Imaging.WIA.PageSize)">
      <summary>
            Get page millimeter size value.
            </summary>
      <param name="value">Page size value.</param>
      <returns>Capability attribute.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.DeviceSettings">
      <summary>
            Wia Device Settings class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.DeviceType">
      <summary> 
            [READ ONLY] The DeviceType property contains a device type and device subtype. The WIA service creates and maintains this property 
            The device type and subtype are obtained from the driver's INF file of the device file. An application reads the DeviceType property to determine whether it is using a scanner, camera, or video device.
            For more information about INF files, see INF Files for WIA Devices. The StiDeviceTypeXxx constants are defined in Sti.h.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.DeviceID">
      <summary> 
            [READ ONLY] The DeviceID property contains the device identifier (ID) string for a WIA minidriver. The WIA service creates and maintains this property. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.VendorDescription">
      <summary> 
            [READ ONLY] The VendorDescription property contains a vendor description string for the WIA minidriver. The WIA service creates and maintains this property.
            The vendor description is obtained from the INF file. An application reads the VendorDescription property to get a description of the device vendor. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.DeviceDescription">
      <summary> 
            [READ ONLY] The DeviceDescription property contains the device description string for a WIA minidriver. The WIA service creates and maintains this property.
            The device description string that the DeviceDescription property contains is obtained from the driver's INF file. An application reads this property to get a description of the device. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.PortName">
      <summary> 
            [READ ONLY] The PortName property contains an installed device's port name, which is assigned by the kernel-mode driver that operates the device. The WIA service creates and maintains this property.
            An application reads the PortName property to determine the port name. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.DeviceName">
      <summary>
            [READ ONLY] The DeviceName property contains the name of a device. The WIA service creates and maintains this property.
            The device name that is contained in the DeviceName property is obtained from the driver's INF file. An application reads this property to obtain the name of the device. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.ServerName">
      <summary>
            [READ ONLY] The ServerName property contains the name of the server that a WIA minidriver is running on.
            The default value of ServerName is "local". This property should contain the string "local" when an application is connected to a device on the same computer. 
            Versions: Optional for Microsoft Windows XP and later operating systems.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.RemoteDeviceID">
      <summary> 
            [READ ONLY] The RemoteDeviceID property contains the device identifier (ID) of a WIA device that is installed on a remote computer. The WIA service creates and maintains this property. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.UiClassID">
      <summary> 
            [READ ONLY] The UiClassID property contains the vendor-supplied class identifier (CLSID) for any user interface (UI) extension COM object that is installed with a WIA minidriver. The WIA service creates and maintains this property.
            The UI CLSID value that is contained in the UiClassID property is obtained from the driver's INF file. If no UI CLSID is specified, the WIA service supplies a default value. This property is used only internally by the WIA service when UI is being displayed. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.HardwareConfiguration">
      <summary> 
            [READ ONLY] The HardwareConfiguration property indicates the type of connection that a device is using. The WIA service creates and maintains this property, and only the WIA service can change it. 
            An application reads the HardwareConfiguration property to determine the device's connection type.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.Baudrate">
      <summary> 
            [READ ONLY] BaudRate 
            The Baudrate property contains the current baud rate setting for a device. The WIA service creates and maintains this property.
            The value of the Baudrate property should be "Empty" if the device is not connected by a serial cable. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.WiaVersion">
      <summary> 
            [READ ONLY] The WiaVersion property contains the number (as a string) of the current WIA version that is installed on a computer. The WIA service creates and maintains this property. 
            An application reads WiaVersion to determine the version of WIA that is installed on the computer. 
            Versions: Available in Microsoft Windows XP and later operating systems.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.DriverVersion">
      <summary> 
            [READ ONLY] The DriverVersion property contains the current DLL version of a WIA minidriver. The WIA service creates and maintains this property. 
            If the WIA minidriver does not supply a version resource, the WIA service supplies the value "0.0.0.0" as a default. An application reads DriverVersion to determine the version of the WIA minidriver DLL.
            Note:  Beginning with Windows Vista, the wildcard IP address 0.0.0.0 is not available.
            Also beginning with Windows Vista, if the IPAutoconfigurationEnabled registry key is set to a value of 0, automatic IP address assignment is disabled, and no IP address is assigned. In this case, the ipconfig command line tool will not display an IP address. If the key is set to a nonzero value, an IP address is automatically assigned. This key can be located at the following paths in the registry:
            HKEY_LOCAL_MACHINE\SYSTEM\Current Control Set\Services\Tcpip\Parameters\IPAutoconfigurationEnabled
            HKEY_LOCAL_MACHINE\SYSTEM\Current Control Set\Services\Tcpip\Parameters\Interfaces\GUID\IPAutoconfigurationEnabled
            Versions: Available in Microsoft Windows XP and later operating systems.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.PnpID">
      <summary> 
            [READ ONLY] The current PnP id for the device. The WIA service creates and maintains this property. This property is available in Windows Vista and later.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.FirmwareVersion">
      <summary>
            [READ ONLY] The FirmwareVersion property contains a device firmware version. The minidriver creates and maintains this property.
            The value of the FirmwareVersion property must be a string value, such as "1.0.4" or "1.0abc".
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.ConnectionStatus">
      <summary> 
            [READ ONLY] The ConnectStatus property contains the current connection status for a device. The WIA minidriver creates and maintains this property.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.HorizontalBedSize">
      <summary> 
            [READ ONLY] The HorizontalBedSize property contains the physical dimensions of a scanner's flatbed, in thousandths of an inch (.001). The WIA minidriver creates and maintains this property.
            Versions: Beginning with Windows Vista, the HorizontalBedSize property is still available, but it has been replaced by the WIA_IPS_MAX_HORIZONTAL_SIZE property, so you should consider it optional.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.VerticalBedSize">
      <summary> 
            [READ ONLY] The VerticalBedSize property contains the physical vertical dimensions of a scanner's flatbed, in thousandths of an inch (.001). The WIA minidriver creates and maintains this property.
            Versions: Beginning with Windows Vista, the VerticalBedSize property is still available at the root level of the WIA driver. But this property has been replaced with the WIA_IPS_MAX_VERTICAL_SIZE property, and you should consider it to be optional.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.HorizontalSheetFeedSize">
      <summary> 
            [READ ONLY] The HorizontalSheetFeedSize property contains the physical horizontal dimensions of  scanner's document feeder, in thousandths of an inch (.001). The WIA minidriver creates and maintains this property.
            Versions: Beginning with Windows Vista, the HorizontalSheetFeedSize property is still available at the root level of the WIA driver, but it has been replaced by the WIA_IPS_MAX_HORIZONTAL_SIZE property, so you should consider it optional.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.VerticalSheetFeedSize">
      <summary> 
            [READ ONLY] The VerticalSheetFeedSize property contains the physical vertical dimensions of a scanner's document feeder, in thousandths of an inch (.001). The WIA minidriver creates and maintains this property.
            Versions: Beginning with Windows Vista, the VerticalSheetFeedSize property is still available at the root level of the WIA driver But this property has been replaced with the WIA_IPS_MAX_VERTICAL_SIZE property, and you should consider it to be optional.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.SheetFeederRegistration">
      <summary> 
            [READ ONLY] The SheetFeederRegistration property contains the registration, or alignment and edge detection, for documents that are placed on the flatbed of a scanner. The WIA minidriver creates and maintains this property.
            The SheetFeederRegistration property indicates how a document is horizontally positioned on the scanning head of a handheld or sheet-fed scanner. The scanner uses the property to predict where a user places a document on the scanning head.
            For scanners that support more than one scanning head, the SheetFeederRegistration property is relative to the topmost scanning head. This property is required for sheet-fed, scroll-fed, and handheld scanners.
            Versions: For Windows Vista and later operating systems, use the WIA_IPS_SHEET_FEEDER_REGISTRATION property instead.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.HorizontalBedRegistration">
      <summary> 
            [READ ONLY] The HorizontalBedRegistration property contains the registration, or horizontal alignment, for documents that are placed on the flatbed of a scanner. The WIA minidriver creates and maintains this property.
            Versions: Obsolete in Windows Vista and later operating systems and should no longer be used. However, this property is still defined in Windows Vista for compatibility with applications and devices designed for Windows Server 2003, Windows XP, and previous versions of Windows.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.VerticalBedRegistration">
      <summary> 
            [READ ONLY] The VerticalBedRegistration property contains the registration, or vertical alignment and edge detection, for documents that are placed on the flatbed of a scanner. The WIA minidriver creates and maintains this property.
            Versions: Obsolete in Windows Vista and later operating systems and should no longer be used. However, this property is still defined in Windows Vista for compatibility with applications and devices designed for Windows Server 2003, Windows XP, and previous versions of Windows.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.PlatenColor">
      <summary>
            [READ ONLY] The PlatenColor property contains the current platen color. 
            A minidriver should report the PlatenColor  as a vector of four BYTE values in the form of an RGBQUAD structure (which is described in the Microsoft Windows SDK documentation). The WIA minidriver creates and maintains this property.
            An application reads PlatenColor to get the scanner's platen color. This color can help the application post-process the final image.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.FilterSelect">
      <summary> 
            [READ ONLY] The FilterSelect property is reserved by Microsoft for future use and is not implemented at this time.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.DitherSelect">
      <summary> 
            [READ ONLY] The DitherSelect property is reserved by Microsoft for future use and is not implemented at this time.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.DitherPatternData">
      <summary> 
            [READ ONLY] The DitherPatternData property is reserved by Microsoft for future use and is not implemented at this time.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.MaxScanTime">
      <summary>
            [READ ONLY] The MaxScanTime property contains the maximum time to scan a single page with the current property settings, in milliseconds.
            An application reads the MaxScanTime property to estimate how much the time it will take to scan a page. This estimate is helpful when you are determining the conditions of a device that has stopped responding. The WIA minidriver creates and maintains this property.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.ShowPreviewControl">
      <summary>
            [READ ONLY] The ShowPreviewControl property indicates whether an item needs a preview control displayed to the user. The WIA minidriver creates and maintains this property.
            The ShowPreviewControl property helps control devices that cannot preview. For example, some feeder-driven devices cannot reload the paper for a preview scan.
            Versions: Available with Microsoft Windows XP. ForWindows Vista and later, use the WIA_IPS_SHOW_PREVIEW_CONTROL property.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.MinHorizontalSheetFeedSize">
      <summary>
            [READ ONLY] The MinHorizontalSheetFeedSize property contains the physical horizontal dimensions of the smallest page that a scanner's document feeder can scan, in thousandths of an inch (.001). The WIA minidriver creates and maintains this property.
            Versions: Beginning with Windows Vista, the MinHorizontalSheetFeedSize property is still available at the root level of the WIA driver, but it has been replaced by the WIA_IPS_MIN_HORIZONTAL_SIZE property, so you should consider it optional.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.MinVerticalSheetFeedSize">
      <summary>
            [READ ONLY] The MinVerticalSheetFeedSize property contains the physical vertical dimensions of the smallest page that a scanner's document feeder can scan, in thousandths of an inch (.001). The WIA minidriver creates and maintains this property.
            Versions: Beginning with Windows Vista, the WIAMinVerticalSheetFeedSize property is still available at the root level of the WIA driver, but it has been replaced by the WIA_IPS_MIN_VERTICAL_SIZE property, so you should consider it optional.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.UserName">
      <summary>
            [READ ONLY] The UserName property on the WIA driver root item allows drivers to get the domain name or the machine name and user name of the user who is accessing the WIA device at a given point in time. The WIA service creates and maintains this property.
            Versions: Available on Windows Vista and later operating systems.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.ServiceID">
      <summary>
            [READ ONLY] The ServiceID property contains the service ID of a Web services scanner device. The WIA minidriver creates and maintains this property.
            VT_BSTR	Read-only
            The WIA minidriver initializes this property at run time by reading the PKEY_PNPX_ServiceId device property from the Function Instance object.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.ScannerDeviceID">
      <summary>
            [READ ONLY] The DeviceID property contains a unique Function Instance identifier for a Web services scanner device. This identifier represents the Web service on the scanner device with which the WIA minidriver is communicating. No assumptions about the form of this identifier should be made. The WIA minidriver creates and maintains this property.WIA applications can use the value of DeviceID to find, using the Function Discovery API, the Function Instance object that represents the Web services scanner device used in the current WIA session.
            The WIA minidriver initializes this property at run time by reading the PKEY_PNPX_ID device property from the Function Instance object. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.GlobalIdentity">
      <summary>
            [READ ONLY] The GlobalIdentity property contains the SOAP address of a Web services scanner device. The WIA minidriver creates and maintains this property. 
            The WIA minidriver initializes this property at run time by reading the PKEY_PNPX_GlobalIdentity device property from the Function Instance object.
            Both PKEY_PNPX_GlobalIdentity and PKEY_PNPX_ID contain a unique ID of the UPnP Device. The difference is that PKEY_PNPX_GlobalIdentity always contains the UUID of the root device for all Function Instances, while PKEY_PNPX_ID contains the UUID of the Device/Sub-Device that the Function Instance represents.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.DocumentHandlingCapabilities">
      <summary> 
            [READ ONLY] Document Handling Capabilities
            The DocumentHandlingCapabilities property contains the capabilities of a scanner. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.HorizontalResolutions">
      <summary> 
            [READ ONLY] Gets or sets the available horizontal resolutions. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.VerticalResolutions">
      <summary> 
            [READ ONLY] Gets or sets the available vertical resolutions. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.EndorserCharacters">
      <summary>
            [READ ONLY] The EndorserCharacters property contains all of the valid characters that an application can use to create valid endorser strings. 
            An endorser is a printer that is installed on a scanner that imprints a text message on every page that is scanned. The WIA minidriver should validate the setting of the WIA_DPS_ENDORSER_STRING property against the valid character set in the EndorserCharacters property. The minidriver creates and maintains this property.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.DocumentHandlingSelect">
      <summary>
            The DocumentHandlingSelect property contains the current scanner acquisition source and mode. 
            An application reads the DocumentHandlingSelect property to determine the current acquisition source of a scanner, or an application write this property to set the source and mode of the scanner. In addition, applications use this property to enable and disable duplexer functionality. The WIA minidriver creates and maintains this property.
            The values DUPLEX and FRONT_ONLY are mutually exclusive set one or the other, but not both.
            Versions: Available for Microsoft Windows XP. For Windows Vista and later, use the WIA_IPS_DOCUMENT_HANDLING_SELECT property.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.DeviceTime">
      <summary> 
            The DeviceTime property contains the current clock time that is stored on a device. The minidriver creates and maintains this property.
            When the DeviceTime property is read, the minidriver should check the device's current clock time and should always return the current time. This property is supported only by devices that have an internal clock. If the device clock can be set, this property is read/write; otherwise, it is read-only. WIA devices report time in a SYSTEMTIME structure (which is described in the Microsoft Windows SDK documentation).
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.PadColor">
      <summary> 
            The PadColor property contains the current pad color that is used when the WIA minidriver pads unaligned data. The WIA minidriver creates and maintains this property.
            The PadColor property should be reported as a vector of four BYTE values in the form of an RGBQUAD structure (which is described in the Microsoft Windows SDK documentation). 
            An application reads PadColor to get the padding color that is used.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.ScanAheadPages">
      <summary>
            Scan Ahead Pages
            The ScanAheadPages property contains a value that indicates whether a scanner will cache pages in a scanner buffer before sending them to an application.
            If the ScanAheadPages property is zero, scan ahead is disabled, and the scanner will not scan ahead any pages. 
            If the scanner performs data transfers on the buffered scan-ahead item, the scanner will retrieve the buffered pages. WIA properties cannot be changed during a scan-ahead operation. ScanAheadPages is optional.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.AbortWhenNoPaperDetected">
      <summary>
            Gets or set the current abort when no paper is detected.
            </summary>
      <value>Sets the current abort when no paper is detected.</value>
      <returns>Gets the abort when no paper is detected.</returns>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.ShowProgressIndicator">
      <summary>
            Gets or set the current show progress indicator value.
            </summary>
      <value>Sets the current show progress indicator value.</value>
      <returns>Gets the current show progress indicator value.</returns>
      <remarks> Set to null to use the current default setting.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.EndorserString">
      <summary> 
            The EndorserString property contains a string that is to be endorsed (that is, printed) on each page that the minidriver scans. 
            An application sets the EndorserString property by using the valid character set that is reported in the WIA_DPS_ENDORSER_CHARACTERS property. The WIA minidriver should endorse documents only if a string is set in EndorserString. An empty string means that the endorser functionality is disabled.
            Because the driver must interpret the endorser string, your driver can use special characters in EndorserString. However, only your applications will understand these characters.
            A driver that supports the EndorserString property must support the following list of tokens:
            $DATE$	The date in the form YYYY/MM/DD.
            $DAY$	The day, in the form DD.
            $MONTH$	The month of the year, in the form MM.
            $PAGE_COUNT$	The number of pages that are transferred.
            $TIME$	The time of day, in the form HH:MM:SS.
            $YEAR$	The year, in the form YYYY.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.Pages">
      <summary>
            Pages
            The Pages property contains the current number of pages to acquire from an automatic document feeder. 
            An application reads the Pages property to determine a document feeder's page capacity. The application also sets this property to the number of pages it is going to scan. The WIA minidriver creates and maintains Pages.
            If you set Pages to zero (0)the scanner will process continuously until no more documents are fed into the ADF.
            Note: If duplex mode is enabled (that is, the WIA_DPS_DOCUMENT_HANDLING_SELECT property is set to FEEDER | DUPLEX), Pages is still equal to the number of pages to scan.One sheet of paper will automatically contain two pages if DUPLEX is enabled, even if the back side of the page is blank.
            If you set Pages to 1, the scanner will process one of the sides of the page. If a scanner is unable to scan only one side of a page while in duplex mode, you should change the Pages value for the Inc member of the WIA_PROPERTY_INFO structure to 2. This value signals to the application that it must request pages in multiples of two. If Pages is zero, the scanner will scan all pages that are currently loaded into the document feeder.
            Versions: Available for Microsoft Windows XP. For Windows Vista and later, use the identical WIA_IPS_PAGES property.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.PageSize">
      <summary>
            Page Size
            The PageSize property contains the size of the page that is currently selected to be scanned. 
            To select the dimensions of the page to scan, an application sets PageSize. The WIA minidriver creates and maintains this property.
            Versions: Available for Microsoft Windows XP. For Windows Vista and later, use the identical WIA_IPS_PAGE_SIZE property.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.DeviceSettings.Preview">
      <summary>
            Preview
            The Preview property indicates the preview mode for a device. An application sets this property to place the device into a preview mode. 
            Versions: Available for Microsoft Windows XP. For Windows Vista and later, use the identical WIA_IPS_PREVIEW property.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.WIA.ImageSettings">
      <summary>
            Wia Image Settings class.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.ItemName">
      <summary> 
            [READ ONLY] The ItemName property contains a WIA item name. 
            The item name is the same as the item name that is specified in a call to the wiasCreateDrvItem service utility function. 
            An application reads the ItemName property to determine which item it is currently using. Each item must have a unique name. The WIA service creates and maintains ItemName.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.FullItemName">
      <summary>
            [READ ONLY] The FullItemName property contains the full item name (the item name with path information). 
            The full item name is the same as the bstrFullItemName parameter of the wiasCreateDrvItem service utility function. An application reads the FullItemName property to determine which item it is currently using and where that item is located in the WIA item tree. Each item should have a unique name. Applications commonly use the full item name to search for items in the WIA item tree. The WIA service creates and maintains FullItemName.
            An application reads FullItemName to determine the format of the image that it is about to receive. An application writes this property to set the format. FullItemName depends on the WIA_IPA_TYMED property. The WIA minidriver creates and maintains FullItemName.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.ItemTime">
      <summary> 
            The ItemTime property contains the time that an image was originally captured.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.ItemFlags">
      <summary>
            [READ ONLY] The ItemFlags property contains the descriptive flags for a WIA item. 
            The WIA item flags are the same as those in the lObjectFlags parameter of the wiasCreateDrvItem service utility function. The WIA service creates and maintains the ItemFlags property.
            An application reads ItemFlags to determine a WIA item's descriptive flag values. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.PreferredFormat">
      <summary>
            [READ ONLY] The PreferredFormat property contains the preferred format for images that the WIA minidriver transfers. The minidriver creates and maintains this property.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.ChannelsPerPixel">
      <summary> 
            [READ ONLY] The ChannelsPerPixel property contains the number of channels per pixel for an image. The WIA minidriver creates and maintains this property.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.BitsPerChannel">
      <summary>
            [READ ONLY] The BitsPerChannel property contains the number of bits per channel for the image. The WIA minidriver creates and maintains this property.
            The BitsPerChannel property is similar to the WIA_IPA_RAW_BITS_PER_CHANNEL property (which is used for the raw formats).
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.PixelsPerLine">
      <summary>
            [READ ONLY] The PixelsPerLine property contains the number of pixels in each line of an image (that is, the width of the image, in pixels). The WIA minidriver creates and maintains this property.
            The PixelsPerLine property is optional for Windows Vista drivers for all transfer-enabled items. If PixelsPerLine, WIA_IPA_BYTES_PER_LINE, and WIA_IPA_NUMBER_OF_LINES are implemented, applications written for Windows Server 2003, Windows XP, and previous Windows versions can estimate the number of pixels per line, the number of bytes that are required for each scan line, and the total number of scan lines in the image. These values are not accurate because the image processing filter might modify the actual values, which PixelsPerLine, WIA_IPA_BYTES_PER_LINE, and WIA_IPA_NUMBER_OF_LINES represent.
            If Windows Vista driver does not supply these properties, the compatibility layer in the WIA service will add these properties. When the WIA service adds these properties, they will be updated by using the WIA_IPA_DEPTH, WIA_IPS_XEXTENT, and WIA_IPS_YEXTENT properties.
            Windows Vista applications should always parse the image header data to get information about the image that is more accurate than the information that is available from the preceding properties.
            Versions: Optional for Windows Vista drivers for all transfer-enabled items.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.BytesPerLine">
      <summary>
            [READ ONLY] The BytesPerLine property contains the number of bytes in one scan line of an image. The WIA minidriver creates and maintains this property.
            The BytesPerLine property is optional for Windows Vista drivers for all transfer-enabled items. If this property, together with the WIA_IPA_NUMBER_OF_LINES and WIA_IPA_PIXELS_PER_LINE properties are implemented, applications designed for Windows Server 2003, Windows XP, and previous versions of Windows can estimate the number of pixels for each line, the number of bytes that are required for each scan line, and the total number of scan lines in the image. These values are not accurate because the image processing filter might modify the actual values that these properties represent.
            If the Windows Vista driver does not supply these properties, the compatibility layer in a WIA service will add these properties. When the WIA service adds these properties, they will be updated by using the WIA_IPA_DEPTH, WIA_IPS_XEXTENT, and WIA_IPS_YEXTENT properties.
            Windows Vista applications should always parse the image header data to get more accurate information on the image then is available from these properties.
            Versions: Optional for Windows Vista drivers for all transfer-enabled items.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.NumberOfLines">
      <summary>
            [READ ONLY] The NumberOfLines property contains the number of lines that are contained in an image (that is, the vertical height of the image, in pixels). The WIA minidriver creates and maintains this property.
            The NumberOfLines property is optional for Windows Vista drivers for all transfer-enabled items. If NumberOfLines, WIA_IPA_BYTES_PER_LINE, and WIA_IPA_PIXELS_PER_LINE are implemented,  applications written for Windows Server 2003, Windows XP, and previous Windows versions can estimate the number of pixels per line, the number of bytes that are required for each scan line, and the total number of scan lines in the image. These values are not accurate because the image processing filter might modify the actual values, which NumberOfLines, WIA_IPA_BYTES_PER_LINE, and WIA_IPA_PIXELS_PER_LINE represent.
            If a Windows Vista driver does not supply these properties, the compatibility layer in the WIA service will add these properties. When the WIA service adds these properties, they will be updated by using the WIA_IPA_DEPTH, WIA_IPS_XEXTENT, and WIA_IPS_YEXTENT properties.
            Windows Vista applications should always parse the image header data to get information about the image that is more accurate than the information that is available from the preceding properties.
            Versions: Optional for Windows Vista drivers for all transfer-enabled items.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.GammaCurves">
      <summary>
            [READ ONLY] The GammaCurves property is reserved by Microsoft for future use and is not implemented at this time.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.ItemSize">
      <summary>
            [READ ONLY] The ItemSize property contains the current size, in bytes, of the data that is associated with a WIA item. The WIA minidriver creates and maintains this property.
            The value that the ItemSize property contains is the total size of the data that is being transferred. If this value is zero, the WIA minidriver has no information about the exact size of the data. (This situation is common for compressed data.) 
            An application reads ItemSize to determine the size of the data before it is transferred. The WIA service reads this property to assist in allocating memory for data transfers. For more information about data transfers, see Transferring Data to a WIA Application. 
            If ItemSize is set to zero and TYMED is configured for a file transfer, the WIA service does not allocate any memory for the WIA minidriver.
            Note: In Windows Vista and later versions of the operating system only set the ItemSize property to 0 for the ADF item when automatic document size detection is enabled.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.ColorProfile">
      <summary>
            [READ ONLY] The ColorProfile property is reserved by Microsoft for future use and is not implemented at this time.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.MinBufferSize">
      <summary>
            [READ ONLY] The MinBufferSize property specifies the minimum buffer size that is used in data transfers.
            If a data transfer is performed through a callback mechanism, the MinBufferSize property value can be as small as 64 KB. However, if the transfer is to file, the property value is the number of bytes that are needed to transfer one page of data at a time. The WIA minidriver creates and maintains this WIA property. 
            MinBufferSize is identical to the WIA_IPA_BUFFER_SIZE property.
            An application can read MinBufferSize to determine the driver-specified buffer size for data transfers. The WIA service also reads this property to allocate memory for the minidriver during the data transfer.
            Note: The value that the MinBufferSize property contains is the minimum amount of data that an application can request at any given time. The larger the buffer size, the larger the requests to the device will be. This larger buffer size can make the device appear slow and unresponsive, can slow the overall computer performance, and can consume excessive resources. Buffer sizes that are too small can slow performance of the data transfer by requiring many smaller requests. Choose a reasonable buffer size by considering the typical size of a data request to your device, the number of requests, and the size of those requests.
            Versions: Optional for Windows Vista drivers for all transfer-enabled items. If this property is implemented, applications written for Windows Server 2003, Windows XP, and previous Windows versions can estimate the transfer buffer size, and, therefore, the transfer rate will be optimal.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.BufferSize">
      <summary>
            [READ ONLY] The BufferSize property contains the size of the buffer, in bytes, that is used during a data transfer. The WIA minidriver creates and maintains this property. 
            VT_I4	Read-only
            The BufferSize property is identical to the WIA_IPA_MIN_BUFFER_SIZE property.
            An application can read BufferSize to determine the driver-specified buffer size for data transfers. The WIA service also reads this property to allocate memory for the minidriver during the data transfer.
            Note: The value that the BufferSize property contains is the minimum amount of data that an application can request at any given time. The larger the buffer size, the larger the requests to the device will be. This larger buffer size can make the device seem slow and unresponsive, can slow the overall computer performance, and can consume excessive resources. Buffer sizes that are too small can slow performance of the data transfer by requiring many smaller requests. Choose a reasonable buffer size by considering the typical size of a data request to your device, the number of requests, and the size of those requests.
            Versions: Optional for Windows Vista drivers for all transfer-enabled items. If you implement this property, applications that are designed for Windows Server 2003, Windows XP, and previous versions of Windows can estimate the transfer buffer size and, therefore, the transfer rate will be optimal.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.RegionType">
      <summary>
            [READ ONLY] The RegionType property is reserved by Microsoft for future use and is not implemented at this time.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.IcmProfileName">
      <summary>
            [READ ONLY] The IcmProfileName property contains the image color management (ICM) profile name that is needed to properly decode an image. 
            An application reads the IcmProfileName property to determine the ICM profile to use when processing the image. The WIA service creates and maintains this property based on the ICMProfiles entry in the driver installation file.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.AppColorMapping">
      <summary>
            [READ ONLY] The AppColorMapping property is reserved by Microsoft for future use and is not implemented at this time.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.StreamCompatibilityID">
      <summary>
            [READ ONLY] The PropStreamCompatID property specifies a class identifier (CLSID) that represents a set of device property values. 
            If a device driver implements the PropStreamCompatID property, applications use this property to determine whether the device supports a set of values.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.FilenameExtension">
      <summary>
            [READ ONLY] The FilenameExtension property contains the file name extension for a particular file format. The WIA minidriver creates and maintains this property.
            The minidriver updates the FilenameExtension property to reflect the current value of the WIA_IPA_FORMAT property.
            For example, if WIA_IPA_FORMAT is WiaImgFmt_JPEG, FilenameExtension should be "jpg". If WIA_IPA_FORMAT is WiaImgFmt_BMP, FilenameExtension should be "bmp". Note that the file name extension does not include the period (".").
            The FilenameExtension property is recommended for drivers that support standard formats and is required for drivers that implement custom-defined formats. FilenameExtension informs the application of the correct file name extension to use during the transfer of privately formatted files. For example, if the A. Datum Corporation created a WIA driver that transferred a file in a new format, the company could specify an extension of "adc". This extension enables applications to transfer data in that format to a file and to create a file name such as Myfile.adc, which is useful to others who understand the new extension. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.SuppressPropertyPage">
      <summary>
            [READ ONLY] The SuppressPropertyPage property specifies whether to suppress the general property pages for items on a device.
            Versions: Available on Microsoft Windows XP and later operating systems.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.ItemCategory">
      <summary>
            [READ ONLY] The ItemCategory property contains grouped categories for WIA items. 
            The WIA service creates and maintains this property.
            Versions: Available in Windows Vista and later versions of the operating system. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.UploadItemSize">
      <summary>
            The UploadItemSize property is used by applications to specify the number of bytes to upload for an item. The application creates and maintains this property.
            Versions: Available on Windows Vista and later operating systems.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.ItemsStored">
      <summary>
            [READ ONLY] The ItemsStored property specifies how many items are stored in the storage (WIA_CATEGORY_FOLDER) item. The WIA minidriver creates and maintains this WIA property. 
            Versions: Available in Windows Vista and later versions of the operating system. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.RawBitsPerChannel">
      <summary>
            [READ ONLY] The RawBitsPerChannel property contains the number of bits in each color channel. 
            The RawBitsPerChannel property should be reported as a vector that contains as many byte values as there are channels, where the first byte corresponds to the number of bits in the first channel, the second byte to the number of bits in the second channel, and so on. The vector must contain as many entries as the WIA_IPA_CHANNELS_PER_PIXEL property reports there are channels. The driver sets WIA_IPA_CHANNELS PER_PIXEL when the application sets WIA_IPA_FORMAT to WiaImgFmt_RAW.
            RawBitsPerChannel is similar to the WIA_IPA_BITS_PER_CHANNEL property (which is used for formats other than RAW).
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.CurrentIntents">
      <summary> 
            [READ ONLY] Gets or sets the available current intents. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Invert">
      <summary>
            [READ ONLY] The Invert property is reserved by Microsoft for future use and is not implemented at this time.
            The WIA_IPS_FILM_SCAN_MODE property is not related to WIA_IPS_ORIENTATION. WIA_IPS_ORIENTATION describes the orientation of the document to be scanned in relationship to the direction of the scan; in contrast, WIA_IPS_FILM_SCAN_MODE describes an operation that is to be applied to an image after it is scanned.
            Versions: Available in Windows Vista and later operating systems. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Mirror">
      <summary>
            [READ ONLY] The Mirror property is reserved by Microsoft for future use and is not implemented at this time.
            The Mirror property is not related to the WIA_IPS_ORIENTATION propety. WIA_IPS_ORIENTATION specifies the orientation of the document to be scanned in relationship to the direction of the scan; in contrast, Mirror specifies an operation that is to be applied to an image after it is scanned.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.WarmUpTime">
      <summary> 
            [READ ONLY] The WarmUpTime property contains the maximum warm-up time, in milliseconds, that a device needs before starting the scanning operation. The WIA minidriver creates and maintains this property.
            An application can read the WarmUpTime property to determine the maximum warm-up time for a device. The application can then present a "waiting for the device to warm up" dialog box to let users know that a wait or pause might occur before anything happens. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.MaxHorizontalSize">
      <summary>
            [READ ONLY] The MaxHorizontalSize property contains the physical horizontal dimension of a scanner's flatbed, in thousandths of an inch (.001). The WIA minidriver creates and maintains this property.
            Versions: Available in Windows Vista and later operating systems. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.MaxVerticalSize">
      <summary>
            [READ ONLY] The MaxVerticalSize property contains the physical vertical dimension of a scanner's flatbed, in thousandths of an inch (.001). The WIA minidriver creates and maintains this property.
            Versions: Available in Windows Vista and later operating systems. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.MinHorizontalSize">
      <summary>
            [READ ONLY] The MinHorizontalSize property contains the physical horizontal dimensions of the smallest page that a scanner's document feeder can scan, in thousandths of an inch (.001). The WIA minidriver creates and maintains this property.
            Versions: Available in Windows Vista and later operating systems. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.MinVerticalSize">
      <summary>
            [READ ONLY] The MinVerticalSize property contains the physical vertical dimensions of the smallest page that a scanner's document feeder can scan, in thousandths of an inch (.001). The WIA minidriver creates and maintains this property
            Versions: Available in Windows Vista and later operating systems. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.SheetFeederRegistration">
      <summary>
            [READ ONLY] The SheetFeederRegistration property contains the registration, or alignment and edge detection, for documents that are placed on the flatbed of a scanner. The WIA minidriver creates and maintains this property. 
            The SheetFeederRegistration property indicates how a document is horizontally positioned on the scanning head of a handheld or sheet-fed scanner. You can use SheetFeederRegistration to predict where across the scanning head a document is placed.
            For scanners that support more than one scanning head, the SheetFeederRegistration property is relative to the topmost scanning head. This property is mandatory for sheet-fed, scroll-fed, and handheld scanners.
            Versions: Available in Windows Vista and later operating systems. For Windows XP, use the WIA_DPS_SHEET_FEEDER_REGISTRATION property instead.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.HorizontalOpticalResolution">
      <summary>
            [READ ONLY] The HorizontalOpticalResolution property contains the highest-supported horizontal optical resolution of a device, in dots per inch (dpi). The WIA minidriver creates and maintains this property.
            Versions: Available in Windows Vista and later operating systems. For Windows XP, use the WIA_DPS_OPTICAL_XRES property instead.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.VerticalOpticalResolution">
      <summary>
            [READ ONLY] The VerticalOpticalResolution property contains the highest-supported vertical optical resolution of a device, in dots per inch (dpi). The WIA minidriver creates and maintains this property.
            Versions: Available in Windows Vista and later operating systems. For Windows XP, use the WIA_DPS_OPTICAL_YRES property instead.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.PageWidth">
      <summary>
            [READ ONLY] The PageWidth property contains the width of the current page selected, in thousandths of an inch (.001). The WIA minidriver creates and maintains this property.
            An application reads PageWidth to determine the physical dimensions of the page that is being scanned. If the extent settings are different from known page sizes, this property reports the width of the page whose WIA_IPS_PAGE_SIZE property is set to WIA_PAGE_CUSTOM.
            PageWidth must be in sync with the value of WIA_IPS_XEXTENT, which reports the width, in pixels, of the page to be scanned.
            Note: The compatibility layer within the WIA service does not add support for the PageWidth property to the ADF item that is translated from a Windows XP WIA device if the property is not supported on the child item of the device. Applications should not expect an ADF item to always support PageWidth and should always check if it is supported at run time. (Typically, applications should check the support for any property to be negotiated.)
            Versions: Available in Windows Vista and later operating systems. For Windows XP, use the WIA_DPS_PAGE_WIDTH property instead.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.PageHeight">
      <summary>
            [READ ONLY] The PageHeight property contains the height, in thousandths of an inch (.001), of the currently selected page. The WIA minidriver creates and maintains this property.
            An application reads PageHeight to determine the physical dimensions of the page that is being scanned. If the extent settings are different from the known page sizes, this property reports the height of the page whose WIA_IPS_PAGE_SIZE property is set to WIA_PAGE_CUSTOM.
            PageHeight must provide a measurement in thousandths of an inch that is equivalent to the pixel value that is reported by WIA_IPS_YEXTENT, which reports the height, in pixels, of the page to be scanned.
            Note: The compatibility layer within the WIA service does not add support for the PageHeight property to the ADF item that is translated from a Windows XP WIA device if the property is not supported on the child item of the device. Applications should not expect that an ADF item will always support PageHeight and should always check if it is supported at run time. (Applications should typically check for this support for any property that is be negotiated.)
            Versions: Available in Windows Vista and later operating systems. For Windows XP, use the WIA_DPS_PAGE_HEIGHT property instead.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Preview">
      <summary>
            [READ ONLY] The Preview property indicates the preview mode for a device. 
            An application sets Preview to place a device into a preview mode. 
            Versions: Available in Windows Vista and later operating systems. For Windows XP, use the WIA_DPS_PREVIEW property instead.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.ShowPreviewControl">
      <summary>
            [READ ONLY] The ShowPreviewControl property indicates whether an item needs a preview control displayed to a user. The WIA minidriver creates and maintains this property.
            You can use the ShowPreviewControl property to help control devices that cannot preview. For example, some feeder-driven devices cannot reload the paper for a preview scan.
            Versions: Available in Windows Vista and later operating systems. For Windows XP, use the WIA_DPS_SHOW_PREVIEW_CONTROL property instead.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.SupportsChildItemCreation">
      <summary>
            [READ ONLY] The SupportsChildItemCreation property indicates if a device supports the creation of child items. The WIA minidriver creates and maintains this property
            Items that support the WIA_IPS_SEGMENTATION property and the WIA_USE_SEGMENTATION_FILTER value must also support the SupportsChildItemCreation property and have it set to TRUE.
            Versions: Available in Windows Vista and later operating systems.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.PreviewType">
      <summary>
            [READ ONLY] The PreviewType property indicates if WIA_IPA_DATATYPE and WIA_IPA_DEPTH are changed, without having to request a new preview scan. The WIA minidriver creates and maintains this property.
            Note: PreviewType should describe only the WIA_IPA_DATATYPE and WIA_IPA_DEPTH properties.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.TransferCapabilities">
      <summary>
            Transfer Capabilities
            The TransferCapabilities property indicates if a device can transfer parent and child items together. The WIA minidriver creates and maintains this property.
            Versions: Available in Windows Vista and later operating systems.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.AccessRights">
      <summary>
            The AccessRights property contains the access rights for a WIA item. 
            Access rights control the ability of an application to delete items in the WIA item tree. The WIA minidriver creates and maintains the AccessRights property.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.DataType">
      <summary>
            The DataType property contains the current data type setting for a device. A WIA minidriver creates and maintains this property.
            An application reads the DataType property to determine the data type of an image. The application writes this property to set the current data type of the image that is about to be transferred. 
            The DataType property usually contains a single value for cameras.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Depth">
      <summary>
            The Depth property contains the bit depth setting of an image. The WIA minidriver creates and maintains this property.
            An application reads the Depth property to determine the bit depth setting of an image. The application might also set this value to the desired bit depth. 
            If you can set the device to only a single value, create a WIA_PROP_LIST type and place the valid value in it.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Format">
      <summary>
            The Format property contains the current format of the image that is about to be transferred. The WIA minidriver creates and maintains this property.
            If you can set the device to only a single value, create a WIA_PROP_LIST type, and place the valid value in it.
            All WIA 2.0 minidrivers must set the initial value of this property to its default value, which is WiaImgFmt_BMP.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Compression">
      <summary>
            The Compression property contains the current compression type that is used. The WIA minidriver creates and maintains this property.
            An application reads the Compression property to determine the image compression type, or the application sets this property to configure the compression setting.
            Note: When the file format is WiaImgFmt_XPS or WiaImgFmt_PDFA, WIA_COMPRESSION_NONE means €œnot defined€; the device cannot choose the internal compression (if any) for images that are stored in these two document formats.
            All WIA 2.0 minidrivers must set the initial value of this property to its default value, which is WIA_COMPRESSION_NONE.
            The access rights of the Compression property are read/write for all image acquisitions but read-only for stored image items.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.MediaType">
      <summary>
            The MediaType property contains the method setting for image transfer . The WIA minidriver creates and maintains this property.
            An application reads the MediaType property to determine the minidriver's method of data transfer.
            All WIA 2.0 minidrivers must set the initial value of this property to its default value, which is TYMED_FILE.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Planar">
      <summary>
            The Planar property contains image data packing options. The WIA minidriver creates and maintains this property.
            An application reads Planar to determine the image packing options or sets the current image packing options. 
            If a device can be set to only a single value, you can implement the Planar property as WIA_PROP_NONE and read-only.
            Versions: Obsolete in Windows Vista and later operating system.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.CurrentIntent">
      <summary> 
            The CurrentIntent property contains the current settings for an application's intended use of an image. The WIA minidriver creates and maintains this property.
            A driver uses the intent settings to pre-set item properties based on an application's intended use of an image. These properties might include, for example, maximum quality and minimum size.
            The driver chooses the bit depth, in dots per inch, and other settings that it determines are appropriate for the selected intent. The application must read the current settings to determine which properties were changed.
            An application sets the WIA_IPS_CUR_INTENT property to auto-set the WIA properties for specific acquisition intent. Note that flags can be combined with a bitwise OR operator, but an image cannot be both grayscale and color.
            WIA_IPS_CUR_INTENT is required for all image acquisition enabled items; it is not available for storage items or stored image items.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.HorizontalResolution">
      <summary>
            The HorizontalResolution property contains the current horizontal resolution, in pixels per inch, for a device. 
            An application sets the HorizontalResolution property to set the horizontal resolution. The WIA minidriver creates and maintains this property.
            If a device can be set to only a single value, create a WIA_PROP_LIST type and place the valid value in it. This situation also applies when one resolution setting depends on another resolution. (For example, the vertical resolution can depend on the horizontal resolution.)
            HorizontalResolution is required for all image acquisition-enabled items and stored image items; it is not available for storage items.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.VerticalResolution">
      <summary>
            The VerticalResolution property contains the current vertical resolution setting, in pixels per inch, for a device. 
            An application sets the VerticalResolution property to set the vertical resolution. The WIA minidriver creates and maintains this property. 
            If a device can be set to only a single value, create a WIA_PROP_LIST type and place the valid value in it. This situation also applies when one resolution setting depends on another resolution. (For example, the vertical resolution can depend on the horizontal resolution.)
            VerticalResolution is required for all image acquisition-enabled items and stored image items; it is not available for storage items.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.HorizontalStartPosition">
      <summary>
            The HorizontalStartPosition property contains the x-coordinate, in pixels, of the upper-left corner of a selected image. The WIA minidriver creates and maintains this property.
            An application sets the HorizontalStartPosition property to mark the upper-left corner of a selection area.
            HorizontalStartPosition is required for all image acquisition-enabled items and child items of these items; this property is not available for storage items or stored image items.
            When a fixed page size is set, the driver has to set the WIA_IPS_XEXTENT, HorizontalStartPosition, WIA_IPS_YEXTENT,  and WIA_IPS_YPOS properties to match the page size dimensions and a "0" origin. For center document alignment, the driver has to set HorizontalStartPosition to ((scan area width - document width) / 2) * resolution [DPI]) and WIA_IPS_YPOS to ((scan area height - document height) / 2) * resolution [DPI]).
            When the origin or one extent is changed, the driver has to update WIA_IPS_PAGE_SIZE to CUSTOM_SIZE and the WIA_IPS_PAGE_WIDTH and WIA_IPS_PAGE_HEIGHT properties to match the scan area extents. Orientation and rotation should not affect these properties, unless an orientation change (not a rotation change) renders the origin or one extent outside of the available document scan area.
            A driver must also update the WIA_IPS_XEXTENT, HorizontalStartPosition, WIA_IPS_YEXTENT, and WIA_IPS_YPOS properties when the WIA_IPS_XRES and WIA_IPS_YRES properties are changed.
            Note: Flatbed and Film child items are required to support only the WIA_IPS_XEXTENT, HorizontalStartPosition, WIA_IPS_XRES, WIA_IPS_YEXTENT, WIA_IPS_YPOS, and WIA_IPS_YRES properties. All other properties, required or optional for their parent (the base Flatbed or Film items), are only optional for these items. The only exceptions are the WIA_IPA_ITEM_Xxx properties, which are required for all items.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.VerticalStartPosition">
      <summary>
            The VerticalStartPosition property contains the current y-coordinate, in pixels, of the upper-left corner of a selected image. The WIA minidriver creates and maintains this property.
            An application sets the VerticalStartPosition property to mark the upper-left corner of a selection area.
            VerticalStartPosition is required for all image acquisition-enabled items and child items of these items; this property is not available for storage items or stored image items.
            When a fixed page size is set, the driver has to set the WIA_IPS_XEXTENT, WIA_IPS_XPOS, WIA_IPS_YEXTENT,  and VerticalStartPosition properties to match the page size dimensions and a "0" origin. For center document alignment, the driver has to set WIA_IPS_XPOS to ((scan area width - document width) / 2) * resolution [DPI]) and VerticalStartPosition to ((scan area height - document height) / 2) * resolution [DPI]).
            When the origin or one extent is changed, the driver has to update the WIA_IPS_PAGE_SIZE property to CUSTOM_SIZE and the WIA_IPS_PAGE_WIDTH and WIA_IPS_PAGE_HEIGHT properties to match the scan area extents. Orientation and rotation should not affect these properties, unless an orientation change (not a rotation change) renders the origin or one extent outside of the available document scan area.
            A driver must also update WIA_IPS_XEXTENT, WIA_IPS_XPOS, WIA_IPS_YEXTENT, and VerticalStartPosition properties when the WIA_IPS_XRES and WIA_IPS_YRES properties are changed.
            Note: Flatbed and Film child items are required to support only the WIA_IPS_XEXTENT, WIA_IPS_XPOS, WIA_IPS_XRES, WIA_IPS_YEXTENT, VerticalStartPosition, and WIA_IPS_YRES properties. All other properties, required or optional for their parent (the base Flatbed or Film items), are only optional for these items. The only exceptions are the WIA_IPA_ITEM_Xxx properties, which are required for all items.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.HorizontalExtent">
      <summary>
            Horizontal Extent
            The HorizontalExtent property contains the current width, in pixels, of a selected image to acquire. 
            An application sets the HorizontalExtent property to mark the upper-left corner (that is, the width) of the selection area to acquire. HorizontalExtent must agree with the WIA_IPA_PIXELS_PER_LINE property. The minidriver creates and maintains this property.
            HorizontalExtent is required for all image acquisition enabled items and child items of these items; this property is not available for storage items or stored image items.
            When a fixed page size is set, the driver has to set the HorizontalExtent, WIA_IPS_XPOS, WIA_IPS_YEXTENT, and WIA_IPS_YPOS properties to match the page size dimensions and a "0" origin. For center document alignment, the driver has to set WIA_IPS_XPOS to ((scan area width - document width) / 2) * resolution [DPI]) and WIA_IPS_YPOS to ((scan area height - document height) / 2) * resolution [DPI]).
            When the origin or one extent is changed, the driver has to update the WIA_IPS_PAGE_SIZE property to CUSTOM_SIZE and the WIA_IPS_PAGE_WIDTH and WIA_IPS_PAGE_HEIGHT properties to match the scan area extents. Orientation and rotation should not affect these properties, unless an orientation change (not a rotation change) renders the origin or one extent outside of the available document scan area.
            A driver must also to update the HorizontalExtent, WIA_IPS_XPOS, WIA_IPS_YEXTENT, and WIA_IPS_YPOS properties when WIA_IPS_XRES and WIA_IPS_YRES are changed.
            Note: Flatbed and Film child items must support only the HorizontalExtent, WIA_IPS_XPOS, WIA_IPS_XRES, WIA_IPS_YEXTENT, WIA_IPS_YPOS, and WIA_IPS_YRES properties. All other properties, required or optional for their parent (the base Flatbed or Film items), are only optional for these items. The only exceptions are the WIA_IPA_ITEM_Xxx properties, which are required for all items.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.VerticalExtent">
      <summary>
            Vertical Extent
            The VerticalExtent property contains the current height, in pixels, of a selected image to acquire. 
            An application sets the VerticalExtent property to mark the upper-left corner (that is, the height) of a selection area to acquire. VerticalExtent must agree with the value of the WIA_IPA_NUMBER_OF_LINES property. The WIA minidriver creates and maintains this property.
            VerticalExtent is required for all image acquisition enabled items and child items of these items; this property is not available for storage items or stored image items.
            When a fixed page size is set, the driver has to set the WIA_IPS_XEXTENT, WIA_IPS_XPOS, VerticalExtent, and WIA_IPS_YPOS properties to match the page size dimensions and a "0" origin. For center document alignment, the driver has to set WIA_IPS_XPOS to ((scan area width - document width) / 2) * resolution [DPI]) and WIA_IPS_YPOS to ((scan area height - document height) / 2) * resolution [DPI]).
            When the origin or one extent is changed, the driver has to update the WIA_IPS_PAGE_SIZE to CUSTOM_SIZE and the WIA_IPS_PAGE_WIDTH and WIA_IPS_PAGE_HEIGHT properties to match the scan area extents. Orientation and rotation should not affect these properties, unless an orientation change (not a rotation change) renders the origin or one extent outside of the available document scan area.
            A driver must also update the WIA_IPS_XEXTENT, WIA_IPS_XPOS, VerticalExtent, and WIA_IPS_YPOS properties when the WIA_IPS_XRES and WIA_IPS_YRES properties are changed.
            Note: Flatbed and Film child items are required to support only the WIA_IPS_XEXTENT, WIA_IPS_XPOS, WIA_IPS_XRES, VerticalExtent, WIA_IPS_YPOS, and WIA_IPS_YRES properties. All other properties, required or optional for their parent (the base Flatbed or Film items), are only optional for these items. The only exceptions are the WIA_IPA_ITEM_Xxx properties, which are required for all items.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.PhotometricInterpretation">
      <summary>
            The PhotometricInterpretation property contains the current setting for white and black pixels. The WIA minidriver creates and maintains this property.
            An application reads the PhotometricInterpretation property to determine the value assigned to white or black pixels (depending on what the application is doing). 
            If a device can be set to only a single value, create a WIA_PROP_LIST type, and place the valid value in it.
            The PhotometricInterpretation property is required for all image acquisition items and stored images.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Brightness">
      <summary>
            The Brightness property contains the current hardware brightness setting for a device.
            An application sets the Brightness property to the hardware's brightness value. The WIA minidriver creates and maintains this property.
            Values for Brightness should be mapped in a range from ˆ’1000 through 1000, where 1000 corresponds to the maximum brightness, 0 corresponds to normal brightness, and ˆ’1000 corresponds to the minimum brightness.
            Brightness is required for all image acquisition items.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Contrast">
      <summary>
            The Contrast property contains the current hardware contrast setting for a device.
            An application sets the Contrast property to the hardware's contrast value. The WIA minidriver creates and maintains this property.
            Values for Contrast should be mapped in a range from ˆ’1000 through 1000, where ˆ’1000 corresponds to the minimum contrast, 0 corresponds to normal contrast, and 1000 corresponds to the maximum contrast.
            Contrast is required for all image acquisition items.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Orientation">
      <summary>
            The Orientation property describes the current orientation of the document to scan. The WIA minidriver creates and maintains this property. 
            An application sets the Orientation property to define the original orientation of a page or image to be acquired. For more information about how to use Orientation, see WIA_DPS_PAGE_SIZE.
            The Orientation property describes the orientation of the document to scan. This property affects the current scan frame and available page sizes. 
            Orientation is different from the WIA_IPS_ROTATION property, which refers to a rotation that is applied to an image after it is scanned. So, a ROT180 value for Orientation is different from a ROT180 value for WIA_IPS_ROTATION. For Orientation, ROT180 describes the orientation of the physical document to scan, relative to the scan direction, and for WIA_IPS_ROTATION, ROT180 describes the rotation to apply to an image after it is scanned.
            The Orientation property is required for ADF items and optional for all other image acquisition items.
            Note: The compatibility layer within the WIA service does not add support for Orientation to the ADF item that is translated from a Microsoft Windows XP WIA device if the property is not supported on the child item of the device. Applications should not expect that an ADF item will always support this property and should always check if Orientation is supported at run time.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Rotation">
      <summary>
            The Rotation property contains the current rotation setting for image rotation, if it is implemented. The WIA minidriver creates and maintains this property. 
            An application sets the Rotation property to inform a driver how much (if at all) to rotate an image before the driver returns it to the application. 
            The WIA minidriver is responsible for rotating image data before sending it back to the application. The application is responsible for checking the image headers to see the newly rotated values.
            It can be difficult to understand the effect of rotation on the current image's selection area (which is defined by the WIA_IPS_XPOS, WIA_IPS_YPOS, WIA_IPS_XEXTENT, and WIA_IPS_YEXTENT properties). 
            Selection area refers to the selected area on the physical scanner bed that an image is be acquired from. The Rotation property does not modify the selection area. The driver applies a counterclockwise rotation according to Rotation only after the driver has acquired the appropriate selection area. Rotation does affect the dimensions of the output image, so these dimensions must be reflected in the resulting image's data header.
            WIA_IPS_YEXTENT is not related to WIA_IPS_ORIENTATION. WIA_IPS_ORIENTATION describes the orientation of the document to be scanned relative to the direction of the scan; in contrast, Rotation describes the rotation that is to be applied to an image after it is scanned. 
            WIA_IPS_ORIENTATION can impact the area to be scanned. Not all page sizes are available in both landscape and portrait, and the extents of the image from an change in WIA_IPS_ORIENTATION could crop the image. Rotation does not impact the image extents and is not related to the orientation of the document that is to be scanned.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Threshold">
      <summary>
            The Threshold property contains the current hardware threshold setting for a device. The WIA minidriver creates and maintains this property.
            You should map values for the Threshold property in a range from 0 through 255. The default value is 128.
            An application sets Threshold to change the hardware threshold value. This value is valid only if the WIA_IPA_DATATYPE property is equal to WIA_DATA_THRESHOLD. If a device does not allow WIA_DATA_THRESHOLD to be changed, it should report the default value of 128.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.DeskewX">
      <summary>
            The DeskewX property, together with the WIA_IPS_DESKEW_Y property, describes the upper two corners of a skewed image. The WIA minidriver creates and maintains this property. 
            The DeskewX and WIA_IPS_DESKEW_Y properties describe where the two upper corners of a skewed image are located within the bounding rectangle that WIA_IPS_XPOS, WIA_IPS_YPOS, WIA_IPS_XEXTENT, and WIA_IPS_YEXTENT properties define.
            The valid values for DeskewX must be between 0 and (WIA_IPS_XEXTENT - 1). A value of 0 means that no skew correction should be performed.
            DeskewX contains the number of pixels in the x-direction from WIA_IPS_XPOS to the x-coordinate of the uppermost corner of the image to be corrected.
            Versions: Available in Windows Vista and later operating systems.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.DeskewY">
      <summary>
            The DeskewY property, together with the WIA_IPS_DESKEW_X property, describes the upper two corners of a skewed image. The WIA minidriver creates and maintains this property. 
            The WIA_IPS_DESKEW_X and DeskewY properties describe where the two upper corners of a skewed image are located within the bounding rectangle that the WIA_IPS_XPOS, WIA_IPS_YPOS, WIA_IPS_XEXTENT, and WIA_IPS_YEXTENT properties define.
            The valid values for DeskewY must be between 0 and (WIA_IPS_YEXTENT - 1). A value of 0 means that no deskew should be performed.
            DeskewY contains the number of pixels in the y-direction from WIA_IPS_YPOS to the y-coordinate of the leftmost corner of the image to be deskewed.
            Versions: Available in Windows Vista and later operating systems.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Segmentation">
      <summary>
            You must implement Segmentation  for scanner flatbed and film items if they support the creation of child items with a segmentation filter or if the driver itself creates child items for fixed frames.
            You can package a driver with a segmentation filter and still have Segmentation set to WIA_DONT_USE_SEGMENTATION_FILTER for one of its items (for example, the film item). This situation could occur if the scanner uses fixed frames for film scanning, but not for scanning from the flatbed.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.DocumentHandlingSelect">
      <summary>
            The DocumentHandlingSelect property contains the current scanner acquisition source and mode.
            An application reads the DocumentHandlingSelect property to determine the current acquisition source of a scanner, or the application writes this property to set the source and mode of the scanner. In addition, applications use this property to enable and disable duplexer functionality. The WIA minidriver creates and maintains this property.
            The values DUPLEX and FRONT_ONLY are mutually exclusive - set one or the other, but not both.
            A WIA 2.0 minidriver must set the initial value of this property to its default value, FRONT_ONLY. Failure to observe this requirement might make the minidriver incompatible with the WIA 1.0 common scan dialog and with some WIA 1.0 applications.
            Versions: Available in Windows Vista and later operating systems. For Windows XP, use the identical WIA_DPS_DOCUMENT_HANDLING_SELECT property.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Pages">
      <summary>
            The Pages property contains the current number of pages to acquire from an automatic document feeder.
            An application reads Pages to determine a document feeder's page capacity. The application sets this property to the maximum number of pages it is willing to scan in the current WIA session. The WIA minidriver creates and maintains this property.
            Note: If duplex mode is enabled (that is, if WIA_IPS_DOCUMENT_HANDLING_SELECT is set to FEEDER | DUPLEX), Pages is still equal to the number of pages to scan.One sheet of paper will automatically contain two pages if DUPLEX is enabled, even if the back side of the page is blank.
            If you set Pages to 1, the scanner will process one of the sides of the page. We recommend that, if a scanner is unable to scan only one side of a page while in duplex mode, you should change the Pages value for the Inc member of the WIA_PROPERTY_INFO structure to 2. With this value, the application must request pages in multiples of two. A value of zero means that all pages that are currently loaded into the document feeder are to be scanned.
            Versions: Available in Windows Vista and later operating systems. For Windows XP, use the WIA_DPS_PAGES property instead.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.PageSize">
      <summary>
            The PageSize property contains the size of the page that is currently selected to be scanned. 
            To select the dimensions of the page to scan, an application sets the PageSize property. The WIA minidriver creates and maintains this property.
            Versions: Available in Windows Vista and later operating systems. For Windows XP, use the WIA_DPS_PAGE_SIZE property instead.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.FilmScanMode">
      <summary>
            The FilmScanMode property contains the current film scan configuration settings. The WIA minidriver creates and maintains this property. 
            This property is required for the root item in the WIA item tree of film scanners and transparency adapters.
            Versions: Available in Windows Vista and later operating systems. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.Lamp">
      <summary>
            The Lamp property contains the current configuration setting for a scanner's lamp. The WIA minidriver creates and maintains this property. 
            The Lamp property enables the programmatic control of the scanner lamp; this lamp could be a dedicated lamp (for a transparency adapter) or the main scanner lamp (for dedicated film scanners).
            Versions: Available in Windows Vista and later operating systems. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.AutoOff">
      <summary>
            The AutoOff property contains the current configuration setting for automatically shutting off a scanner's lamp. The WIA minidriver creates and maintains this property. 
            The AutoOff property enables the programmatic control of how long a lamp will be kept on when a scanner is not in use; this lamp could be a dedicated lamp (for a transparency adapter) or the main scanner lamp (for dedicated film scanners).
            You should implement AutoOff only if the device supports an automatic lamp-off feature.
            The valid values for AutoOff range from 0 through 4095 seconds.
            Versions: Available in Windows Vista and later operating systems. 
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.AutoDeskew">
      <summary>
            The AutoDeskew property indicates if a device should use automatic skew correction. The WIA minidriver creates and maintains this property.
            Versions: Available in Windows Vista and later operating systems.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.HorizontalScaling">
      <summary>
            The HorizontalScaling property indicates if scaling along the x-axis should be applied to a scan. The WIA minidriver creates and maintains this property.
            Valid values for the HorizontalScaling property range from 1 through 65535.
            HorizontalScaling indicates only scaling along the x-axis. If you want to scale an image uniformly, you must set a similar value in HorizontalScaling and in the WIA_IPS_YSCALING property.
            Consider the following examples:
            100, no scaling (1x, 100%). The image is not changed.
            050, 1/2 scaling (1/2x, 50%). The image size is reduced along the x-axis by 50% (1/2 the original size).
            200, 2x scaling (200%). The image size is enlarged along the x-axis by 200% (double).
            Versions: Available in Windows Vista and later operating systems.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.VerticalScaling">
      <summary>
            The VerticalScaling property indicates if scaling along the y-axis should be applied to a scan. The WIA minidriver creates and maintains this property.
            Valid values for the VerticalScaling property range from 1 through 65535.
            VerticalScaling indicates only scaling along the y-axis. If you want to scale an image uniformly, you must set a similar value in VerticalScaling and in the WIA_IPS_XSCALING property.
            Consider the following examples:
            100, no scaling (1x, 100%). The image is not changed.
            050, 1/2 scaling (1/2x, 50%). The image size is reduced along the y-axis by 50% (1/2 the original size).
            200, 2x scaling (200%). The image size is enlarged along the y-axis by 200% (double).
            Versions: Available in Windows Vista and later operating systems.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.WIA.ImageSettings.FilmNodeName">
      <summary>
            Enables specification of a particular film scanning attachment when there is more than one.
            This property is required for the WIA_CATEGORY_FILM items when there are multiple film scan items. If the device supports only one root scanner film item then this property is optional. 
            Note: This property is supported only by Windows Vista and later.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes">
      <summary>
            Camera capability types enumeration.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.PanDegrees">
      <summary>
            Pan degrees property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.TiltDegrees">
      <summary>
            Tilt degrees property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.RollDegrees">
      <summary>
            Roll degrees property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.ZoomMM">
      <summary>
            Zoom in mm property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.ExposureLGSEC">
      <summary>
            Exposure lg sec property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.Iris10F">
      <summary>
            Iris 10f property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.FocalLengthMM">
      <summary>
            Focal length in mm property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.Flash">
      <summary>
            Flash property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.Brightness">
      <summary>
            Brightness property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.Contrast">
      <summary>
            Contrast property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.Hue">
      <summary>
            Hue property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.Saturation">
      <summary>
            Saturations property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.Sharpness">
      <summary>
            Sharpness property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.Gamma">
      <summary>
            Gamma property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.ColorEnable">
      <summary>
            Color enable property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.WhiteBalance">
      <summary>
            White balance property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.BackLightCompensation">
      <summary>
            Back light compensation property.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.DirectShow.ICCameraCapabilityTypes.Gain">
      <summary>
            Gain property.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.DirectShow.ICCamera">
      <summary>
            Image Components Camera Class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.DirectShow.ICCamera.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.DirectShow.ICCamera.#ctor(System.Object)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.Name">
      <summary>
            Get/Set Camera name.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.Fps">
      <summary>
            Get/Set the Frames per second limit.
            </summary>
      <remarks> -1 means no limit.</remarks>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.CaptureWidth">
      <summary>
            Get/Set the width of the image captured.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.CaptureHeight">
      <summary>
            Get/Set the height of the image captured.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.CaptureBitsPerPixel">
      <summary>
            Get/Set the bits per pixel of image captured.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.HasFrameLimit">
      <summary>
            Get Has frames per second limit.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.FlipHorizontal">
      <summary>
            Get/Set the Flip Horizontal value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.FlipVertical">
      <summary>
            Get/Set the Flip Horizontal value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.RotateFlip">
      <summary>
            Get/Set Rotate flip value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.PanDegrees">
      <summary>
            Get/Set Pan degrees camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.TiltDegrees">
      <summary>
            Get/Set Tilt degrees camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.RollDegrees">
      <summary>
            Get/Set Roll degrees camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.ZoomMM">
      <summary>
            Get/Set Zoom in mm camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.ExposureLGSEC">
      <summary>
            Get/Set Exposure LG/Sec camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.Iris10F">
      <summary>
            Get/Set Iris 10F camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.FocalLengthMM">
      <summary>
            Get/Set Focal length in mm camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.Flash">
      <summary>
            Get/Set Flash camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.Brightness">
      <summary>
            Get/Set Brightness camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.Contrast">
      <summary>
            Get/Set Contrast camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.Hue">
      <summary>
            Get/Set Hue camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.Saturation">
      <summary>
            Get/Set Saturation camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.Sharpness">
      <summary>
            Get/Set Sharpness camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.Gamma">
      <summary>
            Get/Set GHamma camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.ColorEnable">
      <summary>
            Get/Set Color enable camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.WhiteBalance">
      <summary>
            Get/Set White balance camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.BackLightCompensation">
      <summary>
            Get/Set PBack light compensation camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.Gain">
      <summary>
            Get/Set Gain camera value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCamera.CaptureSizes">
      <summary>
            Get Camera capture sizes.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.DirectShow.ICCamera.ToString">
      <summary>
            Returns the camera name as the ToString implementation
            </summary>
      <returns>The name of the camera.</returns>
    </member>
    <member name="T:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyValue">
      <summary>
            Direct Show camera property value class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyValue.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyValue.#ctor(System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="parent">Parent object.</param>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyValue.Value">
      <summary>
            Get/Set Capability property value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyValue.IsAuto">
      <summary>
            Get/Set Is Capability property auto.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyValue.IsManual">
      <summary>
            Get/Set Is Capability property manual.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyValue.IsActualValue">
      <summary>
            Get/Set Is Capability property actual value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyValue.IsPercentageValue">
      <summary>
            Get/Set Is Capability property percentage value.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyRange">
      <summary>
            Direct Show camera property range class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyRange.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyRange.#ctor(System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="parent">Parent object.</param>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyRange.Minimum">
      <summary>
            Get Range property minimum value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyRange.Maximum">
      <summary>
            Get Range property maximum value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyRange.Range">
      <summary>
            Get Range property range value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyRange.DomainSize">
      <summary>
            Get Range property domain size value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyRange.Step">
      <summary>
            Get Range property step value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyRange.Defaults">
      <summary>
            Get Range property defaults value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyRange.IsAuto">
      <summary>
            Get Range property is auto value.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraPropertyRange.IsManual">
      <summary>
            Get Range property is manual value.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.DirectShow.ICCameraCaptureSize">
      <summary>
            Direct Show camera capture size class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.DirectShow.ICCameraCaptureSize.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraCaptureSize.Width">
      <summary>
            Get Capture width.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraCaptureSize.Height">
      <summary>
            Get Capture height.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraCaptureSize.ColorDepth">
      <summary>
            Get Capture color depth.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.DirectShow.ICCameraCapability">
      <summary>
            Direct Show camera capability class.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.DirectShow.ICCameraCapability.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:ImageComponents.Core.Imaging.DirectShow.ICCameraCapability.#ctor(System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="parent">Parent object.</param>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraCapability.IsSupported">
      <summary>
            Get/Set Is Camera capability supported.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraCapability.IsFullySupported">
      <summary>
            Get/Set Is Camera capability fully supported.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraCapability.IsGetSupported">
      <summary>
            Get/Set Is Camera capability get supported.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraCapability.IsSetSupported">
      <summary>
            Get/Set Is Camera capability set supported.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraCapability.IsGetRangeSupported">
      <summary>
            Get/Set Is Camera capability get range supported.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraCapability.RangeValue">
      <summary>
            Get camera capability range values.
            </summary>
    </member>
    <member name="P:ImageComponents.Core.Imaging.DirectShow.ICCameraCapability.Value">
      <summary>
            Get/Set camera capability values.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageFormat">
      <summary>
            Image Format
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.UNKNOWN">
      <summary>
            Unknown format
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.BMP">
      <summary>
            Windows or OS/2 Bitmap File (*.BMP)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.ICO">
      <summary>
            Windows Icon (*.ICO)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.JPEG">
      <summary>
            Independent JPEG Group (*.JPG, *.JIF, *.JPEG, *.JPE)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.JNG">
      <summary>
            JPEG Network Graphics (*.JNG)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.KOALA">
      <summary>
            Commodore 64 Koala format (*.KOA)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.LBM">
      <summary>
            Amiga IFF (*.IFF, *.LBM)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.IFF">
      <summary>
            Amiga IFF (*.IFF, *.LBM)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.MNG">
      <summary>
            Multiple Network Graphics (*.MNG)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.PBM">
      <summary>
            Portable Bitmap (ASCII) (*.PBM)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.PBMRAW">
      <summary>
            Portable Bitmap (BINARY) (*.PBM)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.PCD">
      <summary>
            Kodak PhotoCD (*.PCD)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.PCX">
      <summary>
            Zsoft Paintbrush PCX bitmap format (*.PCX)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.PGM">
      <summary>
            Portable Graymap (ASCII) (*.PGM)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.PGMRAW">
      <summary>
            Portable Graymap (BINARY) (*.PGM)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.PNG">
      <summary>
            Portable Network Graphics (*.PNG)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.PPM">
      <summary>
            Portable Pixelmap (ASCII) (*.PPM)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.PPMRAW">
      <summary>
            Portable Pixelmap (BINARY) (*.PPM)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.RAS">
      <summary>
            Sun Rasterfile (*.RAS)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.TARGA">
      <summary>
            Truevision Targa files (*.TGA, *.TARGA)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.TIFF">
      <summary>
            Tagged Image File Format (*.TIF, *.TIFF)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.WBMP">
      <summary>
            Wireless Bitmap (*.WBMP)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.PSD">
      <summary>
            Adobe Photoshop (*.PSD)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.CUT">
      <summary>
            Dr. Halo (*.CUT)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.XBM">
      <summary>
            X11 Bitmap Format (*.XBM)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.XPM">
      <summary>
            X11 Pixmap Format (*.XPM)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.DDS">
      <summary>
            DirectDraw Surface (*.DDS)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.GIF">
      <summary>
            Graphics Interchange Format (*.GIF)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.HDR">
      <summary>
            High Dynamic Range (*.HDR)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.FAXG3">
      <summary>
            Raw Fax format CCITT G3 (*.G3)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.SGI">
      <summary>
            Silicon Graphics SGI image format (*.SGI)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.EXR">
      <summary>
            OpenEXR format (*.EXR)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.J2K">
      <summary>
            JPEG-2000 format (*.J2K, *.J2C)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.JP2">
      <summary>
            JPEG-2000 format (*.JP2)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.PFM">
      <summary>
            Portable FloatMap (*.pfm)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.PDF">
      <summary>
            PDF format (*.PDF)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.XPS">
      <summary>
            XPS format (*.XPS)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageFormat.WMF">
      <summary>
            WMF format (*.WMF)
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageCompression">
      <summary>
            Image Compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageCompression.UNKNOWN">
      <summary>
            Unknown compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageCompression.DEFAULT">
      <summary>
            Default compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageCompression.NONE">
      <summary>
            None save compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageCompression.RLE">
      <summary>
            RLE save compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageCompression.CCITT3">
      <summary>
            CCITT3 save compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageCompression.CCITT4">
      <summary>
            CCITT4 save compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageCompression.LZW">
      <summary>
            LZW save compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageCompression.OJPEG">
      <summary>
            OJPG save compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageCompression.JPEG">
      <summary>
            JPEG save compression.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageOutputFormat">
      <summary>
            Image output format.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.DEFAULT">
      <summary>
            Default output format.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.BMP">
      <summary>
            BMP output format.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.ICO">
      <summary>
            Windows Icon (*.ico)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.JPEG">
      <summary>
            JPEG output format.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.JNG">
      <summary>
            JPEG Network Graphics (*.jng)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.PBM">
      <summary>
            Portable Bitmap (ASCII) (*.pbm)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.PGM">
      <summary>
            Portable Graymap (ASCII) (*.pgm)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.PNG">
      <summary>
            PNG output format.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.PPM">
      <summary>
            Portable Pixelmap (ASCII) (*.ppm)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.TARGA">
      <summary>
            truevision Targa files (*.tga, *.targa)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.TIFF">
      <summary>
            TIFF output format.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.WBMP">
      <summary>
            Wireless Bitmap (*.wbmp)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.XPM">
      <summary>
            X11 Pixmap Format (*.xpm).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.GIF">
      <summary>
            GIF output format (*.gif*).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.J2K">
      <summary>
            JPEG-2000 format (*.j2k, *.j2c)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.PFM">
      <summary>
            Portable FloatMap (*.pfm)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.WEBP">
      <summary>
            Web P files (*.webp*).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.JXR">
      <summary>
            JPEG-XR files (*.jxr*)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputFormat.PDF">
      <summary>
            PDF image output format (*.pdf*).
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICPNGImageFlags">
      <summary>
            Image PNG flags.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICPNGImageFlags.DEFAULT">
      <summary>
            Default image flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICPNGImageFlags.BESTSPEED">
      <summary>
            Best speed image flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICPNGImageFlags.BESTCOMPRESSION">
      <summary>
            Best compression image flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICPNGImageFlags.NOCOMPRESSION">
      <summary>
            No compression image flag.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICPNGImageFlags.INTERLACED">
      <summary>
            Interlaced image flag.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICJPEGImageFlags">
      <summary>
            Image JPEG flags.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICJPEGImageFlags.JPEGQUALITY">
      <summary>
            Save with quality.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICJPEGImageFlags.JPEGPROGRESSIVE">
      <summary>
            Save as a progressive-JPEG (use | to combine with other save flags).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICJPEGImageFlags.JPEGSUBSAMPLING411">
      <summary>
            Save with high 4x1 chroma subsampling (4:1:1).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICJPEGImageFlags.JPEGSUBSAMPLING420">
      <summary>
            Save with medium 2x2 medium chroma (4:2:0).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICJPEGImageFlags.JPEGSUBSAMPLING422">
      <summary>
            Save with low 2x1 chroma subsampling (4:2:2).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICJPEGImageFlags.JPEGSUBSAMPLING444">
      <summary>
            Save with no chroma subsampling (4:4:4).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICJPEGImageFlags.JPEGOPTIMIZE">
      <summary>
            On saving, compute optimal Huffman coding tables (can reduce a few percent of file size).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICJPEGImageFlags.JPEGBASELINE">
      <summary>
            save basic JPEG, without metadata or any markers.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICEXRImageFlags">
      <summary>
            Image EXR image flags.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICEXRImageFlags.EXRFLOAT">
      <summary>
            Save data as float instead of as half (not recommended).
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICEXRImageFlags.EXRNONE">
      <summary>
            Save with no compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICEXRImageFlags.EXRZIP">
      <summary>
            Save with zlib compression, in blocks of 16 scan lines.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICEXRImageFlags.EXRPIZ">
      <summary>
            Save with piz-based wavelet compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICEXRImageFlags.EXRPXR24">
      <summary>
            Save with lossy 24-bit float compression.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICEXRImageFlags.EXRB44">
      <summary>
            Save with lossy 44% float compression - goes to 22% when combined with EXRLC.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICEXRImageFlags.EXRLC">
      <summary>
            Save images with one luminance and two chroma channels, rather than as RGB (lossy compression).
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageOutputType">
      <summary>
            Image output type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputType.File">
      <summary>
            File system output type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputType.ByteArray">
      <summary>
            Byte array output type
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputType.MemoryStream">
      <summary>
            Memory stream output type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputType.Base64">
      <summary>
            Base64 stream.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputType.Bitmap">
      <summary>
            System.Drawing.Bitmap image output type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputType.FTP">
      <summary>
            File transfer protocol output type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOutputType.Database">
      <summary>
            Database server output type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageSizeTemplate">
      <summary>
            Image size templates.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_9x11">
      <summary>
            9x11 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_10x11">
      <summary>
            10x11 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_10x14">
      <summary>
            10x14 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_12x11">
      <summary>
            12x11 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_15x11">
      <summary>
            15x11 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A0">
      <summary>
            A0 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A1">
      <summary>
            A1 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A2">
      <summary>
            A2 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A3">
      <summary>
            A3 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A3_Extra">
      <summary>
            A3 Extra Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A3_Rotated">
      <summary>
            A3 Rotated Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A4">
      <summary>
            A4 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A4_Extra">
      <summary>
            A4 Extra Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A4_Plus">
      <summary>
            A4 Plus Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A4_Rotated">
      <summary>
            A4 Rotated Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A5">
      <summary>
            A5 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A5_Extra">
      <summary>
            A5 Extra Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A5_Rotated">
      <summary>
            A5 Rotated Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A6">
      <summary>
            A6 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_A6_Rotated">
      <summary>
            A6 Rotated Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B0_ISO_1000x1414mm">
      <summary>
            B0 ISO (1000 x 1414 mm) Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B0_JIS_1030x1456mm">
      <summary>
            B0 JIS (1030 x 1456 mm) Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B1_ISO_707x1000mm">
      <summary>
            B1 ISO (707 x 1000 mm) Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B1_JIS_728x1030mm">
      <summary>
            B1 JIS (728 x 1030 mm) Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B2_ISO_500x707mm">
      <summary>
            B2 ISO (500 x 707 mm) Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B2_JIS_515x728mm">
      <summary>
            B2 JIS (515 x 728 mm) Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B3_ISO_353x500mm">
      <summary>
            B3 ISO (353 x 500 mm) Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B3_JIS_364x515mm">
      <summary>
            B3 JIS (364 x 515 mm) Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B4_ISO">
      <summary>
            B4 (ISO) Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B4_JIS">
      <summary>
            B4 (JIS) Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B4_JIS_Rotated">
      <summary>
            B4 (JIS) Rotated Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B5_JIS">
      <summary>
            B5 (JIS) Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B5_JIS_Rotated">
      <summary>
            B5 (JIS) Rotated Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B6_JIS">
      <summary>
            B6 (JIS) Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_B6_JIS_Rotated">
      <summary>
            B6 (JIS) Rotated Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_C_size_sheet">
      <summary>
            C size sheet Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_D_size_sheet">
      <summary>
            D size sheet Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_E_size_sheet">
      <summary>
            E size sheet Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope">
      <summary>
            Envelope Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_9">
      <summary>
            Envelope #9 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_10">
      <summary>
            Envelope #10 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_11">
      <summary>
            Envelope #11 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_12">
      <summary>
            Envelope #12 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_14">
      <summary>
            Envelope #14 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_DL">
      <summary>
            Envelope DL Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_C3">
      <summary>
            Envelope C3 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_C4">
      <summary>
            Envelope C4 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_C5">
      <summary>
            Envelope C5 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_C6">
      <summary>
            Envelope C6 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_C65">
      <summary>
            Envelope C65 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_B4">
      <summary>
            Envelope B4 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_B5">
      <summary>
            Envelope B5 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_B6">
      <summary>
            Envelope B6 Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_Monarch">
      <summary>
            Envelope Monarch Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Envelope_Invite">
      <summary>
            Envelope Invite Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Executive">
      <summary>
            Executive Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Folio">
      <summary>
            Folio Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_F_size_sheet">
      <summary>
            F size sheet Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Japanese_Postcard">
      <summary>
            Japanese Postcard Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Japanese_Double_Postcard">
      <summary>
            Japanese Double Postcard Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Ledger">
      <summary>
            Ledger Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Legal">
      <summary>
            Legal Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Legal_Extra">
      <summary>
            Legal Extra Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Letter">
      <summary>
            Letter Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Letter_Plus">
      <summary>
            Letter Plus Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Letter_Extra">
      <summary>
            Letter Extra Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Quarto">
      <summary>
            Quarto Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Square_64x64mm">
      <summary>
            Square 64 x 64 mm Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Square_128x128mm">
      <summary>
            Square 128 x 128 mm Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Square_256x256mm">
      <summary>
            Square 256 x 256 mm Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Square_512x512mm">
      <summary>
            Square 512 x 512 mm Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Statement">
      <summary>
            Statement Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_SuperA">
      <summary>
            SuperA Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_SuperB">
      <summary>
            SuperB Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Tabloid">
      <summary>
            Tabloid Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_Tabloid_Extra">
      <summary>
            Tabloid Extra Image size template.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageSizeTemplate.Template_US_Std_Fanfold">
      <summary>
            US Std Fanfold Image size template.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageOCRLanguages">
      <summary>
            Image OCR languages.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.English">
      <summary>
            English OCR Language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.French">
      <summary>
            French OCR Language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Italian">
      <summary>
            Italian OCR Language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.German">
      <summary>
            German OCR Language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Spanish">
      <summary>
            Spanish OCR Language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Dutch">
      <summary>
            Dutch OCR Language.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Portuguese">
      <summary>
            Portuguese OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Ukrainian">
      <summary>
            Ukrainian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Turkish">
      <summary>
            Turkish OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Thai">
      <summary>
            Thai OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Swedish">
      <summary>
            Swedish OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Swahili">
      <summary>
            Swahili OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Serbian">
      <summary>
            Serbian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Albanian">
      <summary>
            Albanian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Slovenian">
      <summary>
            Slovenian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Slovakian">
      <summary>
            Slovakian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Romanian">
      <summary>
            Romanian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Polish">
      <summary>
            Polish OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Norwegian">
      <summary>
            Norwegian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Lithuanian">
      <summary>
            Lithuanian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Korean">
      <summary>
            Korean OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Kannada">
      <summary>
            Kannada OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Icelandic">
      <summary>
            Icelandic OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Indonesian">
      <summary>
            Indonesian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Hindi">
      <summary>
            Hindi OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Hungarian">
      <summary>
            Hungarian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Croatian">
      <summary>
            Croatian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Hebrew">
      <summary>
            Hebrew OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Galician">
      <summary>
            Galician OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Finnish">
      <summary>
            Finnish OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Basque">
      <summary>
            Basque OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Estonian">
      <summary>
            Estonian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Esperanto">
      <summary>
            Esperanto OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Greek">
      <summary>
            Greek OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Danish">
      <summary>
            Danish OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Czech">
      <summary>
            Czech OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Catalan">
      <summary>
            Catalan OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Bulgarian">
      <summary>
            Bulgarian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Belarusian">
      <summary>
            Belarusian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Azerbaijani">
      <summary>
            Azerbaijani OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Arabic">
      <summary>
            Arabic OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Afrikaans">
      <summary>
            Afrikaans OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Japanese">
      <summary>
            Japanese OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Chinese_Simplified">
      <summary>
            Chinese Simplified OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Chinese_Traditional">
      <summary>
            Chinese Traditional OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Russian">
      <summary>
            Russian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Vietnamese">
      <summary>
            Vietnamese OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Frankish">
      <summary>
            Frankish OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Math_Equation">
      <summary>
            Math Equation OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Amharic">
      <summary>
            Amharic OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Assamese">
      <summary>
            Assamese OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Azerbaijani_Cyrillic">
      <summary>
            Azerbaijani - Cyrillic OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Bengali">
      <summary>
            Bengali OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Tibetan">
      <summary>
            Tibetan OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Bosnian">
      <summary>
            Bosnian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Cebuano">
      <summary>
            Cebuano OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Cherokee">
      <summary>
            Cherokee OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Welsh">
      <summary>
            Welsh OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Dzongkha">
      <summary>
            Dzongkha OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.English_Middle">
      <summary>
            English, Middle (1100-1500) OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Persian">
      <summary>
            Persian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.French_Middle">
      <summary>
            French, Middle (ca. 1400-1600) OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Irish">
      <summary>
            Irish OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Greek_Ancient">
      <summary>
            Greek, Ancient (-1453) OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Gujarati">
      <summary>
            Gujarati OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Haitian">
      <summary>
            Haitian; Haitian Creole OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Inuktitut">
      <summary>
            Inuktitut OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Italian_Old">
      <summary>
            Italian - Old OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Javanese">
      <summary>
            Javanese OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Georgian">
      <summary>
            Georgian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Georgian_Old">
      <summary>
            Georgian - Old OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Kazakh">
      <summary>
            Kazakh OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Central_Khmer">
      <summary>
            Central Khmer OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Kirghiz">
      <summary>
            Kirghiz; Kyrgyz OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Kurdish">
      <summary>
            Kurdish OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Lao">
      <summary>
            Lao OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Latin">
      <summary>
            Latin OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Latvian">
      <summary>
            Latvian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Malayalam">
      <summary>
            Malayalam OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Marathi">
      <summary>
            Marathi OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Macedonian">
      <summary>
            Macedonian OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Maltese">
      <summary>
            Maltese OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Malay">
      <summary>
            Malay OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Burmese">
      <summary>
            Burmese OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Nepali">
      <summary>
            Nepali OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Oriya">
      <summary>
            Oriya OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Panjabi">
      <summary>
            Panjabi; Punjabi OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Pushto">
      <summary>
            Pushto; Pashto OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Sanskrit">
      <summary>
            Sanskrit OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Sinhala">
      <summary>
            Sinhala; Sinhalese OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Spanish_Old">
      <summary>
            Spanish; Castilian - Old OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Serbian_Latin">
      <summary>
            Serbian - Latin OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Syriac">
      <summary>
            Syriac OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Tamil">
      <summary>
            Tamil OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Telugu">
      <summary>
            Telugu OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Tajik">
      <summary>
            Tajik OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Tagalog">
      <summary>
            Tagalog OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Tigrinya">
      <summary>
            Tigrinya OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.MIRCE">
      <summary>
            MIRCE encoding font OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.MIRC">
      <summary>
            MIRC encoding font OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Uighur">
      <summary>
            Uighur; Uyghur OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Urdu">
      <summary>
            Urdu OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Uzbek">
      <summary>
            Uzbek OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Uzbek_Cyrillic">
      <summary>
            Uzbek - Cyrillic OCR Language
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRLanguages.Yiddish">
      <summary>
            Yiddish OCR Language
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageOCRType">
      <summary>
            Image OCR type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRType.OEM_TESSERACT_ONLY">
      <summary>
            Run Tesseract only OCR type - legacy.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRType.OEM_CUBE_LSTM_ONLY">
      <summary>
            Cube or Lstm only OCR type - better accuracy, but slower.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRType.OEM_CUBE_LSTM_COMBINED">
      <summary>
            Combine results OCR type - best accuracy.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRType.OEM_DEFAULT">
      <summary>
            Default OCR type.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageOCRPageMode">
      <summary>
            Image OCR page mode.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageMode.PSM_OSD_ONLY">
      <summary>
            Orientation and script detection only.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageMode.PSM_AUTO_OSD">
      <summary>
            Automatic page segmentation with orientation and Script detection.(OSD)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageMode.PSM_AUTO_ONLY">
      <summary>
            Automatic page segmentation, but no OSD, or OCR.
             </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageMode.PSM_AUTO">
      <summary>
            Fully automatic page segmentation, but no OSD.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageMode.PSM_SINGLE_COLUMN">
      <summary>
            Assume a single column of text of variable sizes.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageMode.PSM_SINGLE_BLOCK_VERT_TEXT">
      <summary>
            Assume a single uniform block of vertically aligned text.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageMode.PSM_SINGLE_BLOCK">
      <summary>
            Assume a single uniform block of text. (Default.)
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageMode.PSM_SINGLE_LINE">
      <summary>
            Treat the image as a single text line.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageMode.PSM_SINGLE_WORD">
      <summary>
            Treat the image as a single word.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageMode.PSM_CIRCLE_WORD">
      <summary>
            Treat the image as a single word in a circle.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageMode.PSM_SINGLE_CHAR">
      <summary>
            Treat the image as a single character.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageMode.PSM_COUNT">
      <summary>
            Number of enum entries.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageOCRPageLevel">
      <summary>
            Image OCR page level.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageLevel.RIL_BLOCK">
      <summary>
            Block of text/image/separator line.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageLevel.RIL_PARA">
      <summary>
            Paragraph within a block.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageLevel.RIL_TEXTLINE">
      <summary>
            Line within a paragraph.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageLevel.RIL_WORD">
      <summary>
            Word within a textline.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageLevel.RIL_SYMBOL">
      <summary>
            Symbol/character within a word.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCRPageLevel.RIL_NOTSUPPORTED">
      <summary>
            Not supported.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICImageOCROutputType">
      <summary>
            Image OCR page output type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCROutputType.None">
      <summary>
            Default with the layout output type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCROutputType.UTF8">
      <summary>
            Text string from the internal data structure.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCROutputType.HOCR">
      <summary>
            Make a HTML-formatted string with hOCR markup from the internal * data structures.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCROutputType.AlToText">
      <summary>
             Make an XML-formatted string with ALTO markup from the internal data structures
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCROutputType.TSV">
      <summary>
            Make a TSV-formatted string from the internal data structures.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCROutputType.LSTMBox">
      <summary>
            UTF8 box file for LSTM training from the internal data structure.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCROutputType.Box">
      <summary>
            The recognized text is returned as a UTF8 box file
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCROutputType.WordStrBox">
      <summary>
            Create a UTF8 box file with WordStr strings from the internal data structures
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICImageOCROutputType.UNLV">
      <summary>
            The recognized text is returned as a string which is coded as UNLV format Latin-1 with specific reject and suspect codes.
            </summary>
    </member>
    <member name="T:ImageComponents.Core.Imaging.ICTraceOutputType">
      <summary>
            Trace output type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICTraceOutputType.None">
      <summary>
            None trace output type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICTraceOutputType.DebugWindow">
      <summary>
            Debug window trace output type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICTraceOutputType.File">
      <summary>
            File trace output type.
            </summary>
    </member>
    <member name="F:ImageComponents.Core.Imaging.ICTraceOutputType.EventViewerLog">
      <summary>
            Event viewer output type.
            </summary>
    </member>
  </members>
</doc>